%!PS-Adobe-2.0
%%Creator: dvips(k) 5.92b Copyright 2002 Radical Eye Software
%%Title: talk.dvi
%%Pages: 74
%%PageOrder: Ascend
%%Orientation: Landscape
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Utopia-Bold Utopia-Regular CMTT12 CMSY10 CMMI12 CMR17
%%+ CMEX10 Utopia-Italic MSBM10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -tlandscape talk
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.05.22:1349
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% File  8r.enc as of 2002-03-12 for PSNFSS 9
%
% This is the encoding vector for Type1 and TrueType fonts to be used
% with TeX.  This file is part of the PSNFSS bundle, version 9
% 
% Authors: S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry, W. Schmidt
%
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida + Euro.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (6) /Euro is assigned to 128, as in Windows ANSI
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /Euro /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: Utopia-Italic
%!PS-AdobeFont-1.0: Utopia-Italic 001.001
%%CreationDate: Wed Oct 2 18:58:18 1991
%%VMusage: 34122 41014
%% Utopia is a registered trademark of Adobe Systems Incorporated.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved.Utopia is a registered trademark of Adobe Systems Incorporated.) readonly def
/FullName (Utopia Italic) readonly def
/FamilyName (Utopia) readonly def
/Weight (Regular) readonly def
/ItalicAngle -13 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/UniqueID 36549 def
/FontBBox{-166 -250 1205 890}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DA8165ADF55799A329EB45
40E811F9140E5296B391A61903BC09B76E7BCF96FA1EA22ACBA9ED962E9BC596
BB22E4A514A5C551107BC74BACBFE55ABADEB1741C20BD80A186E49DD89CE033
CA0ACA0D0D4188B8A6FB40C265A88804443A7E912005A6BFD10EBB43315F7A9E
E8C24321131DDDAE6572BE67DE42C5969688AC1D7EB97887D783F63658AABEB1
FA4C2F625E6B6205D3EEC1C5E2FE8C29BD88FDF52802F3F5BACE6AA2007FC0FA
B6CE66673C1D698F51457AB1343CCCEC0D2FD0383BE98493902021E1A27B71A9
0BD0DC94B4C46825738C15B5E101C68813E1F8C8B19311648DF09363FCEF679C
E691E13CE96DDD1455A75181706F41EA2E0A6A4C870F7D3726547BAD35E0EE54
7F91EFEB803E93D1A9BA74A332EE4E56CDB48AC36A47B9B555997C7A58C3A16C
8D71BE01432D88B842B5D9ACAD19FFF7EC88B4E66036D2735311AA323BDD69D6
8CF32F9AA7781A2146E04D71C54044218DE26A4EFEAF67EFD04E4ADE1D7FE2DB
61A465957450E623CA58FC49FA2236C0BA3E81E9A9FA8909261A4A092AC9640C
08CB2AF3BC1E92E578086556ABF6A1F739582230AF46D4C184714197545BE932
1FE1F05FA46478BEB38010C2FAE84145D367FA53B10F42B7B7BA76B427210475
71E67A52D8EADC847639F0BE7F280F35EDBE34C7FFD9907E796F373015965E1C
FF36F43C653EA3F23B76FC2ECEF9EC19D5BC245369A690C280DAF9F3D8401A08
95D0FC1C3F0C033AE23062A80A3B8A944F642986A878A0284CEFB15CEDEA1347
52978AAF95DD252EB0D606F78C7E295BB640D1153A3A0AB2A191B9458436471E
A80334C07C23E3D43BC2A56EE61DFD9FFDF3329FCD4DE9A7CF92ABB65FBCAAFC
7EA124656746FA3B8D5E8C9B51642207EDC0600CA659E44717F2BE08C400AD76
EA2E4F62AB149858C2DA5051009ECCE091A6E497D4729FC9924FEC3FB6A9133D
6B463F7C7EBE4EF91B9B17160941AC0087818BC60EB64E687E9349331FDB33F0
7E1D24C34E9E439FB6C392AFD85238CFEA21292B8E1D0991D029790B7831A2EE
2FA82A3B52599EB0636EF92E5D7C13FB08C67361F04482BB6BFD44CEF14F39F1
21263707E73B9BCFEC74AE58A63D5C3D4D773182258E76E62A5EC2865FB5951E
70F9FDECC6604E7D7A3A56648C90B4F400CD61B0B1ABB6B2EB9F977F0DC1A090
109733A75F2CCFBDD27403DE02C363DE41F7C24249DA6FF6A943A97302E113B2
7C840C2A6EFF6442DD52B43E21B9FC336F406CC7AB6F456BAF15462B997DC3C0
F65ACAD74ACEE1A51AF1286F28EF7E1BFB1B8342C32A4B8178BEB8940C458A60
F6FFF6482243CC440C2F2B21D3CE9E7FF3FD14A83795140743A1E5BA43091340
B2AB098EE43D13D2E0C989578BDEBAE649914AC741AF2FBCDF5811B65C848384
52A6F1847C5B7A650971F5CDC2C0D4453BF8C91F0EA2786018EE0481C391ECC7
5ACE4C06C4901855BA721D107AD66E339E5C3279B7BE6685FF502BBD2BE96F0F
D3F368CCF773F3D5F4B025E2709855D128036BCC77757E264E1D338460244D6E
D879306F4C9A6CEDFCE51CAA6A64AF8E34E481DEFE4AFA5A8E829AF48ECDAEE3
11E7B3B067D985B621FC39F55B6C05FE55175ACF474B8D104A647B00FC3021A5
2EDA9CEAD58C01D4273EFFA969A48E8FFAE33610EBC182CB9ED585E49FBF0428
1264B8D0FC7705BB50C3411F4BB21AE84306BC65732EC751A6F09E18D9DFA916
2EF0FDE6D8DE5E713C6D3EFEA669B7963A5AF3E241F08EBE8ED83E23075195B6
91841E3073E5C4B88680D0FED919A7D47B4059B0C6F18FECC00041920A6AC722
705628D3D81BD15B2CAA46C7ADAA04476E84F6B5B01FE62E1A287BED895DD2C4
35A55E1566558E0C13D56FD3903BCA2198F3FC42BDD1F6BBF1BCAA4DFFD3E15B
A20B4B4A7E868696AC9DD542875F1F2FB00E8F4CCEE81AFDD839987EEF3239A2
F87C2614D356675F6AFD4335810674DC2BA2EF7AA609AFC1CDBB3A8D07793201
CBE33C50B9E74D2383FC22ACF90949369CD9CA691424CFCF5FC51D5BE7663F56
BDB6045125DDB5BE6BABA56EB677FEE7BF9EEE2FD8134707E2BECDD416F7AD73
39ACCBCF492415E4882C050B405CA376EC614BEA4B7782D4DE88AB6F42086790
3CBBE7B8EF011768F50BE71DD601441A9B79B10D536E2165BC014EC92B4914B6
B17CE0E7431D2565F8395965DB403422420E94467920A75346D59835AF49EA11
B60DC5AE76E353293D13BDA42C0512FF5FA6C191F7A80E40AFFB2EA997E89592
962CDE67094888C4727B12E576DA9DF54E80DBC32A457B46B38B3E416DB4F170
940DABD217B87735DAC72B59E5CE54F19EC5974DD54A2FB53573C99A0CA5F967
462753A753E17FAB14A0F66868E140DBEED08176FB0988026520E45FDA42FCBA
0098828263F3F76B1412008F659FB979EE68C1047AA3351C9D6ED4F1646CD21A
88B0E5E37370C4BAC14D659AAE54DA252CEF11FB25B1D92F6F56E747DE68FF8C
C8C590E8F35CA777875BE74572CDD28C7B290F53BC230F5632ED8C069127404E
DADE62998E1416D2E819C5510F03841E657F371635325D3A6E69C007E5AB84C0
E637BF68F6CE9D13D9F1963D2E0AA67438176060D579BAF0FBB300F40303F271
264154B238DCB99CF1D4718D04ED9527237F2C3EF660DCFA2A6A4DBD7A3F27EE
740B4A1084073D3B8D124425B5A34CC3F984332574EDBF2E2F1EFA38A9A38242
BB3D915186E210312D6BBBFAA98EDEC323051B28732292BCE145042A0F92F505
F24517640D5611AE1E953ADDC0B95B42B226FFF5AE9DD4A20588C4BBE5FF242E
77F9848F8978FBBF616088EC5B7538381A59A30826FD5761C492EB8750CB5C78
4D647A9FAD8D2C71FD7B485C21D00B0904D200DD2FDE973F4563FA646D3A806F
9406CD3C96C3C084F337D6C7EA8C3BAA848EB0F1084FA9C43ECBEBB0A1809EA0
8D55FB7FD733841C6843FFD55B1ED02BD2EFD9BBED92E5AF8B89EC7A96DE79F8
C5860DEC002434DEF02078C0F8B1B430C3785C77929A131818D8C3B1530E4721
8A5AE4B9BBD385708DCE315C77674ACD044273298EFD70958E1EC79A18A28FE7
7FD88969A3F3D82F2E035B49A8CDF6CCA253456175C2796BF638DA4451EC18DF
29ECD5D48EEE7BDF71D3FD6E851382DB9805003B6AA23D68B48C8248291F1F73
DB96EF2F47FDD1312D11E5561B350401462138DF3860739CA3EA0D956C26783F
3C831C65E35A60CC740111CC81F2AD964137D716483EF4E5C1CA39DAC9B622EF
F76C452D8F1B9C56504F5485E850E352CC9E3028D4D80995C4818DB20DF4294C
8DD032DFC499B8E8ECD66F758A9EB136AD0292B2B517B78AF31E6C016F81998A
C7A64BD074CE53374FBCDA5AC9139BAC39E325F8EFD409420B49198E8F324DE9
E577421D4828BB7C56088114681507465374B61736D813894FDCE46C5FF05787
13AE34B2F0F202E0E963A6D4F60A6E4ADC7EAAE61598A465B6C2BF7F4E788A9C
355890F54D19ECD6F48781A77246AF0D13D10DE177AEFB65C07D11980BFF750D
6B7E3C90AF2313F590FD48BAA9FB7BC88309656990BE3A596637924304076569
B51C01FA9C2B9E0A6F8422EE490717E7B0789644C36A8A2415E791728E210AEF
1A73A90E3A10C2AE0844F40752CF8980A2306BCA1130A42D2D7AE2E2071B4026
DDCEE8C6E20CDBBCC762F2BA3D8B680A684A7B8A2B20FA95F915202BB008B2A7
767B97FDF225685BBD9BE38361AE40987F42FEAA5DAC3B1E6E1B6F1B69E4933A
E39EC90CACDC35B31BB8F1D3D2FB7C0A900CF1597CDF5D3266C9BB07EEE8B935
416CBFE3F2FD6BBB74BA255CE38E6DAB3034781225C4DB18FC8746E18A70159B
D643E6BD56C95295082264FFA60884626C6E20BD1CF65BA9DF158DC5E9C5B647
78FC6407918F8C276230B43C8F2B793A609E7BE31EB7621E1218912C8F4F5B20
9F6B6FC810CFA4854F45EF7D426640589F55495600B1EE610FD7692251E70920
F57B8D254D8EFB9B061C151757FC8ABFFF4935B7A9F9A5484217A84401D5987D
AE523D9034B520308688B165F8B121FB903F9BE24CC427ED4A4754DB5C15D4A3
8E202CC7BB14E495996D9129EF181E6DA2E371946A5CEB8A30ADA275AF2BE321
929878A0017F07BE08A8F50AB34063E5051C85FF8CA93B0287DF5C01876B56E7
8AB0B695EF30AA6AD194E995D3321EF1B6C95F0E2E1B36DE60FF8EE089DF3EC2
CC8943714A68E5AA045FD626E103EF737774D630D57753756A71BA9BE5BD3B33
3E9276DBE5BDA9F3C78824BBCAC81FE41F5253AB6A479E38DBBAA423B4CF3F0B
7DFA9C1C7371411ACA7D8C235D3860EC37A07D086F6ABA2095054DF0A0CCA455
9152C495A57F6C63E84658A012BE6EFB36CDF47AB4A492EAD4ADFBB70FFE1A44
78559F3E846F49F2F83F3384BEEE6C22953C2EF0040C9CDC4E0E63C867A99742
F4E3281AFF6871B456FA2E476E46676E608A05A15B85D6636EE88C053F44244A
A0F3D77083FDC96D543FDFAD2E5B35C80A85805EB9E5D877B1F3271B5345C446
8C548411814B81C3B1D452594E1625BCBECD408BAAE81FB022368E91B96B46A4
357B1351919F4846E1BF724CDF8711CC27586E4A7F424BE88E67FEA4745D552C
DC9E113CA9D463355BF77FF6700DB4C83FCA0947C423705F873A91D710674A8B
FBF0EB1A87B77DD815A2C794BAE19B2C039170D57AEE7F99B29B1DDBB40357DC
A6713625FC106E25E2B3422CB59391D212BBF5C833C27277AFF466A222811915
C4A3E52417B42639F591D7E645DD1B997801C00F5D36C5A8F9B2A3593234E69E
B53471E0045EED01B85534A1E3A9C5378AC3F83ECB4B5C5A20A00EDA0D24AAF2
7C1E9A3CE6CDFE50A65525066585ADDA49546AEADFCFDE60E6818C16225423BE
594F7C51A713CF627ADBBC96A214E3614CC683AA07DF076B758A317D3C80B1A7
0B43E8FCA1DCC7A825F6B01B4C467F7FB3B36FBECCDC99A4654DA95F0799B10B
C1504400C8B360EBFFB8D4651822DDC1FD05D07448336E64AD7CE23D39B600EC
3977A0BA6A227CA703D5EC4731AA40D271C1B9BACA60998B467A6F5316A9CBCF
96EB93494E1AA44C47A3FA2F25E88429C748710D5ACBB4BCC7B4433471A533BF
BB69DD3098564E36FB4509EC9F5ACA034DAF6883D991A6C72031BBB1849FF105
DD79EC6F537FBF95D2C47D23D15B112CC26ED6D63520FF5C41EDDD5768EC223F
746494ED8105A0617A9F6B342E99B1351A739002F84C261E3C680419A2E022CE
02753B82E9A3484F8950076133C969960DEBBC21E58DD707C9F78CD0476F73B7
96CD51AFB32A4F22356187C8DEFB1D9F407001904457D9FDDF93EA718BF706ED
33278D4D341522293CFD248EEF040293EE94A4B4016F749D3651EDD7EF934FD5
C4C553E55626450A2914B9BBC5928BB2B1DF64078A646843644F117DE2AE7A5A
E6EB4DC19B2086EE4AD71D505590DF7CB22CD7D371E08541CA185C290BC23D64
E4A2451599B367D46C34E1E540B3E4D26B6AF61F39FD841650F44E54C91326D6
8D5B171B8A6E19BEA29C715ADFAFEF5FFA49D59CB669CD68985E47258E2CE9CE
94C8E4A1776137664A831D727BEA6D6E35B29C0EF7E514CFB6922C2D5D6FECBD
D3AC613B13C453DFAD060B1839742230A411A871B30E22B0EE3B52DE30604243
5C92AE025B1C8AFC22ACF90949369EBA2DA67D4C5F9EDC0F6E1C7B45CD9B8003
47C89FDF8555452944CA969A37142A3E14CE680A38083B9CB05B21176F8EED08
3BE66D798C44303A09B79E1F1934437D42F6014E2613AA97507A9841CC0D753A
D1672B9CAB64FF35548B10E8DE4864B56B23842B11A789F231953C47531C1508
5B7A59E5137230C2CF016E6BCEE9CE9E7412BBE55EBD003CCD1AD25F2326C35A
3B1B5D61AAF6184C500EDFB38F0F033C497B78B7EED0FE64231203847003FD35
645B530C4926E8364817A93234D198C358F24EF6A2812AF0DEB6987EC3B8AD4C
95E71D53F257491FFE97E1D595E787DBE37CD04BDDCCB8B354C32D9CA6F9CC77
839245AA9F2B9C059D3B5FADC68AD061BC8FD05743D17711B8D31411692A72FB
0315928BA4C29F60677CFAF1D48257F84A06C09418AC58EF5523A91D30C349E0
C6EEA386B6D57C09F26F6ABAAD4418B6736A2A1ED7F7DE6517B2A4366A5EB75A
673705F02347B5C5BC6F1F91663C9B3C1DC388C5E6E21DBB609F937D037E509C
5DA49BB082707B2B06CD7A3710E33E0FCB8730DD1D4D5EC85E61CAC2221E9450
15D8D199E1ECC1EB5EA612AA3E385D1EC21D1A975B37E9B941D401BA12C16350
A9C791741098C5E1E94D35858F7F76EC8FEF266EDF88C1699ADDE69F0822E8EB
16C8CC8840D71A55004B65428B0FC127B395029563555F26D772CEC76681F8FF
489044CFD49633D7114B943DF60A79CFFDCB820EB0EFCE94A6AC6C9E7F31D906
3C8BE9FF75F727D4D0BAE3F132F8AE3AC667F2D6E3D0A3B2B9D233B5E47EEF14
976D7D00609F5B7DC1BD20B8AC2ABBB33A3F5422FC751AA4AB12477A1731054F
27AD82A93468F235A87B6AD591F8B27AA59F134A9B58914BF39948D4B368BC2A
430D06DEE7E1D8B7A7E895FECAC65D8218E75EFF42BE1666E63B510D595662FB
69334B31801C22BAF550A70713AE1BDD873E3699EB9111A5ED5DA44F017A7963
8E2360C70E9B194759098F03E99F0C33737F5666D628BDEC01FD5AC1D98DA760
500AC9FBEE678F8493E5CB7EAFFF570CE7EC279541C1CA4E377D7779481B79CE
028D51231FE57C77B9BBF2641C90D3BC9CAEFE4F8D747109FD51EF84312EE695
2ACF0B77A4AE07AFA4423177ABAD91E462EF2447C5875FCA2059C90F828A19AE
93119510E683451CC34E607854D32C6D6008630B4F764E9E0F14283F11CD9DAB
A970CB94B8F9194B302D289A46EAD4CEB5451FAF56018CC111F41E4BD4B1E305
3CEBBE9A82A7BEE83C056620C2307D1DA68582CF3075CBB96FB281A98D2FFB95
8D7020675B3C8AD0A81070F4B79B46EF2274FDBB14C33CFC2E542A22718D4EEE
7BF2578775F2B71327470CE1E04D07370671C52CED10D665980B254C957C4B32
BE38F204B7901829DD8491A31C8C773F5A2CB7BDB175B84F18388BB171D092C9
17BD745C9E57DFCA1636023C3B77D12376C76387F0A014D71764B442FB1CFFCB
08B098CF446EEE45193B12181410844CB1AA261F22CD75C4E676C5E99F06D82F
919122FFD1849967F12E63191BCF9C3FF4D5AE8A1076F3D24725E549FFEB8FBB
596ECBA121403FA45EC4435C595A7B2584FBEE461DF5B192671386A218BF8E51
204330D8314883988B3A4A19945E72250231146A5DE09FD987820B1D5045588E
A622DB6903CBA6B6949D392569DFEDF985A31A59D1E1305A5ACF3C464B82804D
1C7FF284C2B35ECC10DE2F979A10FE8BD04BDF191EFFBA2DB53C70BD06F066B3
9029FF9F796603BDD895F54E3EA1363B24D9F8E406925AD4288398236FFEBE73
DBCE9C8F4A75854835C36243E79654F8DEEEFD7C40A16A35CF67B5DBFD92CBBC
6408A9C824F06444C39277E5E2364F639260772093C6BA15171389A6BCC6884C
D6DBE78843300158A269D0B4B7D9F4772854B27550D0E41302E597B15C1DBAE7
8B35812824E88F51B5A86E3F802F8C21B71F3E116C6091E1403539C20C258928
3FEB184076F8169915FB59AED882862FB2FA857793BBEDB83B50CB2D5C9AE201
C72F1F029466C84C8A553D72DBF4A09607A2967E6607678AFB95D644755E2B8E
D1C42A4C6D58C22A12432CB1FD21E65BFFF484766203B8537D4D7B63BB57279B
0CED22ABB657E9EFCE8D09775E7432888144686AFE62D85676860A356F46A896
C09692E9054A307BD6A81198DA143A2080C19A4FE1CCAC2696907E6A664B28A2
AAA23BAD7EF0EA09C429D99DEBBF34FBC8B052084E3B95C858B9590642E6ABCA
16D566FBD85D743D268A3593F181DA6358BDBC15614C89272DD4F4324B6D4F82
358E6C7C0C7D8734AC17B2E42C8492926315049E5BE184D86431BE662CECD68B
9981B28C45AE5775EFA2D5C42D51271008635B74CA881353D65E3C8FEB7D7F45
FC1DD1887F20BCF6690415AE871A230401234B314B9A276FBD7D05935E56C071
FA9E97796415085A0E8829E3504C5592A4100ECC05416EFC9D1AAF7BD670639C
6059AEFB06846A3BEB6C1CBA499359F02EFD5DBF0BD429C6D18D1A5645A7C903
071F7A77D60A3BC09DE5D2201CCE427E54C91D69A00CD75F1762444C55A8048D
AA7E4BA3041A8223FBBC9343630EFACBA3E7220049F134828BD05416E7635B91
063421988EA0AD84FF411AF9794DC89BC62032F460F019B9F7DB25136195EB51
BB557C491570EBF12F70C08F2AEEFE4A9690DD8E969FCE694F41BB6502768B52
74F8896687CBF78A1F6B84ECE85C69088A0E19A1781B68C59A14658B764DEA41
A72E26D8F34E8C84F833FAFC446056505C7D43EA94A5EEDAC270263550BA05C6
A3F1C26410DDB1903FB76510318A5DC7648A469D3CE190839BC20C06BE3CA42A
2304F46631626586CF1ABFB5DDD867CCA447551344BCF625BEB57E28406FDF46
DBBA605D9D0919ADB7E68319973BB596EEB42EB816557B31457403E71E41DDF3
BE3D271C3DD27C1A578CFFBE68A50194B4BD17A517F5B2D5F53DF4BE287AD3CB
6C0CC28FA0F70B7AA4E149F4FD9B13B4C0650D4A0B81934BA0356C2700731D8B
DE7360066362E9B4BF8CCA17D759066C4670B66BFAA4CD9E8C77924138EE471C
943F4F1C32AD1274C601A791C75C46861430544D48FD3B43733D2E3703793696
9A28B823AE29B416ED563744EA5EBCD7797BCCFF5E526322E808076196A5A4ED
861C2514860D8714A795EC8CF52C3A83C7D0E96219646B114CA487BCEDD14C69
7CAFA154DB35F779280ECFDADA0229B2C49C666FDDC7565E764294CCCC9F4D5A
8D7F9FF3D4FD3DFE5AEB5BB7F3309B116C0F1673852AC608D5120A3EF9B24920
E42F0D54AC37FE043A809B52E010FE9597D7C83AEE4C64E7C7762B70CC0989CB
0905979C2353552D5D6A0D3DC75AF60ADB33D581F6982995D895F3164E2A29FA
86BBC6F8131839BAB5F27882399AB90AF028658E64F3BDE88E32E655F13E7C83
431A4CDC9B1F8BE89A52B98C801FD4285265C5F4B0FF89ED0ECDBFA775B8BDA6
734B1F5D3D9B839117E03C08CB5E0DFB63AC566ECD930567356232A940D0918F
BA7BB2C91AF43D6D7CCA99E216F0E2C91972C741F526E501745B740739799783
3C700173DE27D9A2BE6A27519C7B74992E7C06AE8BECF56C45BE6197652578C4
53798BDCA706D60CA1EB8A42321E97C1600C8678E1CD38C0D661F005E901163E
3A6B8DF4F81A08B1BDAA7FAC6CFCFF0DF92BCEA3138424024790BA0BA83CF6EC
986B036FECDFA9ED5ED5B41005BCCED2C16BB2E7D05FDA80FAB8190960130E86
FA175785941FBA0D4C823F19BE4E7AF42C4CA2247B66843C23833FCA59358EC8
570A25DF712F8659F69256AF9274D8B2247ED5E2F792BCF0761EEF226A578D0D
A23BDA48E1794DFB97C1F334F245A5D2B8379B0C000CFC63A7179906C8F03242
AD4A1395362C5B790AFDDD209B70104DD63B0C21AEBCA00CAB583D500FD56DB5
6D52C8861FB3920BA0AC6B9B3F246EBA5EA84260B1001E7E3A98A3E6FEA17615
4F7001BBFF02BDDD3CA40653D03412066F7462837E9903ECAEC93D6C1D14C90E
B2DF3C39B88DDED9CA268BED8317FAFD874109CD47BC0197FA1134753EF90BE6
39F63BB8134C642F14589E75043B4C0E45D2AF5E68F0D0BFD7546062B0EE7C70
7E1EFDC7E09C0C02E40FAAC050EE2997CBD2D2F886A5A63B9E9737A689D2256A
1291C91A9E3A9337EFC913F060F32E8A6607A884E2A25CC167ACCA1B3CBCB0B7
BAC62DF7CCCDAB21C6FF406B37279194A4FCC106D20C35F9C32740AD4102332B
C5E5FAED93E026E7F822951DB9EB92C74C6DCE864C4F6FB9E118F32B465E2013
960866D52D77C3F269C4301C5AD3AEBED875914A2FB038E570C586DC2098801F
ACBAEE55205472452EE3FA6D1862B0F3903AC8CEC5B9F9ABAF939B22EACE41C3
26D1B4A2F8C94FD5267492DCDD3A1A82129182745FF83679E51C44EFFD520903
8512C0367DE8D8BE677BF9674E31314CB67434BE748B51B20A7971CDB38F579D
3AF3AEE2267EB2024EE37746ECC3ABF137876DDBC8BC7CAE6404F94A945903C7
E27378368FDD594CF413B1EEAB634FA5CE0FA0E8EE44C542547DFFAFA5F22C6C
F9847960B1331398F4197115D8625596CB453763486779B626A82132324F1710
B20786506675A74B3E5F164A5242F9EC8F6AC22DD822E2563CB3BAA35E168F26
BAFA9C8B161F74CF2E7E02AA153A2BB020BA7B2912B3FE793C6BF6A7C81748D3
63735716348FE918276DFA7CE81E583D14C09123A4FCB5AEC4BCF409342B1765
C170D672953051862049116904685A648A7E91EAC3DFED8660C4483F65065348
A2EF2542BEAE8A23CD865AA421FAB68C35DE7E2890BD0A96958596DFC55ACE93
502F5F6F9D967CB859ED73FFC39730E2BBEDFF57C55954F1C49A0CA7857CB124
1EA37E46D93E36A724C20144C1C844CDE0FB79FD889F43BAC7F426416C75EDCD
0C63697432814629339C2C116D928AEC9AE2D2D9D4F570D5BF4B68142CBFA827
5545BE599A7E55DB64EB151FD52CCEC8117082A49D35963D58DF0F7C87B98A61
7D3ED105C0059248E23058DADB03B9E11740FCEFE502BFF48CE861D1936B95A6
C720846CFE8FA4EC48873C1E1900E6E1D812E48C99FDF1E0C78012268AF1F4F8
5653AD90AEB7611635112E1D18B14AA30F7A5DC97A78FE15CD34FCD1CCFA751B
19B0A415FA02B4714850A84D5C0ADCDE7C56AB7A0903845238B954FD09A9622A
F0277A1C07D5AA99752F76FDF33FF75AC4A19078F9412A50C26CFE4FF64992BF
1FEFA58C1EC19E447F8E185EADEB2CBBD78CEF86569C971C8EFBE92C7DAD4B58
3D0D919A2612F5106A1B6697AA77241FF715E53CCBD6EE9B3C5D0763DA5E82A6
57476CFED5A49A9A8CAD5BA701531FB810A9FF2FC94A0641C333FF05A2EB89D7
F32F8F13909459423F83B80D1EA131A1F5C1BE52AD65C5C58316C88BEEFA9DE5
082C0CDF7A33EF08A17ED68ADD6D65A54424BE32D4CFB491E9C72B7FE624371B
D90300DDE25D97C0BCF31166748DA8DF06504969DA2A58D12B0EADD3BD265CEF
27D85B1D215CC4DF3BC0DA22A1E9FF2BCC9BA8F02670B5ACB686D61A549F0DAE
D77C57E0A3DEC90E9F1D4810E3D6E7B4FA88BA666239F218B1A2D47F608F5CEB
BD1646896F938BE7AC8B27894D7FB5B23817336DABE235AB54A9E0534BCAA1E7
E53595E501504E81E5D0EC9528C2E2B8B767CD0FA36F167C7C0330C044CF303D
82D8646863CAEFE1DD35DC762C859BDCAD5E808617C72FB29A59D2C328CC5F70
504EEE4A8031F38C3EA737C2182B3E68E2B84D38BE57C6381573A429E49DF1B9
64D4D934EDD561582F1EE3E850FC71552D3B8631A715CFA6211BD3AF19EBD0E0
C02778CCB5D271A4E624C47667F9422E64EBF647DE2A65FFC43DF1BB2EBF17E3
4187D3B13107FEE36DF3F379F62A59657E5B2F22D038AB26C5BF26ADEE4C3EAD
0D87DFD8739B5263022FE12D3D43D33AB94B99C89A88DE755706F3F63706DEA5
F03596ACC148A9DA9747E1C758ABCCA3C7F9493F23D56137A5F42A2F13EDE669
536A07A7DC28718238611BB620CB8129B32AEC0947D1DE94CCCBB0CDA587EC56
AF6C34CDAAD085A4149C0530DAC61408E226E9123FAE4E04CFA8DE394E3D5DF5
907DD376FFC131DAAC2CAF901DCD1F624D4EFC4E41A49254405698260C0D5859
F5D59C3C0A12D46C2DBA5CB518D3076D3C741F1377FA7A0B3BE55528267D5EBE
38DDD6987627AA68C167EDCF79DD479BBF54177F19A686F3554CBD6B507C3987
837DFA4BF13DD3F8F96668A54F654C486F87C44334FAE52969626A42F8707EB3
44CCADFD565FEE29A52A774ACA9002F723D46B07833A975F208CF2108F8015D0
CC5E14B984D866D155E11B89A25711417A057318D74D3CB861FAC6C3D38F005B
C288840D95A255E8309887C1350DEA65494BA607F2EE011844CD2DF77B1BEE8D
51DE502B4AE4F79C66BC513961D85C102FA8B85AEBCADDBF3B852D9C73CE2EA6
64EC287E17AEA95FDEE774E5F639050A5BEC629447C79D5F03923F4BE7E9C1C0
E83BC8742DDEEFE52C2CE6A0DCE86584C8DF4E78B57BA65F8C96EC0B0186097E
0244539C74EA2F5AE97020E199660202348AA20C5ED0EDA3C62FE7B4734070CA
73E177D6279B60F5AD192BFB5346D77A659B283C1A5B199F2A4F571B144DCF4D
4EC19A5060DA4561D9F9BE3EB46A37F195DDCCF5A5444E0C3D98B367788ADD72
13A3593CB2EAE4610FE7F1D62061F0176C6FC08D06E40C5BA4B71D2D258CF7AD
6209703B06B5190A470C355EDA1C6BBD32473F2CBC9884412888E3DEB8144D53
273B26132C1320B3C94F580C4888CC8E5EA302F682F6FC26AADF266F6B1C389E
F066460070EA7B1EE462868861B6EA02E89503FC4D5C8422B157C94B111A0161
B03715EC0A4B0A555B7E298FC362305E3690D454B0495D13F5D242AA662DDA62
500B0209CCA5F894941B64CD9BA7910B69D8F202877F31F2CEF86ACBB3DC9238
F3A8EC0F11E4F876FD68AFC52B5A86058CBFCEDE73B1E978E9944535D5D7F4F7
60822E6F02ED02F8C64C47885F4105DFDECA8C2277A9A461F7C0F8E240A572DD
143AB5D89849C991935E3EC4EE3CD228D2F5DEBEFAC3BE8E397118466B73123D
A3054DAD324C2185906A93EEBAC763AB0BEF674601567CA427857946D2C125B9
4E589B822D371A9560207D97813143C60D3D28418684810F1DA9781F7264D9D6
798488D89F0B3F96767A6BCAF4CC245BC6D79C45080E70E551292F63644C71AE
88CB1F10E21B88CE1150041E22B6B825062F5BED04CBDD1DE37F9141FAD6F9F7
550D4A34EF3C2B6955B6D8F91120F0B15119836DB1017E96CC1D1E505003A8FD
52CB874C2E9559F903664B836787F0B74CA092D354D32F3598C8F095B3E82118
1312BDB0335101F127C739823EE9281603453701F63121ED455E1BB6A47AAF29
B468A273E389F02176B234D6994EE0F8669841D787C62CD235C5A8D7D60586B3
9F065EBE6404CC3E6FAB814333C50AA9DB755ED6623A0B7B1EC871DEE1545481
BFAC46E3B27C03EC5CF8ECA2B28106B05AA8D418498980F1E361CF2D42B9E0A9
6CC83E884E921ED388A585DD163B062382D8AD4C81F8D2385EAAD2A8BA2E0D21
0BA5E0DE4FA6BE7045C2FAEFF9B4FC71E1A52015B9A477875FEFBF69F360095D
5B5A81C3DAF9FC14185D1A2DD0824D532203856891D6838CB8EA20720CA43461
A7EB15A4EAB37B98B8D14FB4C4AD42BB16E92A073FA490B9A517E14FE3784378
FF78B7548EB4F8FDE27BB6E22875821FD7319885FB2AE0D025E59B029C00B862
D9CC2D4FFE54B79F4601DE1B5D0662B4FE3DB244371676A7A6EFE9B709390076
F92FA5993467D10FF8F6A0932A465002D27803F697BF32D941137F3596DBB31C
48CEEA8DA26828F406B3E19297E9BCDD9BC74AEC3008ADAD82B4368B6D7B12A6
FF332802FDD260CD79C7DC03D0A6B2BD00FCD3429AD61731A3B8B17A55185D88
C61C69BE68899BAC6AEC9E0C7238C5C93D0FEEC724C99D07D16C3B6E80A89341
2C54F2999A90BFE505C56E3F5731EDCA095AFF8A6553C7635D7E94AF21AF58E5
575979B4A1BEE4453C01878274BAC33405EEEAF0EF66E8A61B0F2DE1C321B58E
8358F807CE60DA52541BBC4355E575530698BEA5134928A8E3635A0331AF73E9
95B3CC72629D7FBAA784548EE74BB5F4F3492A8FE214FB51307EA1D5CE727E99
2F88C1D00276BC56D1626A01BDC2568BA1FE13F9FD8156CB4E65D9BCC3720653
1C79381B7E6CC70229C12386F45D02531359E08A127FE52D123863ED070E5EFC
62E04255A28F42FD9AD6FB03E01C35504E247005C705227B6446AA8264940AE0
582931CC95BF95E12B5D82C254B54E6E3A103F6A9367F242C69A501C6655411A
4DC037AB594D2A1FDB1D1033AFFECCA3399C2832F197F035DEB4063866D4605D
19C08240A8CFB0F8D923F7BFB5ED07B53DBAE83DEEC5225FC188C8A5D0113452
96317C799B44B79F6803D956EB21B6740B8E0B84A54D0B6B647097086C932871
0523E4543268A51EBF1ED10CDEDD0AFC0D092722ED908D342B21A2A7E81C50F1
CF9D8F13764600F37269C689579063DA35CADD30D89C0389C98FC44AC55C1C1C
2D7B0ADD80CABDD3E8ECCE1499C17BC7F3F3684D02E6DDD00A3C8EB03FB18E33
681351366DDB5322C1A1683843F1A6D6B1721161CF9958E98018A8C867F4E622
3978DED38B685F48F640BD06EF5406DF4663F09BF2F43ADC8F33B62ABF805C21
151D817BF93005BFDD4B0401C8A62B9790080411C3B12340B5415E009EE77CF1
41F52A673688656F585B91337F2B8CFDFB40492536A1DFFF14861D5AFF37E25F
CCE39E499838227A504B08DB32BF0A5ADEA431935BC6DCEB56B62030E9EA7CAB
382826E18DD2A0B15E538EDAF11286148665474901E6492FED2911066FF50DA8
2866817B27C11E2847D4BDDEFC9351868972C0988EF89561E8A96D7130592728
FDB65E70103C76336BE51A614F54493BD0ECDC298A431624D00ABC36DCB9F8DE
FCF4AFE7CCEBCABEB3578D1931BC2A69B69360BC2D2DEF9D0B29024CB5AFFA9F
B3FAEAB6F48D530BB0FB222CCB48B39681B54335F2AC07AB2D37B72E6CBB0716
A420DF1061EAA605C47ACA91F4389C74098B6CF5D2B487A03399B23394B8747D
49E3159AC647ABF185AFBB055D663C131C853202250796C33BDED8509361F9A2
F5DADEB12DAC114A786C1DE82893AF25A2991927DDD03F574982E473B1530E9E
87C5ECC8DD734D9BFC788F0D58ED841D211D655ABD50B733A22F7B1C13B88B15
D0008C25CDDD6A1E6C157601BCC58A33FAC725E560A131A29D7F2D8A6FE5E6AB
C82735A1C4306AC740187E3E5AF4654287D0927E2D9B7BCC885399DB68282C9E
D7C5684A2E043903F5D7CD4B6D06E1975794B4F831DD319E2859F990D605FA3D
49A9FDAC0445B4E34EAB62FE26D2A5AFF1EAE314CBECD9DAC4599CFE10A6A845
8DA61FCA950DBA8B3DA64A7E11F8E45D5A2095DD7245E5D0CD32FA9A0E65255B
DFDB9163B2B2DEA4A6189233C017892A1C8468E85BCA016BD8119380FF2E69E7
1605BB7966CA50348AAD8C236C2F7D3A05D6902F8A6438AA7301871B03AA6FEF
F9188AE30E73C7A693AE4E6C759C6F11C410FAD234A21F07E9D74924ADB1EB22
F2F916C7ACE3E1D41D10DF610DFFDD9B82D5A1281CAA541FD3F421569DEB2021
6A1CF4679AAB48026890D58F4161F6DA70D481EC7D95C9A4EEB85E6E8F8F272E
BEFFE84EFD59B0E6F6E28F5B24DF3850A53BF782725387C4E7DBC2FB32434A84
795BE9BB83F6084E627BA2422A4B627DC31D24722AF2B6E8FC30F12B4FC01E83
732C88C1CFDB26B5A167A2A8251E9CEC7E3B15900EE7FAE220DFAEFA858E5AB1
9D0001309DFF574C882E0E9D4105CC8BEE01E0B5A0C0504400C8DB9711073E76
B8C578A76E230D6B41217BF7D7E7F395DBDB155098C754E076741AF40E3346A0
97D26377825569571AD910A041C3FF48C8D6C2F774199296C7D7D3355AFFFC95
A5874294E1207FEA991B52D1FCF4F9ED9CDA2F7875DF0911B8FA3C4CE6D1BC81
987BEFFAB33D79F099A78089289159BCC0EB7F6CEB55526ABBCB620E79CED7B8
6C32C7EDC67758522955A88A527ACD85649A1639F551FD4ACFD7A792DA1253EC
F6AC6D834A2D655D90BEF4DA100183B36C5A31B84C190475499D6618F137DD34
B4DE0BCB68244D88ABF7562868EF44A0A8957260E697CBFD1C9C5633D7547EDD
195E7F7E477572319B59523892A89D6773D59A67AF52EBDC5321AF1FA1852F2A
FEED5164549B99429A9AD131461809C283C9B4EDBDF08BDE74CBFD80F5347531
646C2FF777EC7453C81EA71C9239FFCB4C46DB2065D408DD915AF5FB74E960EE
D70481E6602F1D32E0E0D2B0168944B106854F79618D3D9B0BDE4C0D425882B0
1DFD7D1B52BC9CDEC5CA6567875BE1E95ED520B06522DB7756F3F54F93999E8A
CBE820308637C857EDE15338341ECA2CEBCD13C0B62EEF7F8153DB661555D4FC
98AC67AA7F3A4CCD477FFCDD3491DFABB7DF5DB36C4926C02DEB954D7E708527
67118AD2B71808DDA72166A49EA52AAAA09624C7EF1A3FB8B73DC33E973D6BE4
D1F690C0140FA3BBF05383721492554476D696DB1C899C9E8ECC7A56B6B1568E
E16D208E714225E8CAA49CEA33CADAE47482D18481BFB34594563C353F29D41B
43A102C0908BAC1FEC403324BD21926EAA40898B8812BFED1C9592B6DEC462C8
28C7539F49AA003B7B5EB0D1DBFF439A898BC2D515BB865FB3FBE8D8F36B157D
BB4D6D1BAC045FED404FA9D17F38096F6957AA4AF21AB95A80C5CE403E9239E7
3707C769584841C28C32FC79CA11033B1B882F06A2A2EC0C947CFE7200156B7A
D2695666806146AABA67B42D9D6594859D00D236DC4846BF32DE771F123387F0
8D045084763FD2E3632AFBCC792118760F1A2FD1B64DD38D385FB69759582B0E
C1A4442CC9818E04F7314CC9E6C3DC0509D1F5DEAE4BB86ED3F7B0F511E97F52
7DC540E47246D793605873C2C1BDE5DF297D1C4B524E07997EC6093E78039295
7717D8464141CB7D257A4A77DA81080B31EA74807D5528C00659C2B917521A10
B7888FE6BE6067C7CFA59C3942EC4A3B6D98D67E6CEAA7D13129C5A3BC2389E0
35628A4641C34D3B394C4D927F548BED927309176A84334B124657F5FB88E184
82857040F3FC6399BB25482FF7011E79BA60DB11BFECB37B71D6B5F30993EF83
5198E7143B5C96C66FF577BBD73924F7B2A6F9ADB8A67A53069D2C0677153B75
A3D65DFC7E1757838E95C6ED3AFE4945A915D37E104F828B89858FD65C444FC4
2BB8F3FF312AFFF84132B0CE92D3EF6E7809B99561B04FF6C4C9126B3EF3B8F9
3973553F7181F4E4C278A91E64959F3CECBDA6A850607A5648190D6ABC287624
8AB39CD5A7D9C87096BE8C7F5CD642CCCBE8B6939616C7B98478AC71B3B91F0F
F8E2787034E327EB203AC12E98B2D3B4C46F4A156C4428E990FEDB4EEF24770D
7239A2F8E203B2C4DAE43D07ABF5ADDC21B70C410D231CECF13D8E2DE86BF37B
53A6245C7A1762B6EF5A729EBEB5E2C73058CCC1CC2A09043B8EAB6FD7E9417E
11D7F9A960CD2E0A981D7F9DBA73D027D53C58054E20CAF748B32BB6E6984E3A
5F9E47CCC9934B7583F98E6A35B35113C7AF7C2E58204BA9A1A20DC867DD9462
3F080CF1FB70450682076EE9EB8762CFC5AEE975E9A9B3D8096DF1F958E4F476
0E1C7019B896083EEFCBE9C933DB6B8C05247220827B57D51BB61B1FDC50CEC9
BDC4541165419F497830FABD89FF086C95E292BAE71E217D3695E2B61B484423
C161BCA700500CA45A4291BC51AAB2DF2B462C2626D01202B27EC35D4F3139A0
BA609A1543E661980AC173B55519AA9AC3C33F60B74965FE1648C06FD72C4372
5C6C2143142A39C722B1419282107F474C681760195985244D747752F3AA0940
3553F9F398640B260A3F59F0FAF19928CA654BB7BB476FFE044B2E99DB62402B
801019970BB299326B2A8423C328DAD02BAE86C54172C85145031AA3B69DA1FD
3718760A5DFE831D1935911AC769FB81D5ABC0B4D81EBB937D4F61E913D4C2F9
DD573227FDDEBE4722073AF789856334A245ED06FB8A37B210E7CEABAF6FDC2C
D6315DAD3D03C23006844077F986245F00303935421B96A718C2C298724317A2
D83C6A58448FBAABBD066F420310EBD9EDF276D66626B0287550FBF488E1825F
DAE185773753C00416CD68631F201CA5588A1FE35E1FBD0B58A189933A557501
5388E302B6009293066433E77FCB77B77BDDAB30ECCA446AB63A40CD8CDC3224
0ED1C7E86289360361584CBCB2E7D1827A51F9244A21DF27F1CFA9DF3D06484C
D4A17A4E3E90C1BC232493FE0FA0FD09E4148208C0BDC9D2D7E92E063D23A087
0104C6AC966AAAA2CDB4EB451AE32BF456ACBB65234E8F77376F88A364BDA6F9
426F31E95BB38D45174D3BB83ADE73146572DE8376DE3578B8706A275A187E63
CED1BA87F5B5EED081AB4C3ED8E6D274B576C54D810127A93205F1A792C8B741
A07481AD72A5C2465E41B4E4C978DB643CC3B7F07D0BE5486877A32A1DAC00FE
52628FAA8C01996102C9C5BBB89868204E13E54EDA79949320C82FC7FB31F9D4
39DB04FA7C31468143D2DC2A08E35A327188E18163E10087474C7F8541BA3883
0AD8EE4D5CF414FDF36EEE801DB4C13ADC0DE5004432AB154D5A27871BB86CFE
067648E2CA71E936C4F943118935DD8B97B1476900E036A03838F382E27D8C49
CDC3459EC113CB0DB68915CE9E31D502F6E0FA0828DDB0BA46F3A88ED2371D49
A0836F1EFCBAA68CCD6A8693DBB20AD7FCC619C8604F2929E520496CF8C4EBBC
AD59B95B3434318A519DFBC257833B2EDCA84F0395B91876081F0EACD0555ED0
EEF59BBF062A03AF17C6C7297091530BA5623565CF926C6A06DBB3C1BD968F36
84A719FB19EC055BBE975B85DBF3CA2918C7BE1A3600F53DF814F6E8CC56105F
43EB1EA9F48CD31C61283EE12F01224EDFB8E3D4442BCA6CE8642EAD7AC7E124
799643F20D5F0ABDC8BD969B8697177705F2D3CFB59B07C553FB80AB095D5127
085AEFDA7351A3F23292A758A8EBAEBCAE695A046F1051902027BF4C34432EB0
23D27A9196F7966E8A713E8877982A0E65D6ACE13FDBB85978F94D84620533AC
DCBA7B7C12C7EFA3BBC6EBEEC5004624D0B458A2B04632ABA7F6EFAE43366D14
E8C330EA00024224C0C3743782A61529230E5B1331E0E4FDF2CD12EA4F839D04
686F2CAFF0881A56E3EEB0C952DA59520F04670704779ACBB844DDE07CD87861
D3740F70C071CBFB43698175DDFEB322083653C1550E30E57B626DFE43EC0E82
B955D47536E6E560ABB656DE95490850967837F33DF4C7EB0A9243AED5422FCA
5B1A241F2AFA59186A0519A1C218EFDC51AE6CC6F4F56C5A97AEFC0C03A41295
3981F6ACBF40C7F43AFFF336C42737CB6D781D1FE3B383D0F1B5156FD0B243A5
37FC9ACD05EE952946B09B8335C8FBD58F05BB972CF46B22CBB27D69DB51BB08
0746E2D474168D68F2B83250AD66F1A61A395A0B2B4C06896E9D89142C8A1D67
4AE16A86AC86FBE961B3ACB8FEB1CD01BFCE73CE4821C7561EA7ABB7E857D527
B65EE7D15B1D4DAE11F31A7B0A6F159A5E0A7E3888EE7C446EB2FA7F5FEF1C5D
C1D14FBE45AC296BF1601E887079196EC42B79F8B1DEFE6C8913044796F13FA2
3FEFF071528AA5100CF1A2FCCD794242C5EAAAFDC4AD30192FB0F18AC33D94EA
EDD50641664E7AAD6A469C29F879B1042955D628795852C2CAF9F4D61892A84A
9F464FBD591CCFA9F4E3639061F3D98F15A79D07AEF769C304F66F089562F248
193A9010DC107F6F003AE49D9C39AE440453A24BEA9E506864DF62132420A31C
72BE5F9CDC0746D4AE4AD0D0B72033879473DB8E59F52515DF64D2749B3A269E
FA143C2E1239605611A47F5010C3421A9021108FD5DC6945370AB3A5A32F6919
094B5D74FD83677E2BCEC16365D712D15CF544073BAC6567BDC6E5C106C65796
9328095A360F878288AA6CA9ACD2A4AFBA784154DF249C1D893420E3244E62C8
197F7013D85D9120A22DA59A116E172DA36FFBF278A5077E377DBFF0D47C2894
09808F50CCFF8AF07DFCF6B63B32B8A77A092ABF18D7E7082C61BAA7ABCBF473
4C4FE9C82A7C6085427ABFEE2A5C71272D0B396590E1BDCEC3595BC61312E9E4
4AAF02201E84917F6FA40DA8BEEBDD57BFB5596EB6F8ACFD94BAA0E9A092EBA8
A63FF9BC25EA17E8BAE2454BB9EE63F92FDB8FF44D3BE418951FC7E638F053A8
095695125E137BC8295B0B6050BA31CB41A321B5147502B042CAAD94E1DB1645
B1C228E9ABC55E3D9EF6184F18D691DA57E95E9FF3C7DB4FC2A50B4D1CDE7F8C
1F6C779CBF18451CEC7A2412FD0EB9EAC856D3DD78AA202CCBDC3BA6E5E31D26
0EBE2A084E136F2BF9C32B982B2582CDA34E4EBE1226327CC6CB6413E7AECF1F
685A7D6737A000213FE0BAF6D94E647B7CA6CBA13E499C136FA3328E5CA4F76C
9565A0287B7450BC3A09208F03652130C27FF1359D891DDB2A3685DA814D3897
4FCF85C2407EDB795D9EA5EEB255FA3EB46D4C48DA60EE31D63B1BC1BF7EC223
869D11E97A54840CDCD8B2EE798B6561DE8F320BE46968F334D0CC6AD2E17D4F
51C1836AC030BDE2EA88D0E43B6BDCBA288D9556AF3415E5A1CD040912C0D7FB
428DC5FBFBAE9D5F52FC52F768DB4FB274227BF66B16B197E9E825116D4432F0
6B26DDF410DE69B74902D326608E8E427E54C9E49B27BA398233C7D0CB92065E
431CFD03A4875D05F00632CC6FA39A0B557911681E791685656F7B38B169F999
9E3A80EF295FE7F95ADD96F27B7AD27F745388CC5BE9420021E000DF2695E9EA
5D461B981E8D7915ADB7E1FB10F0F6525BE744D6B72C85ED6F9D05820DAF5010
1452F76814D46FD7E1E949CA7776DB393963687D1F4AA067E260E1B226D6795D
88B6C92E14D0BCC373D53DC89627658CBFCCE7B1D9000B2C472B7A96D61A50E8
A9632CF5FEEA2E2568C67DC772787B3DA1DA2FE9A646CBA040171683AEE3A23D
AB5288AD8C2DE6988D43DF57CECE5B9D0A2CAC007CAFE8D56ACB647F48F64BF9
28FD4A95E68DE3AE6D4C9F278A4741F25649BA7AAC77651978D0A806A97C3813
FB0460F00C842B1E6E3896882835C31A77CDDA434E14FD1DA4482E8A278F49C1
C5508B74B791CF4C09B2843F9B093F9E066268F5F53442A71AFF0FE42C514C4F
FD4389780D7511938BE5C3619A537AD67B4394AEE99A758EC532015AA181FA04
6E0D4F333F0969ACCE61A5106A7904E4C29D061F3837709888D013C18F5FDDF5
47DC8CA18AFC6D22C6A8FDC0C1809DD7C1B58E633350D9150C7E76F81E2D1FAE
68F706841A7A3486520027D1DA488F2142AF74B1F8E645A07E4829C56C1AC2B2
6CB9D04D5A7475008815AA02749B9BC267FE33E3561EA89DC3480D8C7B9EE90D
789195DED0F7CA5537E46A7329F430FD6841A96286EE3D95B86EEC7A261B0947
2C2E1D8E76B4ABE2D5CBEA8D9E29DF315A9983937AF5C06F0CB062A047D8F6E2
2D72B21FE4F4475C249110657D3D4BC8C155240D26A215ABC61B3E4E2FC1A414
602E9D35193831055584BDA1A0EAE29BE035172055332FF60D3B35D700243E3A
8CE3E6D58B1CC48ABA4C1079FD1A2DAE444B235B1699C16BB7078547075764B5
7058BEFF6E0C8B32AF3B002313CEF7EEB68140751B81436BDFE1E41EC337DB7F
CD711D43C8E1C9AAE0C80864DE6746372F4677D50F11ACF55BF7FCE02B238A7B
8299935DA0E1FFDA7AC5B15C9EEF8647D1025B84C768967EBD4502CE7A4E59B3
9E5F35A4899886ED68CD7B975287B81A95C90D33236F32FF7CBE611DC847F0A1
347C6ED0F1992B3115F1C74D3DD4B5CA6EFD95F641350A5E545745E0058E9E08
EE51799F076617B2E45F71E6C885760F202716D0A57A896EC3A6415752BF8F90
33F1AEED3AAD04682C4E34ACDFADD60F8B879444BACD0E9EB672A1189FD1991C
ADBB5DA39511223EEAD9A2B5827EA0F31958156E75ED3BFF9F802C8C504C7D59
4BA0FE6A577811F437872FD4FE8DDD5BB88068969DDDCBE50275A4EA0464B7C5
B0265619B96E1C01A8DF8197D3567DF7D04ED310BD9B87925050094A2C3B85AF
22F73F9C718237762AA03CA5549DEA57A71C60781705BBEFF2480AAB95DF6770
B7EE0D071C67B04C261F868EA74FA8A5B35A9C9F6510506D8C4668385291348C
053836DCBC91402DCD7F506A2867C1D40A2EA5854050AA697AC9B2E9296544A4
584316286DE42DD8B07B0D9F25
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Regular
%!PS-AdobeFont-1.0: Utopia-Regular 001.001
%%CreationDate: Wed Oct 2 19:10:38 1991
%%VMusage: 32987 39879
%% Utopia is a registered trademark of Adobe Systems Incorporated.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved.Utopia is a registered trademark of Adobe Systems Incorporated.) readonly def
/FullName (Utopia Regular) readonly def
/FamilyName (Utopia) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/UniqueID 36552 def
/FontBBox{-158 -250 1158 890}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECA9E5F91E1E0B5992698A7F3
F8BEB86C9BD1B318CB141ACCA92730554DB8F57A8A21370C885A2F6612188DF1
0200D203FB6B33556F21DADE387C352EB80799C9BFA76FC4192381FF39AD0FDD
883D39690055E6A12477D408452D16B726E759BFE286CF62450D5683C4EB0845
EE3B21D7D64E100CCE7A2B86926828DDDDCFAFBF3861F98324538A0799F67E49
72B96013BF16E190839B9D1DF92A8B6A610468110B7CBF1C24CD2CB1E994CCC2
4BA3DF5753B81CBCB3B71C63FFB17B3B47E949C570D03A4B162E12ACB36EA11A
22733406532DB9FF39B2B2DE58B270277E7B1C3E1A460CF4B6FF063F5CF37F5E
AC709027E0FCEC1B27227D8A49D0664C6FB0178976D6EB5B09B4F47B5E94D782
25FC9D56FD8EFD97D514EB2ECC5630ADD87D6ABA98B19DC1AB262AB9A8C979C0
59A76953EC55333F7800EE9330B7FCCD8C3BC325658816EA542654337DA7D3C0
407058CC4601BA7B6C6B2DA0E376F7D94DED19271029E32844351B475FA30E37
2D98E7D5E6340A878CEA0811FFF598E5E1617F2D13066E7640416BBA886DDF0A
E9B8A56119CE61E57FA8A6309245DF8BC6CCA7CEA55FDE2D7B6CD06E8C118928
1EE6CB47A4B7D7E38CEBED3A0D1F2639BFF76FAFACC17476D13F4CB31FBEBF15
89252E409F16ED56EC1DEAB4F330B7659E93AD217785061D581BC8FAA0851486
654C51CA8472E0FF71158D1D3285ED72ED927B7F750F99BEE45F5C77300D0411
A3D81B0A9C8F5865B057F75E8D97E77958D3502994B90340EF5362A99D9750D7
14286B362186F0715DA5C6039DE18044B8E67EB1152D6C0DC98D0E36E6D3C331
C817257F4D3CAF8AE438EB03B04E8597046197D67105121CD8F5DCBBABCA9FC6
55EC17EBF96D17329B7846985ABD6DB9B1404A5E1EE79A612F3F94DE12F21661
BE7E591D7947341AAD30F1FE76501224D644A36F805D33FAF448F1924563210A
E3A16A2A43888775646288E228A16F187998265F9861902FD93DB17DC1A0DE35
57997B95387966353736C5764EB5B3552F3E5FB02EC27C94DEC59320A85D8638
839E0B4A706FEE1C919E60BD887421EBA20B332314919A7DCE09D6BC9AFE8A87
AABC30C4C8E71760B8D8BFF54A92D01D56633B98C875EAE44A8E1A57FA8C4B4A
78D6DAEF11DA248A1939C377F5801511B68EC34FE531B3D50F27D872796BC5B1
A6EE6CC8E4E57B32B8C2F4F1BA4FFBBF8252F09AECDAC3A7B0BF0FB64D740B7B
50FF95786E4E2F3D63943BD9F084F1B2648E88B4B9D847024797DC8F8377930E
B0B645734348FF709A3777D21C0CC75DEF2CAA2F135AE7D0622B4A37A8442609
E5549935182284C73E5D8B037CD15B4F200BDCE328E922DFF65B3BBD5EA5D5C9
45E91A7EA9602A98D668B4CC098C8A1B48EB84088D6D105A405466115849968F
489FC8E54E39C0092C5C0063A5EC583BACFCD114B047793A609E7BE31EBEC063
10C052103F17C41482A630AC02E0F44F6DF71BA250E9664AEABE18520919F961
24E66AEC8B8DA2951AF06653A1BD6F4B5A521F77A86F3583217A6829C8B74F1A
60D5360139F38598D059C703FBE98FC1B71E7D5EBF03B768A7692C90996DDB3B
E2F34863516B1C688CE2AE6C72FB0BEDE2654DBD8E1B5CC728A292DAF25B2CEA
3C2D9851C2D53BFB65EE9BA27728AC5B38D5F364260CF69303C7F766F2E9A8AC
FDDA759A24ACED8D22ADD6648E65D0B471780D4634A8981E0F606F27AA3CFE57
7DB1617AE7D789F8F282C5615BE17525909FD73AD8367C312D43E70DBA125589
7F0B6614D0192F3C52C0AB5FE2DF561C0FACE0C9D317AE98A934A369BF8FD9CA
75A8B798AE5ADF419EAF045EA686214CCC5EFAB922866091FF0FC1F756CC5487
10F84BF6F9B92273B449673602CDB64451C8137D9A8C7818C34B8B5456067115
95F28BDA19C7DE2778858496587AC22A97B54E9BF5FAAB2D5BFF6D101CF6EC95
3DD770BBBE3B9A1B38C1C47ABC36A6AB34E926934ABF11AB5F9E8A57D3163FE1
1A190AB88D2398B1A365048172E176552EECBC22F8856D4803AB3872D792B2CB
4D21885D4FDB526415CA118A1F4E892B43A1AD0D7F6794395CCDF43BACF4A802
2EBEA0CFDC8A33C1A8880009D6E6B885B31F61BDDA1B311D1DC678259B6A256E
897C45C983BE1163EC176CDDA339A912BB645AB73FF3FD8F77D0AC552E79DDBD
AF4CFF3CBFC31BDA930B0FCC67B3B40436CFED0A67B4AC7CF6D3FBA162BB0BAB
4CC1752F32DE7348516812D2ACA96714D1ACEF18902D97C6FDDC33DCA1E55B72
72BBAC05252795FC4022465C52E1932ECCDF7288C4351924115BFDAD184228D8
B3FEDC85A3A053E6119B11D6B94D1FA1E0895146D27F5389F1E4C22B32109685
A5121F9FD0A5584B89D652BC7899BBAC8EA1C4E9F61BBCF00F83996D1B6B5EF6
549338C714B7D0A1013E430F8500D80569FA1D0C9AA57838589B61E059C961DE
AED340A8388AAFF908C79C7DAF84B1D1FE4F0C41A5CB17B4769EB524E2C2E936
E7D75DD3D914DFCCC5189D7EEB066946E03543E4E06C6046C5ACCB8A19FDD894
D4563F32399A300E5F9DB27C30E9C3CE7FC033B5E52FC16FA4CF8CC1D863FD64
19F7B7294A9FAFFE23E1B1FEC84723B29D9A76A7B7EF227A46EA2F141F2E0A7A
56CB867C4008E13364A47680E82D0B86DC3E4EE17E9F34CE5543676B085E9045
F15B02692E06AB070FDEAD02957D7E29BF0F08F586A85D99406DA61BDD56BFDE
B3FF8D48A9BDBA95C75F85E4F022C39BB3BF2C2464B67359B12FCDDA6DCCDAF4
0155A03824297B06F598A28B53C61188DA5A18CAA9FA22A4C026B49C2722DA8D
8942465E7B8ADEDFD9EAE061D2A5F2D00244E956E9AAE163EA4F91076FD99F9E
F2C61A19AFEC2586C30FE5AB60A238B99CACCB536294B6179B1A7E85B01035EF
6FAD8E4445953638A979EE2D977E0BDFE199D6A4578525117167F664355B3D18
70DB7264365F2D01C98A828FC5E9008BFCC1CB6554BEBFBF37504CA7EE9E8344
555E7E3421C23E4DE1D0CD729787BD5B4792DF3ED467E8233ADA542AD8BDB803
F85030DF5896908411C3644A3A2A34D57BFD248BA9E7AB94733972D052F99619
5B2B0ECD9CD3EFA8DB34D49EA1F17CB01909EE55639B93D4EBFEDFAED37CD1A5
4A2546573CBAD433FC294A5FD037EE91D52F97832A26071FB90D32D9BEB2A1A5
662F1D0BBD034389BAF12964F3D21800D722A9A3B910D1429622FE508B17DA30
DFF5DD13743ADC50B8F76141A5F4EDED8B840CB9544462C32D49E82A47B699C2
49DC851BD7B802220E3F68440BFBC72F690030B05E841F440F8CBDF2B8E989B7
0188D46FF8A1389E5A6E5FE7951336AC9C5BBECA4FB8B83AA32D2E5C8CF4DAD5
40FEBE753C38BE4DD47B2B86B6E23E5B5FD08932B5009D0A5E2F2BC444234934
D83028CA0B3F184A949E9B6262E294714637A03EBE447C13D3F43680759C5087
A17C3A4D0D31F3CE935177FEE43ECCD044796463259ADBB2A6CB19F351CC0D93
D513E49C6EE08EB1B2D5A88A8B57805E8BD59300C44EF39FD62B3CB62A89FBB4
C85DDF72C7846B5E158A55B73B65677EC41B454037C7BB314B406AD33743D6D2
3C1D908B15918FA61A7A0C6BF43E046DD5482A00FE6F7FD6F16668DAEAC1B669
AA8964AC7F491EED5E769F4AE6C52300333533DF1E669D8AB8418651E65CD80C
2F7E85AE4A23B9DB4D191230BA3AE1061CDF95628F22F6C105D84C87532D0A34
520B4CE1FE9C8D768ED7B303EB15160AD1553C89FF0EA2C84146D26B37AF2725
F27D729C11E51D6B9E9D4D9D75F33DC5CF03764303A47E019B46D37F5DA1FB46
42B633CA9C0FE9B588E3D4786E3FE70A589215155F6283B2187354FACB6A92B7
2AB7D175D54EF691BF683BC3E9D9C08CC089F0D57FB3DCB3F544FBFE4626553E
C4020F2130E6988FD61007E16206E35C28FD2EF78F444AE842A6DDF4770BD530
F98461DE082EEF1A85225959D6D6ED287C27B9E86FA4520B8B1BD2C4EB4A2FC7
78B639B25EE15BF76A1813A5EC1255E9EE02C082827D8E23ED2639A935700850
D6053F170F935D7B9F832EEF7A79FE022528538283F2FC8EF41643D1D9792C8F
9A14F91EFA95258B6F319DD65FD20219636D9E6748E25282326B7C175F442CA7
2D12DB50044452650AC9F777C9336589C7B307A9043D2D72BF8DEE9034737634
DDF5C07D9FC2D30CFFE9CC2EEC2487B22085C25DB911B96988BEE5AAD386858F
AD0D8EDF57BEC643FE6C385C249A9C2E1E2DDE11C0F21F66FE766387AA18C7F6
2D7231CBC6D035E32CE7E0A069C5B3137C8A17F3739FEC69EFA3348F9E297042
F017AFE36D4148F1786FF89D417771157B755013053B0DF0B0179FF11235916C
9154501A97CC75751A2315D576D114AF010425BB16ED7DF6AAD0A5B013F3895A
A795A02559C1CE2D9572CB70C437E9A47CC63502AB9A0A9825D71AE7D7D49410
66FB6E133744E20CE21BF6019849F349E1C8BC07AC86AA520C0AE4D8B4C0B05A
BBCF482DECECB9BF0064CF9C91F2DD1E50B373A4245CA80E40AFFB2EA99B275E
E64830F4E98148216E7EFCA7165F1B80ED4FF16B1995000A49C06ADBFB3E01FF
CAD77D91972DA4CE646D40B2AE9454ADF5883713D03723CF665393E06B344B44
98F615A7428E7F096F99C848A2588A27729C387BFBE19516489BB2C38FE94682
F614ACB1AB31A8E2BB5C88546002CE4193620C75DC036786499634935E5C5244
219F76FA5D734FC227188F00CC90B4F194AD7E6E317D00AB368B8A62760C3859
C0B0F18FE1EE821624A14774A29F0A0F6C1FC03F4FCB069B7DF543555E3A4595
84AC991D4EC314FC3DD1ABF15C11FE4F559F045FC9E2A50AD824FD6B2C9BA6FF
A41567A04C45FAFEECECF38A31AA151879BBF0EB586D29EA48B1C309252B1B3A
B4DEB506E22F50140E84F28308688D486CE8E24E1526EDF3B71F3005A7E9F8FF
4E565943AC8E01F344AB02CAD4D9C79980872F1CA425BD005D421F1667FD22B6
E0268C72B2A551B67EA6A629B8DF97FF7C01ACC5658C919840D1BB6A3FD5C85E
1C6B68FF9F19575F49ECC98E56F63725EA088B95632FE3CDD8B88FD73A25C6CA
1CEB37A2F9E4F0766022E2185CD5DDD6D48D0D9900A9C6822FDECFF5AFC3A35F
FFF2089A0E77F7249C753F7432A6D797182C331B58305387086EA835F99AE09C
84100B7D9AE5DA39DF882C3A8837EDD804BD0B44F078E3F2A8D4F2F5F0409894
53BB638F51CFE838BB822299771D6791259BDBFE8580A7EF7997464E57BE1B7B
FB1470FA2FB39666A5BE83B6B7836E42F0C3564A45CCC7F076C9CB922578C6E3
9C68132A7C8DA1DB86B1EA3005A49E2B7D08C5D6D9B321855BDA529EFAFE44BA
7A701C529E5A66150FB7097EC5DD811F47986CC3B29C4B4AF59B3768B5EE7A7A
5D209265AAC962D26847B85863FDF4E668C8B6783E357BF2DB1B03AB1E9281C6
177A32CAC2AA1CD2897D849A1D2BAE001B07895F089A029435B8284F772D207D
8683065D0B467AB3742FF73F989DC0123B5EF7522B4AA4BE60C3D0954E2ED6E3
6648382CB2897ECD04E71D539683252C2D470BEA427B8B474E88A862D8883DAE
3F63120E509EEBBDEA5F413EEDB100F976756BAF902B8D670265F299A6A8D7C0
E116E898CFC149510F8AE1C14041C8BA32466CA077607892792A34F67D863035
BF5C8A3A8FEE0B4BA7F82041E7514810F46890267A3F75C5C0F38ECE894EAE38
B7EDFAC9E9849D674A1A87F4E79A1AA04CAB6AC34E2B7703A65CD10A347EC231
2CE80AEB6818F0DF2534AF569BFAEE406E3ECD2B0BA61BC46F7757ABDBCAB375
B983DC94CDAF1D7AAA278FE21FC6755F684B23B68282D4AB1D0016ED45EA009D
04CB9EC35F0C8E1A30BF278AA74CA233E2C25D67FE4B4BDBC9B58CAAECD64C7D
845A4ABC44BA382B7D65F7FA2E37E299E494D9E1FE8E8508377AA57FA1AADEF0
610971AA39F0002D2FD0110DB3EE726C6618F9B7CB960ED125D8CE08BC9CFD4C
7445B7C08389FB9F95F9FB61165D2CBA1DD239AF019F5B13170730EC962B83DE
DA653C632DF95672602E278087B358D2BC6E0B5E0FBDB7D33C0C5724BAEB749B
563CDD7BB8523F83147C04F491AB1F8C02D0DC35462D110EE04B8F912567AD61
576D78B4C5A9BA10887EB839F7A2A9E0DAD3179CA6363B385269992EBD01F525
7EE677F1F767D7536F4B9C30CC10701AA67B209B9CE5CAABAAD6CF63FA45EF73
E59F27C3248B6BA752C168E01E794F1B99052DDC00A5C7BCCCB1BFFCC5F579BA
7BFDEC471E07B43FFEE8E6D975BD53607ED9701123CB216D77DC5EEE70F5C284
25FBC17947296589E0A6AD4E40D06AD63CEBED8BB03DE02F1CEFD0BD43555041
C9F91774591C921EB67721989024421059E2202A5DBF6292842CDBF622A4546A
5258CA8ED3E7029BA2D96F527EAB66AB056C5812D6A16743BFA523A82AE45F66
9AB8D2618111EA5DFD952247BC28B35FCF55D409355C80215350D198D9319F30
40C921F3B81FE70D3F3F47A68C00854821282D355F9825C843D0F40995284AE9
21ECE5CE3EF15B811E4F136848BFD3D03431FA13B33041F8A1993B2FB467DCCB
8450949806E7178C9A6EA10A42F3F97BF71A182D25E20AD4D4BC50E74F451CD6
D2AEA7EEF2ADC597666B5D8929A95CB3A796EDAB761DE798AFD6E8DF855677B3
BCEF2EFEA484AF5D02AD24D44655139BF189BA3E13B958C0ED5E34F70561F694
C1A5FCE85AB2B03F7FD90598C3B96E65553012A6C3377B707936487631F5C613
9DE65C7F1BF8FE2E9F69BF0C8A5B9278ECE0760D71E25066AF343CFFE0739A81
D0EECF0F20ABCC0D24CC8C08D5D985DDAE015BB92D6F890CE088755B67622823
E2A39D8B968FCFE74E7F0C34B0A0DAE69C60E02FE96E8943A4B01D70AE136328
7BE35BDC1DC16DA43F79D4FAE57F80881B3E5F58F561069141B1758D1A87198C
6D628AC3150F9B62F29D27CB0B88EA0084F2453B89C5C72B6B090AEF519100BA
99B54D727743A699E872CCA137ECC98C6E1F246DED7E081795398C0BE9BC7DF5
E6D6F665336AB80782B3BB00CBC0F8C8B4CA4506F122CD157327FFEE03425D8D
2C89A0E289C7A999A401006CCFEBD0E08FC3623C7F7CF67CC77605F93ABFD90E
284BCE7CD72B4550A50DAA05E028283DAA7F9997C93A8D6377B73CFBA3044A1F
09938E9392DEF7597F03CA78B3766433943B33179C4113129E86AF607AD3BAFD
9547DFB5394FFAE192887151CACB233B591A4D2458EFC5CF41970D3A5EB66217
37CBA48E2A26DC5E6744D3D19D518B4795ED0F0B6DC04D0A86619FA4509CFA48
0FF4A37CD5D2166C35FB52308AE96C1F7316F32F9F6D891D1F50E1CC6EC15CFA
71301D51FA54B17CFFD239B90B5C5A001050EA2EE21B897C273B7E676C74D1B1
215E270A3654CA0CDA66BEA49D454040762389958D9AB05EFC64EE958BB8AC05
E8950AE2BB2230E7A4A75692F0D9780BA105952BDFE788A6FCB3A10AF9852614
14344FEAD08AA41975060C6357A22EE37D9686A1CB8B39DAE414953D6F2D79A8
CBE198C9C414466099CCEE4350777801C43F9F63903A73760C1052A4555178CE
0FEA3E5238D4F9A3D7B320B1368BE707FD277A2651E0959AF5B35EB9C62843B4
E0E181793AE4F0B9542124ABE607ADD0349A89BC930E21D0F16CE95562728106
231123429914C49ED6DC4918B6B5E879DDEB69925E7DA50A40CDDD081A85A41D
096830166E3EDBD8956F763AF22217946AC5870D0FDB7DA9BA9ACAC69EE5DE09
11F95FF59EEE62D04B060453CBF6D1CB6E43FBAA705F30BFEE600E64A869F708
EEB20F7CD996E84D57A1E3A4519C863CF773689ED4505B90A7AA4CF7F6E849C3
FE507FE17C21A534C8A75E8CFD2DC1D1472151E2242EDDD74A058BE81ADADF5A
09C7577F2777C0F67589A7506A092B443B447DF411176AB680AE19B22E3FA2B1
8EF85794B1F3FF879474DB7A197944E1DBC1EBC09723100BB6EA08A261F936DF
67226E73CA9E119952E041064AC946EB77ED556CE2C3BE4E078BE970356C26CD
70E5E0FE0B5D86C953B9ECB870DCD892A7CB384C14F77D86C3992FC53F1EE3DC
E38C845D866BA430D56C817C0BDE4C69A4A7170F95D6191F3282FEE93E53B9DF
AFEF6F029E658D3EEA2CAF5D87C2BC38D991703D454BE0DD044A7DF055E4A76D
16591A34567BB51B3BF6043D3B376B4CFB904882579AABC91EA1BC6D36EA97C4
2CCAEB2DE003E4B028B477CE8019F9A20774229F48A6B0A27C3FE0951E80F571
B7450F213328D04673B6D15C9F359968E2B9A49AB5121BED8CFC50306352ABBC
00646EFA0A9665AF35102458632CF5177086DD8500199B1E265B3DF29C68F323
E4BD810828C29F71C63F0A1088EA71BD1F976840A4D7ACF7D3B59B8AE4AF9AC0
60DCC460646649847E7FE2AD11D759945AB2BE3AE060C15384AA097C42A6ED10
B6C0A16FDD11281E726886A75650C3A34741728D4C9537B9C3ED622ED06DA9AB
C92C2CC6E8E839E6026972FD98B93971CBB866A39AD8117BF35A95FE9B0A14BE
2791D17C99028FEFF8A256212E9EF6209123B6E2B45D09EEBC5317CFD5A19987
7F048183DD701FF0D0F89B07762A2BBD1BA8F726BE1BF3BFC3E7B8C6FFAF955F
2C369CA356870AA67F5ED464853677170EE1A71C71CAACE30191F178DC702A72
7889315341C401C565C17CF682ADAB61FC8A6BE24847A576D1F082D7E510F996
0CF0042F54558DEA1C921FB43E9B33AC9E735777CD86EC72DCCE9F2F4C1262A9
4FBC8E5424456603D1FF79C79EBDE137FA03CE28ECAD84E9FD9A8AE383A9E041
E85E3A2EAB20AEC7563535BA9AA1317F148FA644F0ED16190B173E5C99CB752E
8167DEA1649F5394CAAE9EA0F41C9929BA4C2DED2B98A8D2C6AC693DCA4B6A38
B6120CB009A2F981C3C521D1DA5DF131335EB45F5542421B8B24B4B60D0814D7
0BFE34374EA7104D5A579A4C1F0EF3913661458A39EE873B4AE84B683C067BAB
6315D647C898DD8488B3D2F7FA0373489AF99242D73200D561FCF84FEABC682A
5B0B60A584AAE2FA3F366BCBF2B182B0B6287A61CDBEBB354B842C11F49E2AD7
9D4762DE2EE6A24D8BD003B68A866B42B922B33F73076020705231B5FED833F9
32BE37A7387DB940CB4CE005BA850912D73DCC4C878EFC2DC319AD2121F2F431
E1D841E7FB8393503EA0FEC7D0F65A9F9DC0DFD0869FCE8CB0A6C93B246A6A88
D2431082E64DBB21F06611E7E6E3FE9C18F9037588E21C23C41D354D2BC59A78
3545962003976647A590E740724CC10A623EB236AB01FA095BAD166CB005653C
9B2FA911FCAADBDE90E0D4A0021ECCF790F815B97590541EFC023691B823E6B8
BE752CE6007866584BA5D5C29ED03DE39DB9556E7F2AC0B58F01FC8F9CA9D348
EDA024C8CE1CF600D6C7B87B98D2EFAE7863DAEBE8D1166018E10041349B0EA1
0A85577DFE6EDEDA5059551CBD0BD539A979428D92CF0E54B272DA1B568EEE7D
9C98D380F11A63ADC8CFE5DA76C406BC3BA6CB16A8182CEBAE324F7335CCE80A
C04A1E831B14B58A49A302493D1E7FDDEC92ABF244B4F2EAA769B493BEBE7A61
E422205DE58F4E5FF12D9C8BC642BCBD4831351977374942F66A1901CA84E948
56640D3292E719D11D233896A254B122A823B7C75523A96FA995B67788DF005E
031D40C04A6C0FC77EC51E3E064B63BBC995CF665CB550EC9BDB6D595806919D
94E4DABB892612004057031BEB075D35F59CEE7236BC27A9503512FEA9CA0163
3354E487A045780BA5DAF30F02128F8AB003AB7CF1862E8A8602A859EA086645
3D3794FF821EC749D33AA24C4A32DB90702AC3A9C037A121559AD481790CBE16
D2426A48CDCB68E122C8F3E1063C999E4B2A1E2E098291E79DECC82EEB59A07E
A5DC62DB35173AA1078A1C9CE3144F0BB776CEE881D1A07230C5CFE3433BC012
74F24C4B4B1E327292E76C48E5EA9F22A52FB4975642E28B65C588CBBEF3C3F4
14B8238F8A4CA90371F9A173E337CA9AF96AEA932E60C19CA8BAEA8FE6BD48E7
C5E5B97D180FDE25BF7C66A50E3BE9DD571D033E0AAED3B59A6F1A07D0051AD5
E890E3FF7D54C89A8053FB7ECB0E71C1237EAB66526B944EF0E8ABCAEBB05F87
07F1C779E913155F6F84F7E07CD043104349B3DDDEBE343BFEB7CC189731F3C6
D85E098CA301C29284DEA10620904C65EF02DA8C0C506BA2FA78E056F6ADA659
652974BA654F4E04AE6A288716BCB011603BFEBDECA79B2F3DCFA96E6F1C7EEA
B629B97CFBCC3302286FAA1EAEC5D6B0E1D8B7F3CB3DA933EA9ED87F63382A5E
56940212F33E830A618E2557079F12593DE45CC812540A1372B1EF314650CF49
A8FF5AF6E5E4D192A4D508B8463A043518948D1EC237F1C69091A16E9A04CA1A
F356979EE79B6A32D8427EDBECF865201B6D7F2A7AE938AD225AA63B82024A1A
5D970E31183AD2996E2A0186DC3F259BEA0F81041C5BBD9C177DAD3E7DDA8E1E
BF1C778D602F16E8763505BA9E22B1A7FC010158C91859859A26FC98D6539497
10C924FE6B1EFD996DE0587EF604516CFA1B15160291173B5E9208208D4D86AE
19E30BC81D75C25A38177916BEC33543C79C3D88DFE706AB64B20473E79E5E33
A4DEE916BCBF9AFE241E225A94D9E7960ED1CC6D6B32697F54D69572FE52CAAB
D89478253029D2E56AF19222016F8DD5891A857AF421A6996B3AAEB5C3E9C936
7713A9718EF818EBB680C4422B50BA2346BD8177EE4D6E570E27E1DD1B8BFAD6
F90DC9AB73B04C4B9F2D39CCFC67B0922B50E19EA95E1F2105BBD01CE0B0E4D6
35718A3EDF206E2B51D520F61EC0210A1F84DB2283FF0B3EE28EB47847E9157D
89A0B30AB48C4AD7F54477BF636F16F91D8623D73C72A2C994A6B41419E65810
3B03BA56BB49E84D9DA762457BB67FD87B0CB32504CE70763023DB1AE200E2F0
145DAF77F8BC5F26A6B409C00F85705F8015B05CBFAE24EB007DAF10879C2EC3
457B850F6A8EC2509D38760593B913ECFE48F0636EF97517E88B9D160E3F5DDD
22E105A1F49C93A2793D55303F935DD9AC545FDE0043104AF5E6218A37438527
43D5306221B15B2C4EABEEF54852C15894253B4EAF50D033E9F0B1C588E20E69
A82DE6D436633751DE67C31CD8ED6D0FDED6FC0FACA34F0E35DBE3653EA88183
831D1F89F26B235A2BD6C127EDF0608D6FCD2421B5DF2C05A2F13E51A9E04A73
6CD034FB0B69D2E8BA2A1A24E857460659B4E7FE6454DC1E2F0CD8C476995F7A
5A42FAE3B7D8316349A0C9B6B250E8974A6F015D43EC9ECAD848CC7F6D6CC097
22753E774B31F4B3F7EF5B1111CA0EFCABD1C6148430F9530A494DD063534655
4D151F3231F032758B28F1074F767EEEFF01CFCE3336703EFDD5753715E6E967
A97C89F0CED7655BCA171AED3DAD78EFDEAC3B9F67C3506A498C91630467C963
EF92CF94C95C97913E9246892C5D52A3C56F17AF0C6661FD946BC401721D004E
3DE844BC2C4A40F9E2F87F3827FDF4863DECBCD35F10C42E9B4A0E596D35728B
6327ACB5610F5F1BE5369C7DDCDA85A4E7F6BFC70A7C1656BE5B93248AF895F6
F7E9C8D81A02A35602442CDEC2C267804914DF3EBAB5380667126B437F22C3F5
73DAE415D19B8F17AE4F78E485A577478A2C3F99661F06EEC1F8FC63B1BB8516
08EBE522D4C7D54167E3F0ACC411D1F91B3A2B76AE9235BC3070C6ED09FA7F55
293521F0239025B55C3C86D688EC23E369D862F24E59F1BDA354B255ECBC40D1
D640D21B403A473597E8AE55B63E3BED380CB91921ED6639F9981BA31A59C40A
58845D9785C328DE3E4C4013363AF102B4F1CD8A233DE647187DBA27FC8B178C
11F29116421795C1183806421B21B512746A1935D8DE34DC69BA6C81958C8377
BA7D51D268F7262128F936AD3AF143834C87029CECB93447112AD13B1FE8A921
65B324602570DE4C24A95C9342F0EE1E85600DCB71F7624779423D043B54AFFC
C6DFD78445EA86A113FA6DE455B99302AAD3DC6CFDB2FD903400EC1AC5F14261
F3176A5C5AFB8399E725ABE897F373D17639D349D0E819FD91885CAE6938B9F1
366F3A1B4673F20DB1810B1EDE48B99C2BC23208ED4C057A5BF65C28764142C5
02A08B67E4F034812FD79FBAB93491F0C73440D19EE6BCC90B9F1ED26F546763
592ACF38C29A1867750FECEE8E9A016F85933C20E1AE1E5A72B0FCDB613A6023
011F737A08F62EB81B5944CAF6CD703F38F9072E347A81B3F08AF8E60D69CDCD
187A1205C5FC094A8241D6524BE7ACB92FDE66EEE16F920F96B5930B70AF8F83
BA632E0AC69D8AF4AECD6D198EBA14D63F5571429BFBA480F38F378CEB460247
C931D6EDFAEDF30F215F32B0E521760ACBB593ECE67B3FA039EBD794A487FEC6
81B501A3523D94F2B97819F5A2023EC0884BE746BC9A2CF6733325EB75D1F166
2445F0995C40C74D3A39B68DB40148C9FE0B780D54AD11686C76103982DE6F4D
AE8D68D4272ED05EEEBBC4FC4699504D556002789B12C78CBA438489BD7058BF
163096337255E62A0E2EF027F673699F2D307514881282AB998FFA65916DB41C
153A312FE70F509167A16201D5EF409303DF08238D453AF92ACCCDA30BDB4AB5
D955F2BAE7AD6E0E4474A7B713F876FF1B44323203F38281502D79F259E69B6B
8F455960280F2564BFA9F07DC1519676F55CDA66BF46C25E870FF651F08A7F14
DDCA1AAA3446CCDE5207FF2487DCF7B5D9F341FA07DF46AC71D6FB26DD663AEF
6BEDC318D1E5335DF1873E0939E55FBBAE8661F33535BA3DDBF809EC33EB0193
F0EEB11418698D68F8599257D3C8167F3D7EDF0A1CADAC1C49AB4853E03BB867
2F17CCC2739A62D6F21BF7305CCBC0503FA4BCED04CA18CD9013BD492ABCF83A
623E566377D2DE31C03F183F977187DD6AF8F9E68E9D45BA83E2DF8AAE8F1D05
6B288A1779C150A810BB9FCB620DB36ADAF06CB5761B9B052F22FACADE6E0606
9F945574BAAED07813A36D363B256E6CAE7345A298E17641AD7F4A2231928542
A10209857F3BEFF2861B88733A0BFAB3CFFF131D766BCE31BB678D431C9BAFD1
CB801CD927BE478FA6D07EBB2F326A9E91291E7D7F974BA6097D1B61250AE70F
D8C3CB9061C3C3EBB3655EE559B66D6746C579A7EFBAD320DA0A7A8EA3C0817F
25A0200F959AC3F7141F71AAAA0A3CF68B5125CFD6BA1BB3D20876DF1262962A
BA415230C05DB4F15B5D58F2999A90ECA57A34AECB29A9D08D428D7E5FF62D62
814123C470E3A6FCCEBF45A9DA7EF7B4B1AEE8A2FC38F091B56EB2D103E9ADC9
041BAF0C6AB553F7E1082B6F72B8225269157DDC1B8C3960DA5327064C70942B
3B0564152DD39F2A7FD99BB71209DC2C1CFA6831E7AFF12E8FDC96E8ED9D4987
C1C3F1A9214DBBCBD1911A1B462B5D8BE676D73B6EC70920CA4B41989C5EFB4F
1DB5AD2D0A8348201B5D909231DAAB3AEC0744C3D2E6AE07AACCC1E5054E269A
9605DE1C63E337DD5B9FAA16CF79F8CF242117F48AB13C1E1A165DB071F10ACD
80CBA6C7BBE8E5B7AA2CC65D7E820D14B89FB336FD4CCEB80AD0881F4B85D4F3
F2B3BDC7D9B6DDB21CF513BCA5EC6043770A307B843BA7F4F074A8DB706197AA
5F12F4056A789DDB92164FA98659E7F7731A353F92F7A4CC280192E57E95CF02
55D79B19B231326ADEE48A636C97FC1A88E17F145D8F7B4A3F731EE72E876B04
3B372D65192F0C199D56E26D297BDDEFC66575EECFFE2E5B21948723B3946930
ACB568D1533FD0CBFA358DA13EEF17A1B38D3A1102814730FEA56DE89DD7D50F
316AC60009314F99EB58385EB347F8868BAD8361F801E5FFBA53EE47B672DD65
4E962559FB12A12989636404E38BBE54D707AFCEAAB02AE97AA40DFE3D3B3B0B
EA23BF38625B8736B5FC7A20BFC46ED49EE0DA318AFBBAF2637654F8DBF5C78E
53921741047CFCDEB52B6FB4ECE6BCD704B139FA4C626A915B2CB209E144ED3D
8608399319284D5A3B5193CDE3133136F8BC0B684C29F05D8BCB79DDFBEE56E4
5755391B77EABC1A219B8BBC17BFD0E42E4FC5468D65F27FD72C7ECFFD742FCF
A6CCEBD35E2062B71120208620ADA269DDBA2BA461E6C434ED87FAB60376DE39
E686B1A01E3FC5B94022650AEAAD42BEB455214F92057C30849EA100516E19D7
710CE3BA1B08ED2DB6A059CD5CA6FA2267F4C2AF2686F89FF054E264FF319D2C
2D36E1A513269D22A05F24343498B1FA66E99E7E414BB6966ACF3A2EA15C469A
9B7EEF4D945FBB6481FBC4C0BC997193BEC161C2F84A12BE773CBCBA16BBBAFB
4A24DE182567314B140307EB646C60DD0D8B823146A21868111E8BC98C12079B
725D1297E55F421B6845899FE9EF9E5A634F9D769EAB9CA99AC3AED12D71A6A2
E1BFDE9CB803F27BC382D8001FF5DFA9427FA4728EE1023F56E05B6BB4C86FA0
6506410643AB27D2D6F83829681BBADCA011B51B56A4B244E433EB00B1C51A9A
FF6378A9B1FE313B07DC1316CBA6BDED664DEC420ABD2D75C2A3D35B2786987A
899E28ED6F31CBF4BA2F34EBB26365A54C3DC0146BD65A1903981027BC27281D
2EDE7FD679B70BF886300E74EBF74B734757CAD4462EF7D04B84E1EBF4DB0B59
46B8E26A8C28040E625D5B1ACD9EB9EE70C5F804150DFF000B94A194407FB799
0AD44D273184183626578B999100E5271CB695C66070CC7CFFA5539DF2ED8286
2C7CB0DD1B5D476BB85AED82C40D21A9B90D31A6C7BA45338FA0B08BDB408007
654073E526FFA66523C2DEA49DEAF40A72939C4D47DF0A8DAEDA163D11517493
E0D4ED8AB82891F9E7E18A49F14C75A2A43084CCE18DFB31A510B0DED88E9B04
6C3F8DAFDC4F42B78D23500ED006C23CED9482E45DEA57109F01A140E994589C
662AB9CB94000EA77DC30A0CE1F30EF23D0080E9B45BE35004D802B4EC3A8F63
57A1D47B2D6B4E1426E4A4DDA0C13FDBD3674011362EBCCE1EC7B73D6D392053
084F1621C9E8B0B5C07B5F8619E256E1F32BDBB44F3C4C435620BF2D9AB58F04
7E9404A1FFEA040B20751841461E38D5A5640E7765E229D847BCEDBC04234CFD
61AE8A422A2BE57B3BCD29FFC7EB03EC82C4BB38855791F25C87EA9BC0D584B0
616AF5DBAC999A5B2A15F8973E4CF31305A8A2258D87B42F29715C85F9EB218A
5EB165EA8638B3E196CAD54173D694318AC24FD12CED96F3CBA0DD3A6C5BB9EC
C61E2C5C51799453B2990A65A19D7E9E3FD22F9B8828216AFD39E3A64BD0754B
5F8B5BBE6A45525002B1444D60516ED3AC51DEE596993FF175FD66B417EAE33A
61F0512339C97A20D1CFA29E4B432564EBFE0934A0B9F10C2BA4200A3568B617
6477AB629C92FBCD3EA2C54DD8E2FDE51B663830D0FFCF9ABC2827A00FEB1602
879C62613C0CE6DC7E8B8A73F32ECDAE8C681916CB940608E357DF1DF2B40175
B686F19BBDB25258FDA3469914B5FF467E2ECDDED29D347A89188B22D80D3D8C
0E868C96B8223FB539ED869878A4FE4113305BA73EBD9A1752598436F399ADFF
9E3762E86CFD21D359F695C6EB3A38D638F25CF6867E98AA307194F6CB693CA2
55F5FF4898D970689E87BC3AA5B569599432C14A5DB1EE1B13773D2A8FCE4398
0CDDEF079FB391C06A4D70B5FC7D33C24435D71ADBB80788F55E43253D543F0D
D372262B95696096383651F408CE225BF3E74F83C5F808D4EA5D026A8411E69E
901E01DF0EE172710D90158DA29782A1875C5E9E97172263A50526C39CA9F4C1
89072322D78CB302E5DDCD4DA242716C10D2DEA9F91FA5F40D0D46EFFC30D909
B63BBAD79D0B46056DC299C9A840B15A978A76C5FECAACC26DE5A2920DBD48EA
44433827D24FDE992019039293E49E7F7642785A8D51630E0316746C93C030B5
7FD30585778EDE3FF4B8FFD3330C32D011AD67C5AB3CC9B5451FAFD14AA09784
DD5A587495CC4A8F98765C6ED70B6ACFE6CE6933E046B437DACBBCD60E01995F
983916F611D8D2331C3790BA37B9BDC61555ACDBD0408E3D527131F89EE1191A
8149B9AA1892A17E0E42121F0ECE4954DD298CE8B45A7AFEE4C6CF860C2A5526
70B49F5C7053FBAFA30871B3DA102B1220B1DF5F8B1351F3A578EFCE821DABCC
AD6758B11F630AF59706EB66AFABAF621D1AFB1201156BCE68060E5C4F26271B
147547B7FF5A5C72261EE79E7FF80902D519012FAAAB5E2837D1CBC12AD7B5C3
6D9B4CD7D601D77521D2F58EE48950420006CE3E9CAEF4E5E9675942D400D6FD
B0537FC789FD76E65793A6903F929D6F59551EA794895D06C835BCFC4501726E
C682E85BA7F50B97974082196D5D20EAB307064A5CF4E61DA5C2D0EEB2667DCB
44F2EC75A484FC4A54CE5F27A4B9B24DA98DB4A6926426CA689BF02029F90FC8
460B22BBE4B9BBD21D5FB90D662F069BB0241E92F7D5A382AC33D2FC5D972E10
48E3B583B0AC779A1C4603522F87F3F91B4FC9E81D6598105BB4A025D251F85E
BA5837EF92EE789E31FD958C9AAA88F2A57122813DFDE16AC32FE467423AF636
515FE7559214E9F85794431D2CE7466A42776BF7069ACFEEC2D4295BEC5CBB82
E735D0A819CE55DBCCE612BD2BB9A7BB6A359CF3EA69ED282AE26E6BC9487707
A9D55E06C54ED4A23938B5B62E7C0EEBEFC1A72B5C383F86988CB3FCF86BC08A
A462D272169D702183EFDB2C5FF97F4833C183C62DBE2B07B12B35CE43229F20
60FAA46F885F348FA1BE476C37C1BC7E615E6B3CABC64DCACDCD47AF8C43E953
B33820B03515AA1037351193A365F3CE688D0D6025CB4ED1AA6852837EB17343
B878DDEA8254465B2E1B0A098DA8FC88E93EFC17E63C4CE87B99EE923C12C64B
23F98942C6D939E811DD2982BAB6EF93C9DBF27A7991CCE9658C8BB444263613
943CEFDBF19B50C37E08AABC79ED239523461A0167E486DBCF36EA0079B6D639
C47EA0DD6BFD64B6CD66C87F5CB9E21C57DDE37239B0225837964848F917D15A
D2F3F7D9495E17E1BA756A5FDF46E514DC8586E2C1F41BD3463DB6AF7BE5B90F
DD4B2501EF9204831D6B75F372F15FA3B689CA81AEC0E52CDFA2E59B86B5B43B
8A85EFA9F0BC25AA3FF7ECF5A5E898A46FEB7290483B084161C56B7DABF94BA2
D9CB54B19F7DE4447F5F4D687E5DA7E0D0F6858C1959A3A5E26438A4B9A3AD3E
8A83A6D9FD99C1EEA89D0F0A777A340A0FADF487BBC3C25DC3095C6784172EB1
3B823ACA4998D6F74CCC917A927B1E140776FA72E625934663558E62772A8631
73C7647386D50A21AD0C3DDE25759E958093ACCC4E435622625A23AA24C3E678
F8E7DB75927BF7EC4F1BBC282E03C04A51DAC68E186466AA3D72CA139CC02E53
5D388A18D12602E358128597D377C26B3D0C0FFA459BBF52B8F9DBFFED536290
09E0C6830025C4E0F59A9172589CAECE601220312835CA6941BF0A2468879B7F
8FD515C5C3AA7456D143C0A33B3A61A1B472304AA2B52FB11280C00819E3B5E0
DD48279F87B6E938D90D99DED9506B13754C2B6F3D8F3C1820722933FE0A34AE
EA942A7FCC7D3D79159D6F9F47A439C11258235FC37FB9BEF6DD9C27B71C68F7
AE3CAAF94F8B900C9F05D16FA8AA3763A1976CCCE413CD04DD315E132E36B5AF
9E35504B4C374330D591D93A8D12AB670BE85835306605D28F721EE629ED3830
9DE5EB049EA5C5758A3C5F057B30E253B9757C4263C99E9697639F5E81FFE731
6015AD2C43A007E5C6F2C70871C4F9F77B19274BD6B1D3BAF996B6537A031A66
4CAD210262691D5A20B4710FCF84B97327A7EC545A3747A30FBBC5F7C16DC7DA
714E6ECBF34B50D0A34BFD76D747FB95BE618F3927E0E549E76EDE929EDF8EFF
E3A6CCD1F8B8DA769AABA85765297C409A3036D49CBB3E89EE2380B1E03ECBB3
99B7E380706886BE4C044DEC7EFEE399F8E2BC005DCEAE96F435B0EE9243EB96
4C7E670BA2770DA1A3FF72CEA93406966A90952FF9C0523E9AF1F52D33F59B51
010FA88785F6787158FF8C02AD19032AFE8B78007D531B186930B81D75AF7896
D0B2BEA50A4865233CDE8C1E1C1BEE5722CB8356D36C890901C0F1A6E59AC7D0
60FEF9BDEF426DECF58F12CB6510FC528E05A433F5CE44E50BA1589E7B293A6E
13170A0ED45AD492B682AF5995FF7B1EF16F57DF27ADA187E64251151AC1E834
6679620B1E1572A0776ADCA52CEEA14955D263FF5FF5835AE263FE4302953876
779EE4618D305D006002A139C260C791C525FA1F2A0999435A700BC4CD7A2C6E
DFDFE7AE714D7910F9CDFD2EF8A1ED10EB961293ACA889FD7D106DAB83360CD0
AB8D728948686CDE3532801AFB07ED4A3362D2F665C695CC45D1BE3022D33329
070FDB1E6C29124C436D5996AC8A400DE94B9528BDBB15ABF5F3B2C2A3713774
A8C8737255B765D7D3CFADE9D6106E251C6CEC4566F20F11B5DE4880D051B91D
82B67DD38D09E388884FFBD3D0735BF3D0E4ABBBCB0045541D15AA6B4B99C1F9
29A452B84F6B52F866D21F7526D12A0FBB681546BA94891A4F60B79721763E7A
2D983082F8FD8DC85F81B3F7D10D80132F3ABB2A69B0B0F06DBB6716B099C70E
543D86895504EF1E064AE82A2A16AD0684ABBA1E821B6B9A594F37F7EC5021EE
FC16C7E83B73D10989C3F0B826BDEDC070B9B0700CC6456DA0C2A0D7D8F2B1F7
0720E5B86FD01F84F5391F2495700AC7628D0F462FD9BFFE434361CCF068915C
663302899DF156856BB76C5241C1B3A9F95F20910925BA7D2C647478373B86E7
18D40AAE624EB1B7DE1F1B521D3363D5E626BB07F1ACA6F6F589B28A51398DB1
F4FAFA1B29757DB1020F8B2BD630B707EECB877152D3D4E207817CDB689C0BA8
AE622E9A4A0E0233FB6A5F275E412FB86787806BE832C5000F4E0B42CFA5CEBC
EC59C1EF1A3235B392033D1342A6267712703BB542425FD7F4B9B43A183C318D
16AA43525B1DC8780773A411AF4F908920371899C86B492F0D527AF3DEA9D982
C2BB79F10C048C5F87C88A1EE995BE441C0954E082F9EDC83D0FC52F93ABF725
731387DD8DA9413D367D3DD96230780226EB7BAAAE020DA4971B2EA477985474
4EC7808FB6FCFA1F56B9DA1A6A9ABD5260CF6736908E84FAA9DA460FA86611FB
4A9B2F09656CCC2E0A442A3543ABD4CBC3BACD40B2B3F62A40CF9F9033F7E5BE
AF21AD40DFF47767C45BC13C0BB1FFE3F0C7F55A7DF565A5D279BC0066C95FED
01343ACDC3915AB12E5D7AC858C27BEE7D5959AC97DDF1BFE689A238235E12EA
B821E7DD4C2C60FDE9BCA45050FA2FED0ED3CFEC12115E9406FA77384BAAD61F
B1B0BE96CA8EB20C4C1B657AAE7EE1BC07C37A5AEC6BC4078963C973F6CF6DCA
26362A336331A57EAD554815B91953B33446DF6F4C52A185A56449EF14318765
BA12BAD1BF87360B692BE1EEDFEBECFCCEAD306E74D9CDDD6FFF2CF4261A49EC
3282F05DCAEAC80AD4450E4CF7AE6C947C7D7ACF494BE08D1C308EB25D3911A5
96901B65B1C8734ACAD8C8BC24111AC79885558575378591B4FBC268D5845511
352E79B0F319E08BDB860AF0E8EA5AD3689A25919146096A8B2EFD07A9EBE67A
4CE5209F9008F7246A7BCFED12E99D79F002D21E0B2FB9C688C0AA7AA4FA17D7
D06BCB6F5F596CA82B54631AFAD225205A617AE2E41809D85BF3643A253F2E43
91FE016C841156E44E3E07B9E39753DA483E5BDD4C234199DDE1920192309615
0F2BEA70879D6B8E594BDF58D00C12E3BF6A16F364ECA364FA29B63964E59114
EE41638DF518CD6DBD4DE1D86EAB24FF3C272E8CB03BC12F42F90AA6EF8E4AE5
468A58B0E53E7929E6CE0EFEFA3605DB12F88103A8873AE0B68D2EED99D22ACF
34A82FA922635CA5470952022F61304798B9089DDF7860D8985B8A94FDC6C654
105FE887526E5C5A81E692F61DA8E14C3CB81C22E59C94D320F0952EED156743
F1228ECBDD74889D8275CAA10158274D8BADAF331B3109644981149055D1A783
B369020ABF828021D3442D42689A3E79E65C2300B7D2D6427619A3B6DDD0ADE1
97668F8492432339D8F22A3DC56E42191B404D0DE3EFF7A06F30CD5B4EE10F89
0FCAFEFE15EFC9FD9B531490A90C3B68A81C498C37002D94D573B1DCFAC68AEE
176A956780BA16902379E29CF06768DFD26D0708401C8E7378AAC5D8C97A4B37
F89EDF48351A211E07CA54E08CF72FC009F1584B5D0532273F93BC9778777B7E
B3366338F6229015F41EBC4552F0A029C9F7CB8F4BEFD1A8403829B8D053D1EC
7E02C98A3163E37FA0442D9A004051B23246BD9D072C8358EE1472390E6974A1
841C1EA53CBF4BB87B7CA4643AF52A458BE16AB94019DE0BFBFFBEADDE9BAF8D
3B19301BA9234DC2878E172E9687101A97B2301C7E7EDE0143FFEB2C9EA54510
8C047852097A5D81843D09FE413C15A0FEE06D2D99ED6E689C48F1C791B46995
5021878CC81D53C85AC6AC93148F30C055C5FE5C0D966FB29B467D70998AF209
91CACB749D9BE3422681B3D25E7DC583E9B4D3A6691CBEFCAF54184A1B065285
0AA1C924332978DC1DFD6628181FA8E2A983E19E0797F70614CCDDC7C157D10C
2FD6816711D1769D9E34303DF63C45FE24A5A9BA184DEE14DB4392801B0647DC
F68297CBDB5F7F64D9029B6C0466A84BD40F4B6C38651E3CDE924DA4AD825F4B
9BD91F5F2C83F8443AB0EBBE83C5C8C510DDA66D5AC892EF7EF2587E6EEBC748
5CFF4AC7EFF2AE00EADAA79369D88348B478C6531CA9C04F1598DE9367C10B67
C602017FC92AC6FA958529730A990827565465D53DD06667F0727DAEDEDF9CE4
CE24A9271DAD9C61CB75D81DC26343A436E49F805AE1289E69E6C2B04DC1CC1D
8F881A50BF63765C78FC34483A2F276969334A84FEF0865BD3788FDF9BB680E3
C2A5D3F017494D88C5A81D100A57EF0A981BED47DF2D58FFECF025F50F0A4C7F
DDC717F6D8C9B9DF806D4901A040C3C1C7C2FEC07B3D31C31785224AE6B36E40
0AC97489D89B64889E75AC419AD7714D5121C45307E7293372649AC8371D3F06
468EED6F63D690E247CDD0C695A007EA06D8D5F287FC4D0FEFE5FF2ADD5D3EE1
B506654243C02719BEB2DA6862B40E63C6F7A36C5F221B6DF1C677A5B7EAB891
BF087B7A7EDB09ACD817BAFA56A1BC14D509BDB101F09BDA3FDCB5392390C479
A1C9C072124A103558A40119C562154152CB14867C17D50D84C483BC88D27456
C662229B6E2B345642953A2BDEDEF6D61E77AAECE1C467E84E92AAD4B32EC465
106B76E8B788D4246C78F6C6A51244A66F0A68D0ACCF834F324F6E3847CAB22A
3E3C03ACBC70DD95F75C0A48396D346653A0F94FA02410B0CDAD0A3F3AD27B9D
41F022803EE319EEC13E2E53A1B28B6F9AF0E889FB8B964D5853D404DA5E88C2
06C1DE2C853AB1D1218022C5F08795F2C516F006933F5911373BD1767B4C3AE3
E0776A6B7DA126A9EC5677F50ABDE5174AB9180D38D1BCED95D9E03CC93F2B21
8506B6CA3F9E0133292D740A09D39531B4711DF37A78E176B930ED6E5BF8BBF2
C4774A4016A826E06FA1205643802836C0673EF84289B2A8206BCF99400AB6FB
A465DBA67D3BA29A97A8AE596FFB7C041B6AEC3090DC7B62D5BE5476B25D68B4
D34F300107D55B085C0875BC16929884EDA5900B58F8218010D9F5AF70041DBC
38880B9AF6BAD8AED61B4A75D1D466DAE0F435ADA01D7BBDA6AD022084FA805D
E966DAF2D080C8248B86AF04894FDD36BD08CB9F792E4B12A06E2404E258717C
A5E0402E734FFA411763677D02EF56D595EA664DA82D20961D0A0673D37CBA77
BFB7D35965ABF32EC742E50FB77F51684145B3FD4E60D3E743B0A584E7CEDDEE
E40340C910A3CDD047E3797DDA30BA7E6B9D17AD23BC813962A19AEA9CBABF52
596AE1C80284E6B450E50CC0DDACD45917996B596521B3E7CE1FB2A4B1F093E3
60A1B9A48CE8B03C6E37BC0AFDAF559D6423A9C2CC3FB5250A4AF8172B7B0DFF
DF928EFA48D4DD27C7F81D5774BFB7E523E4920C254DB17B9BF1751A0450FF74
331DDCABDC2E9764A1FFFBA98DEF8D9649A0A8178BF093587AD90BE2E1E3CD42
57A4150C33E0A152168F179800424FA8B16BDB037494C14E48576BE7A516A9A6
8A992E10FDD6861FDDBBBD562C488F18628CBD1C915AE763360345C0A1BA33DF
19F8DB49C0361E0E9DFBA187E8E4EAEB7CFB9CA62CAB001EDE03774B05A4B645
5F1D17B5CD11D0DD884250D96659C6386B8615775F007707AEFDA10541A687C9
FEC0A70DD0E2F92C27CD42E54449261E1885835A7157157AAA3AE4FDCD1CCEE0
6D45E705864B96FDB7A94A0F91101B5934EC39DA6CE9B44121CFBD4BB0637AE0
9A20D005AC24F6074F94A6A6279959CDD772512EAD6F935F347348C691B8F14F
47F3D9922488B1C425FA7C3F64EE364CB0A67DBAC8D06541BFCB12ED2A6E7B35
C72116A51B87D7014617500D4A348C97BEA8495962803A62039A196225ADDA3B
B9E69F3AF0E1B9C3B354847955625630B61D2EB3ACE5A690AD09268FF17EFCAA
0009983AC33A012B98EFB2CAC73E43CA11A3FF705E66C94F4F69D15265A01EBA
6F94BF3ADF731EC7FAD0DFAC37BE21410D67A4A7D6532ED15F5C56BC12EC1235
4105AB8FDC7E87D7ADACADBF49FEF52971DD0E13313C8BF7269D2A16FF0A687C
531CDD7840F9E82359CB292C459736DF0BEFF835CDAFEC6E995DE7D705351C9B
63BDCA566334B9163C20BD9447A786A144B39D32179DC20D915D77DA036E3717
EFB34B6C37CCA123CD85021C0D3E43427ABCEE93FB744098298E13A23DF128A0
3A39F1AAE5D34E85EA2D04C4B2274C5C32783342CF25F7AA1AE49D21861B0560
2D3A033C6C8AE3377970876089B16D6FCDA30571EEE014EA0A0EE45B0435E6E2
2F681E56A3DA1C53910C02AED9EA2F83DACB0AA9BD5C19BDF3FE70EBBC6EB075
9A7937D3EF2632FDADAF608F573E56E8ACFA71D8F352BF8CA0586C8A787FC941
6B15E2B8AAB69EE964C6F5FDB796A634C329805842154320696C5C4FDAC96D1A
4AD689BB76A5775D4DEB5BEA7C7E1899CCF377BAD8D90BDA8868F5A665064230
40961EC0AF6EADC1ED251D62134040D2E8FAEA4660D41C011ED2C05C1F1F3AFC
A92D76CD45CA92F79E9C02E23AC12CF24D02C31585BF34EA175BC780EEBFCEC4
76498B3D52D286350D5E4313FAA6BA654C8BFB95BADA475B51822084FCA34831
0D6E1EBF1FDE873AE43C9756055D6A58D5C2D9F26F9E2932B5666D47061DCA9F
A135E175A1E0B5634AD6A81E4945FA40C43536B6100C7860FFEDF5DBA6374649
7481A1B791A98CC3D15A71BE860C80302D54BDD05549BF131791DB10535DE53E
8DE36533D555082153DD93DA28EE33457F2784E19D67FE646AD601D15D5924CE
B70BD83509BA0CA92353C08CA38FBB1DE603F6E93B9789DF9CC926E9CEC853F4
F0E796059C6918E22C920832692FFFB10C9C2A47E47E8D8A4FD4797606E814A9
98EAF86841DA7A73EA1392372609332A58BD3B9F7A6CF365FF8ACF7F18DFE9A7
F20142E7BB36C170BA3FDCBE84BA707BE0EA2FAE03E1246C514ED03852080582
6280781673C93B9E8C4C46FDD269E733FD5997A91A7F612392D8BB892AD3E5B8
8CB23809AFA9935D597005D9123693E79B9A0CBBD95A179CB960049A4723CFFD
3B0218461E9EA960A9C0AC58CBE2496A50705E13E7984E1D0F6A97E584DD78BB
0F2DEE1870C3937511B08736E24E8AADE5459229D6F6F41FAC30837F90EE1A8A
476DE77A798ABABE4E1DA13CAB6AC550100D0EF20526AE32C6A9320DF64D4154
55199FCD58B40B44E133B6AFC39A3279D00CBCB268719F0463AA7BBBC1934DDC
BF140ED76B15FF169F5DA06F0F7359388E78EDB141B58389958621694540E48C
A8DD3AA22332023DE82FF04261E3F7EE5C7486675E8E0F002D8EDC7AD610B398
51ACDF5B1CDB36F711853216BE13E1584C07F06CAA168A70C86090537CCBFB92
118C941D5FE98C575A1184659B2187CFA0E22B15467EDE20639CB293E96DC969
F876DEDD00A747E1D0DC650E7F044D2B4DA6B0395A237809FE16F2C1F60A5330
7A4993DA96306E7059B2C010B4F9E986023C5D75E8F67168DCB214B377792480
02A2A5AACB63129E3559F22BC5EB852D395C859C530C08EBB6F0C9A05B25154B
929E2D97BCEEA8665B6F063494DD773CEC6BFE19DFA1443D85EFF920329C1AF6
3FB8D1C807DB9F20FDC95C4A7E299DDAE65AF336784DB6A4BB8FDC587A6E79D2
CE2344C81799D143DC253802F425605C2E604BE425E19E622916AC243A5062A8
87CD24760186403509E4E6FF75358EF16B82EF88CF3BD828A94D3B38A9E90F79
58D37B8044564747ED10F806EEC1FB6C4D3562EBF1B79228A23963EA09EFC039
FB84842EB9D0F30C061DD1A0A3015FB5901AC53786B0F988234CD2084E0621D1
E28FA5613C373403719DE12C38C32C55B941433D8BDEFA8A0B8C6374A5F06680
903F6AC89AED6E0A9F01E05085AE2AA161D114CEE16E765FCEEDB2CBE16DBC24
511CB0FD59E3ED85149C1C4AF75B1BC2F0182D14A59FD5DA732FB8379AF620F4
E219EA9821D689F1ABD4308AFA9E9E86630DA4AE10EC8E8033FB1EC225C2EC7D
C2005C258B45674D47FD0AA0EC6B07CEE044EE7E73CA5E6D9F74DCD164953B37
17C2F4535A34FC088DA7F156004EC5E252C7DC0FCD97FF5C28C580F528E8BCB4
EA558E7842D664EB3A2460D0C3BA6FD5865D27AD8539FAA350E47FDAA85BB76A
054D61909305EBB78159211F6D660889E30EF430748D12DED5603C4A20D196E6
E2E70D7D4DB10E0971AD17E20BBB360ABB838473788F97A8F7A31F090DB2F385
3D9BD4AD904346A8A4F475B739CB6BB44C15260F456B4CEB8B65D2F601E70FD6
C2D9CB6B42E6B179290F17A7CACD0FFA2469D9B124D61E974311B8FF9C3BE006
72F4BE29EB7E999037FA26A65D112A3244DA0A676926226A3C161A6BC85B14C7
AB4D707A4F27E63D126FA0385565EAD3B892B539B655FE03D6D35352EC7C0AC6
2425BA5919B61F853248FD308F73F676B915EEFC89FC1C34844815B081D2790D
5FFA06FC39E7606C7F070554A1903D5D9AF284819E183C9765E1367DFF63AA17
CD733F0A8D76490E2F71FA85A7B7C1E3DCD9DD78AE8BEA4F4E875B5AD20B8138
EBAA5FD945EBE8FF74ED1033FF4D2DE6BBB6B676295D1450960FECF18058DF59
EB86982DA7B50F99C3F0639DF07AD37BDB937C93737155B13B71B27463358374
15AB8C2DB1D600283E07267E5E9317295FE50863D00CF9EBF9742C1B063B8715
8778A82A14CD25A917DE4458CD203F26801FD8C740B451BA7339FBC3F1C0DA03
CD11ABF71B79363BCCCA98320C24B0F93E2490832D0E90D91B6DBB2FD6B567DB
EB99042CC575D87FB78865531EDB86C56C8D1BEF7BFD3AFF771EB4FCB5F98808
14E2980E67165F5AB62F0C13437CC3D3FB3B48C9380AC6CFB36C36CC1BE71C2D
FBEA6E7C5B88D6F9E677D7B33C45FB4CAB19B7D10FEC302FF3098497E71CA5F8
C1EAA735AC0D7067364A38622BC07530B775D153D1523F03B57A8519D3815F2C
8AD7C75E1FAC73992AD4C12455082E2A09FAC64A0F689C97ED7EC9F6679FE94B
FAF451146386230F7A61E3BCC3B9EB271EA29B07356B872351A9FA1699E9C414
169420FEB19C7E6BF2386A0D9CA61F27F58314FCBABCC43E84B60965C95D31E9
1EE1FCBEDFFAAAA2A1E6174E12C053ECF75F4EB2D1D77C5D73798D88B2E6252E
EC5F4C4785C25FD425B2BE8F2300E9362BE967C5EED9CE63BB416EBFFD41522C
A9CB09F913DF21B51DE6345AA94541B4E01150B624880BB2B8EA1A858CA4ECCF
5128E505C64EB114B497C911EC02D7944540D76BADA38F8DCA8751D22F6BBEF3
A75779C4939DD24F6533201DB6059D18BEE201D73ABC7BA34CC4E310C180419A
9FE10D58208DD3BBF7AF59AC8F1D96B80568ED9EFEB1B6F47DD2BFEA8201D539
8A58B0B38249F533E686D94EA33C940BECA31343276E4ADD60544954A7D4315E
545B3A950C9F0AE4314B8235647B0D4CC73221F3118D9FEDAB58CF85595987D6
AD55BF562C368615D78E50708A4937231ABA8AFF9F66FA4617B4453E21B44EF5
1D35E8F5FDEB16EA6AB2A304D42A18C3762E487D190EFDF6A33E630815CCC052
08F88A601DCDE506F70CCF140FD72077532FB591C608F6296EAAD4F987CFB2ED
8E919D4E2D687B4215E821759C7F3B86ED24A886ED26080581025D9C05C8A422
30FEE03F2AD3AECC92BCE92E86DF52F54498A6F001D6ECC7661193171DFF274E
947BF5F8006CA854DB19F550F9E794FD79CF2F0176046E37649A600FCB4ABB5D
DBF732A36A3DE48DFC9F1BFF05879B33BAE85152A807EA89CB46E86B196ABF74
54752D7277D58326CCAD963A605B4175231D923412F2C9E10DB7077F62C1A17D
414AF3747CD32734F997A301F94B0FB3D4B56C905CE01BD3C213C5CE07B15365
2F4F6863E50FF858F5995C468F1AA95C47CB1FC5C6F44CD9EEDAD24A7C8E32A6
B9E3EBC5BE36637AA251A20027047DDF36BB12FCCE37DA1C646AFBD69CF120F6
3B7E31E93A3B77B73D154AA2C35A892C8DB87EF11E4FFB05E93777104BF14B01
D495E9BB1640DD692EA3F3C30065AFCCA1581918A21833D27F9E25AB364248C1
493E82167C1BB8796E390490CFE5A52A07486A9AA90439DD678F4EAC9C9D680C
57C87EB12D8E7BCEAD8AF3A9959BAD4BA2D53C72372C8283F93BF26FA71C9F46
C23DD27C853827C6836FC54FBE6DAAFFB0D8B3D590CC6CECCAEF49FDB9AF7529
8CE8802133EBCB902521568A0199E5C4423AF17279360954151404C24AC20BB5
E511B53C74288EB8F8781C04EA06A56331F3CCAE0243BD04339D42CF5856412E
2F9FB4DD1802F81147DF7C8B0790EEFF6D6691E50F855E2A356999DB43B58821
8FCAE82CE42E55D534DEA88A29F3A302F2E9A4402F74544A34A2886CE930BFDF
8014F39BA279C0A3B539FF712F77AC2F587C4BC7CCBCB142224D18113CD8E8C2
34930561E3DCE7B11700C17465B2EC7BDE8EB79EE760C47CAFC07F5FCE924939
3830CE4163799211C33C476D0CA8D14758CA219804517F04572A478C09835B22
5BBB59234F81123BAB7C7C1C37396E4413934E58CE466207F5B07EC6D7E2B748
BCD1448137248F9142949C2317AA398105C6916C769089CBAA843A6B85FB8169
DA4D5F62DF6EB7160CC5BFC1DAB677BF216DB4B8F3676920D6D0746472C0A4E2
0BF6E35D536ABDA987DF2573349D8252F67FEBC79C9B1D00DD43984CDD472386
C72E0F6C080DF5A95CCFCADA955396F9C0F5828B103CF67ABC4192CEEFA4123A
9C0812C8854B01A4A5E6E8EA4D22040D2E46F59223E8F9F92BAA95B385452FB3
ED2EE60C5C0A4EAF5C188526E09ED4FA726724590743E584448156FC62196230
930C26AFF66BD8C9C9585F49056F1EB5FB87025BBF50C4D74A7A66E8E345AFE8
41A1187A3980988831AA92756D6F1EAEAF8C0D3F6F9B21D8D26F4DF0DC692C86
6E58CA06F5D06857B9E4E7AE5AD20F163B5CD398DBB24AA8936488AC317C1611
930B82C3A88729A67197C16546B52B5EC82BFF5A01C8308FCFA303F560E9D2DA
DE2965901FDB0723399F98826B7331251698ADDC282FB91C146E4C0CF2C5256C
708EF4A3A06DC81423C6BAC0EA7576999FBD8E9850EB0ABA28453F0104340811
E8C57D70E4A66DAC5504F1AD0A5287C8CCF1ABA52D046D7DDD31861C815DCEA5
B8C9072585B4CFAD17B84B8C33C048C3D0617BCA05100CFFF2BF8B26ADDCD324
D80398890CA2476E297408B43A0EF8234A7221E258A83C9B3D175990C551EFDA
7E83C2F37658E9F39B37838897AECB732F8A61917DB62FBB6CC37EE5E1687B66
E4FC669E87285F9755F3DC65A543725BE392EDF093757455464D646F0CEBEE26
7D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.1: MSBM10 2.1
%%CreationDate: 1993 Sep 17 11:10:37
% Math Symbol fonts were designed by the American Mathematical Society.
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (2.1) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /MSBM10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
readonly def
/FontBBox{-55 -420 2343 920}readonly def
/UniqueID 5031982 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6A66A4000A13D5F68BFF326D
1D432B0D064B56C598F4338C319309181D78E1629A31ECA5DD8536379B03C383
D10F04E2C2822D3E73F25B81C424627D3D9A158EAB554233A25D3C6849ABA86F
1F25C1667CB57D2E79B7803083CB7CC0616467F68450D9A3FEAB534EB9721003
DBFEEFD050F3AC3492F5C74162A9A531ECEC0F47610B4940E946D21CAA771D30
A6C27ECBA11708CC46C62396BF9D1990D579D0C394899D24FE7A4382EA18E7E1
160E7283AF5BE17254790628E79FCC206F28B5566075B3A5697D5209062544FF
D85FD89D6F43D6588B242AB2666B5D2861CD38A8CE676503EDFAE84D12A71E77
8405E468FE391F4F3F50D2C57ED55512036B0DB8E76A7EF413ED08673E56DE2C
16A3B65CD478433C0D2F9FEC4E662D54DAA43CFA6957D2A9AF8979BE06F70B68
ED4C8C493D6DAC4971A3F1D010A7726D084EC1074FECD7D12D72AE16C26194AF
21AF5774D9B860EEE8608D34F150092F09C19959BAA670022B9A9F263CD391E3
74DD1D1B4CD4D75273CAA4E37F68C631723E08FA35AD34C0AFB4621AE6689861
854D16CE1C375FD159A337E221A6FF1CFFB5693A0623E7EBB58C2969F590D081
AD92DD9E5322E26D6A15023664AC73A355998BCC48ADD0E7A4BC79790519606F
A1FEF6075033BCD422EE8233B83D1E7C20043280D531223D5AD4D5B41669F884
95CE4D6DDE819B588742B930C579EDF743F2C74C95F717FAA6154FADC3FE2975
F59CFB1C1A29059487E75C48505BAEAD7145667D4E18E46E610C868A257173ED
0D30EAA4C090854DD8378E92D0A376226EA7DA63798F247BAC770FE26D70E72F
90CCFAADF118304646955B0310C65F6CA51BEEEF87AFFE294D08C44354C73E8D
7AE0751CEBE41E68D7E91ED09D4F0FE329150A34D0DEE8F7AED88AFB66381817
364A65B9F1F9C6416198FB016FC8456DEEFED46BF4E1F873527AF52C13078ABF
93CFA6D5E87708787DC837B554561D07B2DB9A89B886A92E7615598566203FE5
96A6D048ACFEF549BBCE51A9EE6CE333704CFD95926DFC740F5A6896D22EBB27
79603F94943CBC04381C62F5C0AB6FEFCE9B71ABFF7FA10A060D7CE5BFE481B0
32E05B3C998C9D89CD66E4DAB5422D01B386769A45984EA2B3250786533E85CB
9F1595D3556EAAE9BAB4793D6245EC8B8D16A47697B51772CB644BD58E81F416
B01A9223997DCF9AAB43FB3CE9C8778039BA2D8E075FC02BB3FA5D66CCA58D24
D9E0261DBB8C11092320D9B0F5CC79FAF53EF2AFD99D5A7732B1962668A85807
9468AF19C570B30F7C798A4DC45D0AAB6E51DE57FCE9F19C468741F1B55ACB6F
C9357E6ADFF2A2E2E84037170DD9E3F217D22DDEE6E8660C7988961BDE9990AB
4CF63B8D0D60190BFE810A5661C8E02D32283B304CB434533629D0D3826548F7
EECDE3892C213BCF51BB7257B1C073A39928D1B67DC28E98CB0F7D1D0B158EE6
D49E399D58B3C6321CC9A2696F019E6F7EC0DADC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Utopia-Bold
%!PS-AdobeFont-1.0: Utopia-Bold 001.001
%%CreationDate: Wed Oct 2 18:24:56 1991
%%VMusage: 33079 39971
%% Utopia is a registered trademark of Adobe Systems Incorporated.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.001) readonly def
/Notice (Copyright (c) 1989, 1991 Adobe Systems Incorporated. All Rights Reserved.Utopia is a registered trademark of Adobe Systems Incorporated.) readonly def
/FullName (Utopia Bold) readonly def
/FamilyName (Utopia) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Utopia-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/UniqueID 36543 def
/FontBBox{-155 -250 1249 916}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC06347FF71900AC8FEAE3B716D52
C1AC4E5DCF4EFC3B9121F09CAB0C4BE35FD0740E08C853EF201BBFF011DE2163
790FADCD67A15500D3F87E2616B7DEEBFB3934B09CF7B8BE9B945D2638887F73
1C3214D790EBA3065BF944D77DD51978CB663398285895D774586FDDD6A7467E
B1BAC83EC766EDE0FF34D07C6E315D7B79B205EDE798A08FD0D9CD4A1307FDE8
7F57AE7A32759AAE66C77C6127F65D92BCCE74ED784372E34CC835BC789BDEA2
9E27574D388B2CEB1DB127C190624246F4991BA418137BEC72C8CF7830DCEA26
E13BC7F0CDDAE283F10C1FDCD1B46ED2C4BF3526E9DD2FD5DD021D1116D3D9B4
44188211B1332E1BE656BCD0DC7C6D7F23ED03F9A42FD10B79980768710365EB
A8E211AC8936893AA9318E20D297C730A6A626FECD20651E6159D498F85DEA98
038CD78953484C2AB6579DE0F8455DBC490B5E1656B45A31736E5E2BF50B8F31
267E916812FA4661B391CCF31C1CEF974E371009854CCC04B88163FDD69DFF46
307B783974C408286274E78CEFDD99FB253F6040F96E4DFB000EF00A93CC110A
AFEDBCB7E9DAFDB19E29736CA84017FBA4C48D67F617A0937229695652772391
0B47379ADCE97C1A2272E8ECE87A1E0B35CFC9400B90A330FDDC52494432E48A
07A5427237AE7DCEBA59F06395833B628C8BF425A38348523AB24EE529E70F6D
E36B4FCA848B48F5D18F20D88818239EA04A1D52164110F10A861C7B7AA87786
3787FA2BB85BEF178696D7433F83886F07FE61A11DF621C607226F24F7EDBCE7
EF8B9A9C547562D02F4CD5A7C1C4E9CF749B6E8484911EB05DC8C54A020A5376
9746976D0F3E7C6D7D6D03D38DAE94B64AE7BCB30EA45A64C8A37114EA85F851
5E5F96B454764A111B571111C7198992EA306160E302F1BC74EBD30F86678687
F7FC00E9E3CDE46A18A27D24305A3C595197D22DF748F133F070C630ABB6DC81
263ECD7E72539CE014BDF4B6F329B383570C09CE92278ECC0B38FA0BF876EBEF
458119485A6A70B3C82D9CF63A2EA37E776AF51DD37736854F8CFF11413C0061
18E2A555443444908D6E49D23F564B971C26A335C7A93634622FDC1D98982CE1
CF21854B959F0E1C248D4355FD3C3479B6FD320669A68F8B4E14BE7C83F37CD3
2978597FA3D1316AFBBC16678C2C5A68EB2DFA8D4DD83DE61F3DBA36E97E3B9D
03598A007ADF0105B16288C6DA4E024850CE068524199B057DAA355E4536EE0D
736E89C40EBB32B4A86D360D5BFCFCFAD31C18487F931AB032487BBD966F0ED1
8D81410F813119C112B5BEFCFB76101C07F53D05B8BE04D971C724DB2668731E
96F301B6CC25D531E86677AACE3EA3A91F0CE66E21D7084346CD33CBF25CBEF5
D472CB4C7650DF6FD8B3B31F630AF5107AAC6C8EA23373D0BE06E4C1188B7A4F
E59DA23C2B6E2E8E94CFB4A81105C648AB572C4998ABA63A89989A282337B556
2C601416984C2ED0A887B5BE606C3882B8E6E927CFC26313FD9D352D3A7BB065
9B58D13BBD84E1216C8926D2CB3CE355D958E1FE80BC9701C6ECBE840E637E64
C347CC94398B881FD0AC49E530DE619BC49A5DD9F91B4766F06D0F943CB8861E
D69DC71DEAB42CFB71077291EA019468902186EEC417AA6A483E768886444090
2F283615BA3755E3944C8D5D5408531605BD13EBB44A71F76248B694684125A3
870232C3CCA4AC8DC1EF163019E6363883EC4892F625C6CACDD72C726E008744
F8383B33D234761DEA8497856BDA04DD10EEE7043BEB84C62D7B46A094EB3699
CDB1A9406679EAE94F1F933DE269C7AC15CFFBE660FC1E5A4758EA23EF14001D
4F6FC6FB27FFFD254B345C3C32CD7F70DAF4D48F9516794CA4BAF0827AB41309
AD1CAE4940E093970991AD11C5A830E17A51EE27F727EBBD0411E3DB595FEF8C
2501BDAF0235FDDC02683334FF508FD924B568EAF96E7344A565025C2ACEEAB5
E059B2545EC497B4599F155D652C89E2F7F8438C5F9AB06D6F945E70E7A91F26
BA7CB2DE1D1388C75F569346AC1959FEA21109882780DBE5A7582180678D9CEE
63A5FB5DC7454899F13A94291C310E9550C701B76201953AE7D54E2E21D099C7
B4BE4C8D167AEDA5D3CB28A1B19B8832F618390F18345A3B1227620AAA8CA870
2900255700FFA51A200FCB159518E0344D325743C2F22D81D667AAC3F1EFFF05
EAB31373A065D571B10941A1BCFA04F8C43A88A0DCD6C9BF91B38141F6AABA00
45D422907A8272BFB3D5B2904420D8C615B22BEB4EFAE8F1B4BE8202C3EA1DCF
F97A6B18CD11C980D136C72CD22E25B41FE3514B671C829F078BD0239DD88B9D
833FA589993F6DBDE1797DB85D90EDF517E8C1EB5EBE658F1F21B5CFBC6677F1
1BA63C045EA007B9CAB5BD7C5A2331D60E308D87ACBA9310F1E2962F5974269D
CF1480CDFA73F86264CA10DA01A7200C499E0A96F35FFCE97D014D9E6FD1443D
63CAAC1B80EA85DD29E819E684051098AB8A29C4BC2B09115B4CE1DE40F8E3D2
1B65CF50EFFB57B933897429B05E2163BCD5B955EDCAD711496148343A1CC95F
643485416BBAB379DE3342DAFD33E775325A6F52EB910A38E6815615DBC4A6D0
AD47DF593A8C37B497CDEC2B9BED9166DD08277B8DD53D95601D15F8EBD20060
C58855B1CE217DE6AF0DB92A643AEF89656E64E8E61B4B507828DEAC5CC3AA4D
4E4EF4F8244D2A97ECE636E067DD375F2DF2189055BF990A8510ED8B9EAF726E
F212F2BB13F10B028588947A8E44DB7D7018B78E809570D22D7B0BBE84919DB8
8B5332249D1F885E0CBDD1402F244405C712C1FA599D48DD2379BADDA3058C29
534009515DFA13DF3E9E179F9CB78A21A55472F8432419B2C5B05AC24A6D403F
D4606192DB0788F08860F1F933418DA65895B0EC60627D7EF14A144DE09188B6
DC71C84DC67964339F2A60B92F65BC17D2C1BB5F3028D95C13628ED8E82DAA6C
77B3ADE7248B2119C75E4E34FCA142C9F546DBCBC3F0E2C34982CB41171BD932
F7E2CC594526FBA26021B11B1A3849001DA45C464DA4B4BC2BAED4C7BBC96BB8
13865BF01359D377454211143D702F79AEF0226B93038FFC39CDF9397838DEAA
46F4E9FB78EE0EFC3FC98F8B3794C28906EE021F843094BC20F8D2EC3398BDC0
FF1C9D67F730CB626022CC1FCAAFB473E2EE2AFAC0DF91B3232273B010B29BA5
AC66AD0554E4F8889C9B47B4AD92B5A4341709BBE3F05FE0BED47A04587E274E
C42628081F55F0466B8AB1A4048C94207BB98B7CDB3E62CC988B6BCC3E5EECC5
B6161D1F73E6D37C679AB451707264FD748CE69F18163FBEDCCE0212121CDB68
0B252ED1A1872CFACAE3089BEB206B5C12D6B871DB5C560307835B7F80AC3A2F
1FC465F8A191490AC3E853891F8F20A1071176B4E65720A1EF391EDB7842C41D
C5F1AB3A1B2264894C9B99EAB171F9B545106D00577259A631BD834CE1788EF6
77B2464D9BCE168AA3DAAD30374C0DA2D62DFD28E057EA13FC246A448CF87DA9
985D2784E9304C14B9FEBBCBB41497CCC0715D60E8D5DD10DDC5601F6E87598C
57779E68ECF13EE4F35E4917F47CFE12204566F3E762FFDD4359485D15D9CB32
5E304C4D74ED5C2CE03131108CBBF97F36E7215B503075D9786FB52D9E1943C6
D9F6BEF7EACCD956422958D430A7C752D2689AD448334D23F27DA58EF3CB6184
1AF5E4675F2CF0D8072A91BE3B7946F55061A6A2E5E204862346327B6D71AE42
72CDF0343A1C2CDA74DB0C44509E3FF451ECF9575CAB74A593FFEE67B9849EDC
5B2BD3A85F97173F4D0F890D61E5C0C1E387A081672BCF54CB9860372F5AE139
A5FD87984308640C77A1A62B40C0741FDEB7BF0C52B2FA4A3CFA68FCED8514AD
E58389F3E687E6CB052BFF9D02D44545F7ED745599F8BA4DF84868AC4D2A2A8D
596EAE86C4159A6E97EDAE05CF60692840BCDC7E789D0F372DBC53ADADABAC9B
F9B9896430330BE400E0AF065890A92679FA94B3F7508AA531C24706AF122BB2
4AD1227F3B9123E862FFFAF63A6C181536F502F8D6B0AAE61E2E0D0646A3CB3C
14CD74242AB463424577D48E851EA1A9D31C01657ED226325924521717179BF7
B82C50EC9EFD3D80A74DD371CBFB32A3C449713F1B381FF0A1224C8F37EA53E0
8713258213F5CA8F409C80D2EED51004C34BDD9ADBA94A32060686841B1C7553
DFE2AFC2E607A690A462BE560D10317510A40D25D1846E6B8291F83833861C8D
551318D8048B24FAB2E916526612650C5711971E59D282DE8251E464064C2545
2CFF55BDBCEE4B905F7282F84FD99717160941197A9AEE8001063448EFDD19D6
44AF7C4444F04C14774FB9454F30EA870B235405F7428B162EAB8C1F63EEBC49
CFB76AED59BAC35469F8B3ACB722B0D5B9F62257562C543D48F77A1A84B8F22F
11E87385903D5DEB731BC609A831C2C44DA02B5AD7E04FB70E5DC335FC4A287A
3D7EEF35D919BEC4BBF73807B202F3CD10A5C25A678CA298590410EE4FFB8D3C
54F7BD1DF67E2F5F359D6F0C0D960075B60852CFC6D84AEBAB24BCAE98904CC6
D61846EB709A75B46076F6789DD382CEC27207D73811F56DEE2A2D713E92515C
841D50CFE871FECD3588C6921D791A8B29CCFE9639E1E4543864BF9F3F19AD13
BADA33B9B3CAEA1B2E0CEE18FB8B3EE2B87190DE9D270FD6273A5A9C0B16424C
F360A015960B4579F8EEFDA2D866ED02ACBB139DABD3777D170AAA2397BA2790
F6AE617BD03A345914478DC2E67A1502D92CE4ECDFAF70088E03157F906CDF0C
906C1E2E3EA456BF8751803C8D597BAC0DFF63089E9CB6C0D61EA381BB0C2C80
B555E12938F89A3615D4C55058E0E94FFC030E834CED6FACA7BEB99EC932CD97
6C23D2485951E5B29FFFA9FE00917A5A95F3D031D10C0815CF7EF4B0460A1C7F
826C2EE035C2A2D5E3746DEE48D9490028EC70B0FEDD062F36A42B3BE7467E13
7D494B884AD73C94BBEBDB8F509233F5D7FA99A6D30EDE8AF0B242B3CFB909D5
0345C5346F6F0FB843508F7AD00683F44FB3F7422FC91F29F553C4EF274551D8
D9283521B8848C40C64509C8C2B2D7E37C11995B75C95C5382E037AE6F740D82
E527FA981C25ACBEF4E24C44D80DC9C72D991599F612AAE32BD41AC5923E9C91
A2A580467B1D39A080EA1887B537136E32E687086A1BFFAE7B61B6FE66E7ECDA
BBECD0860CCAA34028CC90E132380B74C655F6A498E24A15660E428285652CD2
094DB8F9CAB8235E63005CD570922F0119D1A543FB16C8FDC2F42A699B74843D
8454CC3FDDDF3CC177168F047E593A5E50026B7F359C2463110948543A2C150B
6FFEDB36DDDC835084DDB3FF67F4C955A996C604C62B7E04D4CB121F705892B1
DE445F5693AECAEB076BF271B4E43DDDA66051A13ABD6CB39EDCE4E34C4204BE
468B9D3EA3B40C56FE7518EC1912CBA8104702C4539B9EF59C9E976C5F64C360
6B11B1FA405E7AA9B5695994B5B7257141A520A1B83D37D272BCE61F232CD354
E43C9140AA5F8FDA7111358F429B57975377F2B24BED0BBCF641FDA8BA06F630
0D6B12B85111D71AB0AD011D609B32C5AA75650661A7B4A92E5521CB298F3DF2
8FF3FF34DF7BE74C6F62668E644A97B74DFC7650A0A278E02684B935BC50DFAC
BBC00786801DDA29AA77DBD86FFFE1825DD76B34DBB96A523DE72C29715C857E
A20DB515C85D4C8550EE32F4668A2E250EE71FDD71FBE170C8BE74551019C4E1
211BF2FB3FD9CEAF547F96F920693575FE5C3360A0CB5098DC5543182AF7DE93
337F317023808453277ECE057AA7218125D618B6F832E45704D7A2599562C505
73182292EDB4748F044FC9D819B6B6F46FDA4F46E25A77041EF4E17CC10E1086
65DBADDE775257A3A197500422639E9C6D4547263F60381EDFDB8CCDDE45B218
B0721EC75EF70DC708EF4585382D6406B2BE245D3A877A5474D0400F5624CF53
DE0458E8F6E1B541E1376EC8C59C760AA0DBA82A6CA8BA7F7B68A693ADD6C824
A90C2555689179FD0789CC7F78CAB0D3F87E02F85DD6FE958A89FF7104DEE93D
1CE74D460DFC7686963E23BE477FB98D2C0F55BF95ECFD77FA9A1FA64E517F6B
148756DAC2F27D8323052D1205BBD439107FB3778FAA31601AF5CBE7EBA70819
67DDE36FFF649F75309C64FC3CE2F50EAF0F39E1F01522BF1D1D5C8EC1832FA2
CEE2728FAFF64D579A2D418548BA5C397AF1B7F0426A6CE3473326367453F555
59F43BA55B66ADF5E032058F1FFA20539CD88C2616430A365985F7D9A1C7C0C0
457A950E619B423AC51B24F20352A894B559DBA36CC8C4A897319446FAC0032F
D4369882D4E5880D78027C202CD2DB8B26B827F6E45D14DD80F3D202268DBEF1
79EC273F08896FE98C08DC0011A247582DF0ADBA0AB2CE6C615241BCB90CB54A
97F10A7E363AF9C716C5B8E537F8F095C29B503B71B0AFE3EFBDA7DB082741AF
A05239944BA2D55B6E017E21EEF186188FA720EBD747E4152A9D0C4C94CB7053
2C9FCA76EA5A74E06C35E81AD1E4121D68FB545116BB280D5A40E472A955FC4D
99BBA9639E040D0976CB49DBA0FFB2C83188E1217FD3DC31B8A50063EF09DD48
288CF569A935C2AF412010058826E86802721D05A24A789A87A91E32AF160BAE
4E43C5FF3296C63A65CF4B5BE79083EDFAAABEAD5F369B760FAC62828BA9CCC2
020107ECCE0CFD8CC592FAC1E3CB2BB26E70324795007691AAB86CF71BA6DCBD
58C1309B0A33762D2331F1457586958211C0CA7FBB47D2C3A8E4271A9098113F
DEB96BA2E16954DAEF6C839F745424D22B9196113671378FEAEC8BCDE51B4C35
89C85EFA62395FD1F81BECD4BDEFAAF6FC2026715EFD1769EC89831B5FB31E4F
3718E1A8FFCE3D4169944FACCBAE27F49E64F40A500F0468CB1395A056C4BA33
151CD8520DA2B184752DACE1913E575CE433B3D1210C71E990354A2BCC3285BC
A243523BE782F9D4B8F413BD3523D9F146F40795CAEEFB521D7D4B3FC2A635B9
FA734DC86FFB28C4872B302CAF3A35859346963381851353D3440910361E2E56
8DB86671E256B60A6BD146E87216775835A32972FC3F6196E06B2F7DABD244EF
CF2FADA229D6A841E5ED4DBBC7001A78D554F14F61552EAF9A3F3B4B472AF45E
CAC8F57AA1F8DA68D2E0E935E77FBF1F1E6E9F502C0B054EF8B9B96E2D241AF9
B59F432C56DA120F1EABAF82F2B3EB1E58EC95C05E416A0637DAB7374827AE16
8606997075D4F195C45BE7DFC13913D06020986D091397E47BFE7D3758117169
48AD3B534908FC091FFAAB1A65B10806DB07E69E1946D8B5E3DDC0F652876682
8A20A07CA27E18E279C2AA4C187FBFD4CD3B9F79F18DD2428155925CF5851581
DB8E1F6B793ACF6AED8090693AA01D8B1A595E2D192FDB342D3AAD49BD2A0BC7
2062B3FFC8CD8310CE2A1A75953CCA107D2129DF1AE1CD8442A3302C239E7313
4C01762BA4D2046C23EE2EB474C88ED2C21B731318FD95B54BDAD2FD90E913DD
F6431296A9B0E87D6EFFD802834C9488B28D78B8C99D13E74F19983D0F014F97
EE2AE088F54DC0BDE69FECBA2DFBDA48328198BD3BF68009D30DFEB19A309323
EDACAF414969AD54363E452DDFB5451451F3F04CD406A5EDC888FD0454B4461A
9925F735E97C671EB78F7531B73929EDBABF3DA8E5514EEDC7E235C3EF83DB4B
9D2BB18550323276ED83FBD73E1621E450B057DE0C572DF361836D53D817F43C
7A30BDCC16D1CFD1B577CDA4DE40BEBAF7349D2B3D656784318768FE151A1450
89ECE53B7BD29057F351A1EF4160C90D18CD2106773B47C2C83FEFA3A6F9965B
F8BED4AA854CEB69CFE87031B4C8995D501F581FF09BFAD35E4E67C8303F8893
192258F8769D11F396E8561C64782346C7125730106E764C31C14812B2A33E45
BC27D7651A5E8B0C46E6F13C59CAB5A33A32AF2B664679A9E270049D0ADFE3A9
0855E01ADB36BE642048F2BB4DCFC29374C6ED59B74A98AC8B3F350FC8E67D17
4E8E17073AC9D62BD410B4CDD6D2B0A8696C7EE3EE4F8E175209AE2D7E508F6B
A4AE0EE579597CA8B941DA69A91A7B49478A0E8E8B7B335B45E4C44777B8EB30
EF1C4CC9A3A2B13073FCB7AD4599B995F92820ACC78B07A139514E9BF54A2DC1
11864B0BB25B0B825DB940B2205CE966D642040EB0B38CEDDE1CE020A0FDDCC0
49BF7F3E93E768E65608BD781CDDA077D715480B2CBC235F3965AF7B023D861F
55EF9B11D9424C1E354BC3F0AB7508430357F663DB4ADBCEF830979EBCCB7CDD
B5BE6BABA56EB49D7B83C8FFAE1BFD0CC520310B3EC2F36B325ABDC00FD3C482
C9516E52E31772561D5A763A54F98A822D60B80885285CC01B43C52F5C88CA00
CA1DAD558C1C9F28E8D5C425BB6FE742785B93335C35899FDB03EE0D3F19013B
A44CFAAC55DEE70CC552365442CFEA7D0F6A814531BA1EA58866D9BA07D08F1E
6042DBCDBECC4527ADF4B4CAB2BB2C7168B02C72A67EC9C940381A74EFC954FF
56C7D0A2324269304EEDA172A99BDAA43F58021E304318C88E1931B1D077CC03
9B1C6A9F4F0FCA5AA030D6B0D95252F4043C996F448DD51F37E7E6508606CD9F
C5C410AFBBF859DAB1F20D320C673EE18AEAEFF00D86429269E12A4FE4F57227
43E02E1CE0B34886D07FB2D313480A405C503FD8ACB1E2E5FB62921BF382F6EE
ED76D619B0F314912EDF4315E8D897170E21CAB57C552C5FB5569456E9CD36B3
36065EE3C7C869E99673774429620B2B00CE83B83A3AF75E62A8E936112D0212
AB6E38EF185B84F4ED86640D6E98DD49D7049EB66BFC686A71E433EFE4192FD1
032A17EBBED924E1B12A032418B93228959F428EB91057E400C7204814EF743B
E11D5752AED1EC42F237D67A6C6E69E9EB8762A78E43E123A045D3CDE2F42CF8
80ED47FBE495AED6C10980A09DB37C7A96309E02D366F6AD4A5C0C540C8BBB5D
7AF413DE5D75116BBDA7C8384D416BEE2A7A81D75D5BE7E36B3440FA2276EA91
DDE393B341D04A4BEE48C90F2546C66916A90E3B0AB0642752DEE39DBE2A0A4A
3F35B6D2A517E036175BDE9EA75A6EA5D14B661CC9D209841A21F8A1EBF76B98
6E169F9096782F6A1AA23FD73E0A0B512508C11787560921B464A357C3415525
CA370BE1A3A7054A9A8F0B5446FBDF429A48E48A8822D93C7EFA558C47F8EDBD
A26B381CF38A8C6E8852D5B7C81DC72B42DDABCE3FBE7299263544DD8B772C90
C8E2890A540F6AC38FFD8A59F684BFCABA7D0F1F96973203C8FE511E2CF2E3DC
0DF5CB2FFAC8AFE1FA85B7C41284FA43FA485C013275732B4923C66BB8D8FDD0
00E5CAAC670290126CB37244E4B9C4D107615F755860388B0F2CBE4263C0327C
13422E1FA79B3643A9130AE247601F2890A2F62BC49FABCC96487982CF947105
F2D46FE7B5F145D136370816558F2F5DE18726407F10173709040A17B1C73167
C8548E1DB01D28189DE017A84A72702FCB871A7CAEA1CC29D89ABD2DD32D5623
BB6B9E3A3CF4BA7D60441055EE4DA43EC9802669D2E98DE04F4898DE09BF2AA5
3E613A4428BF01DA7D07DFBDFA26CF172AB741868CC00DC14F464A0BFD7ABAFE
5A7731FE86FA71AFA0DA337E1930170776F8C442463346D257849886519BE99B
90FD515369BE070A1FBF490CC7D3981B721307E949DB6FDD3FD3C9A99D0D3491
92BBD1FD6CFBD40AF6F4D692089DA8DB49C971304F90572E59244C139053ACCA
3A1B64C62309FD5644147318E36894416E3DF1D3BCD991A11890BB0F308913A3
93D9B8E05361FA68423DAA664DFDAE8C4AC3D14671A567E6A47A657E79D1CB80
2FD7E5D6F985BC777CCB52136238E27654D2EE0885EB8D1B8FE7F54C7BDE21BD
BEA1F18A1301E2E83A649B1844DB7E187F86A334EDDBD176A8A9143B149964F7
F7E2715F3F276EC296FA58E2ED8C5E6676C68451D2CA5A06C81821CC717A2E71
6E5EDD0BE85B03C166369D05653A3F84D8610F0BF7AE5216F01D8CEA6E7F534D
739CB4E84858B98003CCB7E4003F50AC727EF4DF51A254EA6CE6E7F7A1116C9A
84107526DEDC9AEAE10F4376062164BD9852B67F2640F60C6A49A6E0424D2C0F
46D048784EE50A38AB91030A98997C81FB8B06A6ACAC754C16559B1B62CB959A
18D202E1DC5A94445D32A76F096ECA9D06FD26F959488482A8CDA715D0FA6F2E
FE19EF5FF3B0AE698675092F984BAD1B98289693291EF767E1CBD8312BCB354A
7D13FBC7915AD30DE73B4AD9DB9478642E3F3B8CED0A5D12CC39B92507C4D7BB
A3AB19830D4357078352B7F7FDD9DCE662403A3569748DE48BF1A81BDE6D8A49
CA5A5073BC31BED19F4F1ABEA2412B084C042C4241A634AF61C69033C90E9B3F
3A4EC82BB56714A96C60C6A2F274EB1E3D6272184EF9648A01741EE32ADF0520
07F9104B5BE0C138A432EB1EC445803717D7AB431A3A21BF48496E2D2F20A581
1D4529BF59E531D9004ADDDDDFD443059E61F9B2E194DB60B9A04A3D9A35816F
3473922F11228009CA1EFB7EBE0C2B3490A42DD7E8377968133623EDDCBF8C18
C2B1A18DDE4A8960BD8CF51CADA0611D085259146528692E02002374ABB242B3
ABFEEB18D093EABBDD4192FB3DAA9C31B9F51288987EF8838F35C9B8BA96A713
2A3D28EE6498B2382F1AF712D303A9F59F5C3C8AFFA53F7853F134FAB24DCA5F
D9FAC3A24386F7D978FBD321D0B4D3263453E724BC8308E93315806478D2E7A6
4B1ECD788133C257A44F6F45FC330AE4DC2F766179223949E0B7D75BB7A13D14
3C8EA85B7149CAF3386AD23291D20EDC1FF0F6DF1BC4FA1C0E0BC773968377F9
C178BA7E1482894EC14AFC72A0196B29988C44CB8E15599B14D69F905D14DD80
F3D20225C4793D215BE90C8DCEB45EA1774CA68A5962D3D7D55A509F9E7991FA
D42E46BE2AE5B42C989761D329DD4679F549DE8A54F36621E90D9D1A73FDA599
2304E477FA79B5E576DBFFCDCD9E4BB1F50FE9D0FDD9306FAFE670B5F4047EF7
F1A6A72B0FD1F670F71DE1EEC9B11F6D555985D607E61D03AF453B7CAF3F5470
557B23B9D4595F7B39557C5937A7B634DD5C1762DD586CC723BE58071B285ABD
80A941EE8FDC93FB6B90863F93A1FAB4240F4410144FEC9D6863996B65755B9B
E05C7B17E82B4D2B009D7064E33BD540290841494B0F79C0722A6EA14410A840
DA0CA879A6E37254730B9F7C4848074666C240492B4363244D7A1A8F0C7B2C4B
D9AA791C35F20D3775F546C4699CE472CB09059041C94AF52B9799CE3C35DD41
B1ADC99C380C11B0D3D8C4874D3864E8D3C2D54DB2F0EE08F7D381A7A5B53E6F
EE8FF4312597E55EA9271E7D988969120CC2F7901CBD7BA2A1A0767E773B0AFB
281D9FF83EBC33510C30F58212EE909352A19BCC44BF46197CFF285E2373F1C8
9A0CD5A08E9B3DA84A96CEAA23AF1AF3CE2AD6DACFB16BAC398D022258ECE134
3DE015C0C50320FE31AD2BA168313F7E97670239A081E0D95DEA7489BB5B517C
56B4331213B6F9FFD8024C4DED78AFB0C7470FF27705D1752A5F70D654A3AF5B
7879610B1B051F210AAA97E5121BBDDC1877EED1ADAA9536982430FA013FD6BE
DCB604170DDAD39A1AFD494CACB4610623D16885A589F790BA88BDCC1E4FE82C
83202B66549E7A29A82BFF6E43B39D6B78ADE1504328837007A5211E4575718C
F4B1207702A9DF56BE4A481437C4260CE492C02A13888B0A6B6DA2B50DAADBC9
301FBD0EA4C01DF06B25ADB865DD53C3595C4155FC7ABAE63E622CC4BB97B92A
8964A8BF772EB8512B9F7353C66F46C0606D8B1F21EA995B12328C9EDD8251E2
808F620F8898D339CB057D0CBB2C5A1C9676608C0DD0842203F21E371F6A08D3
E27105BC0C058E3ECEC4C7C1749FDDA1AD4C1D0755C599BBEDFAB3D79A85A3DB
783D1FD13C45F1649C962079BF4BE5195F24FC32C2EEE973C854E73614E0DD27
E37523B1DEF39018B514EAD5C8185DB3507DF2CB3A55B881621372BB0DE2C7BF
4ACDA0A38B160034BE205599139336EAD3EC60A973101A0D795FF937BBB41C44
8971409B92D906A498C247E555FD59C537F6219AA05EDFC03DF858AF25623A1A
C484E83702A42A540B806AB197A5AAFB585633EBFD486669942A41A2DAACCF78
18445107060FB79F5C521567F3CE48D587E12ED82155FC689D7429345E978816
D87140B48DA3D7E3F17BCC7167B2F4590F917E64F0510FB8C5920C08E89C60F1
1E244D377418774F27C6B28C4124046B87DE7F571E1DFA913BB3ABB184B8A1AE
E93686CE928A7F3F73F651BAC2A625B10ED3B64F359FF2E78E3BBCAC1A882F2D
19862612DCF1EA94E8A7C3FB8DF58FC22FF1F849ABCB9F3D0A5F45516B349BDD
7677CC5A51B7C55473B60C50BC12D6E697ECE6990C1903F6CC909069C009F89F
1C489651076AFFE4DC5D2E51AB85F479D41F6A4031F01D2985AAA7189907A396
D07F2D617ED88C645B2FB1C9E9DBAB383D108CE3D7CD236E6D2E8F787B6F5E17
0EBFB446B2C3C5F38F4F157F708A08C797659245E9DCA11F7A9725AE80903C5D
1615C280FAB65C54852D0896AEA7AD06F8D8891194F15E2B2B3B65067DA3D4A2
1AE10E3A49600034FCA57968C5A4EFFB389E64D2B9295340BE2A120162EE8B3F
7CFEEEB69904849178BCB8FA9E1C488EA8354610B1904C97B3B6CA3BEA0AE4D4
42309E4FA2F3AC091ED4C0657E293E3C85D8815A57DB8D031F783A4423219149
281810A83C3A4C7E3F32898C57BD81E5A28DC97029E386FE39FAF8DEB288906C
569DF4C7285EFC86BACE34AAFEC3EC88CC65C4407665846B00BB502875A40DB1
7A1D921E3334183C34B5BC84E617106D7FFAEF267623F9CED4CB27B2DCEAFBC4
0E062EFB5EBD8F24699F23213732A41AF880B3F2D148CEE3193CED0B6E1698FE
6BB4252A3B682E263081AB155EB0999EB3D1A393A2CCD85ED312CD7EB169A6AE
92C3A459529A367BE7DC9543C80078EE93C93DE7A6FB8274008FB2E01C3E26F8
D3C47D30AFC5883C1DB4190B5BAFEED9507DB3614642685ED1143ED1B4A06123
70FC9C9A97937129FB103919ED106EC83C342F57987E3BC84A95DC767D5D39E3
B32EA7C0F2EC259CCAA0DE7683D2C74BF98B09D315BE46EAE3B5FF82B4A73B25
7A295A2B12E566FE3D72C93B4E1B31768C658C5673462ED7E6D7CBCB26247A33
C2CD49DBCADE5A993775EEC785EB343EA8A14106D7476775FE2ACBB7284FCAAB
3376C051491AB14E6BB73F4AC1658EF0F5D76C0180186EC2776129A3739EEEDD
C8FCFDDA4331E45F086E0FCFD8BA89C15EF8B44FB16FE890903C9F88F6D3A972
0B3EF7D5D9FE6C120405AAF9B80ECC6C94995DAC7BAE33C2D9BDFA4D5E752DBA
250991A46B837D36E02A01C158ABA25B186830166E3EDBD8961DF45B457F5D7C
9C788B427ED303C54F4A4CC84D6B0DFCBB788CBC2405B8955EF874F59D6078C9
06DBE3384A11D2C87472CC01C22DF26AD4269527C3F07E420ACBF07ADB8CC0CB
A234531B3EEB7E23031D2F40E8C11C007417D56AE45A1C062DF8185ACB36FE76
948D0068ED271C7E87DD3D50158DEF2F86C2CF0929FF0736877D611B195BFD0A
3E085AD4EF7E5949FBB7D7F25C7BEEFA19FEC9EADBE885A87C431748A1CFA725
2363A207D88A84E3BB231F9B2BE4ECB34C7E99C47D16FF244FC13EA58142A856
E41CC2C13066712D2D4501884BC744D35A5FFAA4E16B494AAED3104599BC639F
6568B547BF1A6CB1E0DE2811F71CCF019D8368C28A8015C33C780430D98C5C93
97B97292A187D016723ED1954E515078360765E6A39FC0971734B8D63575C377
AC736200D8F97BB70311CD967D167E9A39426CEA7D95C8E5DC23352FD9028DE7
88724EE049D7EE29C10FED361E89335687D1339203FBA129B9F858262D54D034
54A23AF95CFF30D196599B362AF0638352EAE8A9F78E45BE34098661CB66F3B7
F3165E5E637D159929B8F1D86F8EC12C1DC11ACD68D4EAE0E0A1A24075AAADC2
E4C11086C409C3EE2ECE5902EBEF22A27A8BCE9663C19FE126065104A5079308
24CCB23C6BE7635DDF5E177D7A75D7D2F3B09026BC5E40D2852E8CD8E08E7A52
60D375FC633A187B03D185A76C711B9114EBE94E3B4FF23648D4FB1A76C0403E
0DAE8A58AF29A2B82CBA82B08B0DD3C278D8174E69BD1E30732889729E4F0F98
8137B797B28B2E03A0269B0BF00DA9E5401FD95E2CB93907D38FF8DC54EC7AE5
552FD375217DB6B77D1A43766C89DEE2D4EF2545BEF5468EB989CE7585AE20DA
80ACD6AA8E09FCEA0F227CAEE19BA67BACE765DCC24EA63876BB35CA510F9D2C
52B688EE3F59090FB908BCF1D8FD8999D41E6ECE389D53FE0C9C4B153CCB8B63
F38721B767C65B6742B1EA92ECA45F67D30B532CE60010C59BC54F96561F7521
0DB8EE9944678A9B463ED47E35656B224DEC143818F4C6D8AAA162EB8020554F
B701C4FF91F30DD35168BAB98383B74251CB5DD2CAA72DCDDCC8254B3E605D8D
518F7D32DE4AE594EC799783328D1D8486EFE17D53CA747CC217F9F56A06F529
D6E00919B19C35DFFC653F10DA6E7EA5C1C2DF6F995E6B24AF6897483A2D5CA4
DBDBB63DF9044E9AF9B83B58770EF66E6F1807C0DB5EEA187E699608EB4B6439
1FF719069E0BBC1B0723E7A56E931E14C0C655A1FE09293C06607477CBBCDEB1
0D66DFA6703E7F512CD94B4A6FAB10B494AA07B13032915779CAC0FCDC24AB8E
FEE92AB61DBDC1C6F26110BDD644E546AAE7AAB8316F5A1A6A2B3E2D7A544BA5
3E9AE774C89EA5F5C6F87A6831A2BE3EDD5800F9328D3AE03AB5FAF318CDCB6D
75606B3E1251C62063974B9ADD5B1F60BEC4C2F74649503206A98F5C386FD82E
954801ADA133E6B4D9FBE9073A5CA65F341E8A22604C3C2B08D82400DA91861F
3E116C6091E1429B470B78084C393E98F5DC491C325428B4C50D2F37100344A6
D07BF136C8ECEA2844F891D3933191D618F2BFC63C15B6055785DEBD418D9EFA
3AD93AF01DE2034215031EC4100794620C277A56F2D60EDB69F08CA04A1134FA
A381BBA099512BDA1612D160228E8CC2327F68CB587BB623F8676282946306E8
41A27AEDB7493F08D702E3CA82DA5A8C99FF3B13FA137A8AF44E2EE4DE7B0C51
DB46268C5B933D0DE9BDFEFF61B5F0E0EA0E2984E4873E7FF5601358BFC654F3
F51341308ED6D55332732BAE23AC16C47C0CA011F861A810A30D5E94A1DE3CE8
1E7527B57E5AB3AEEA15BB0161B39640F4DAAE574390CA1F9FD02A1B1B436661
086B9EDB9E3EC49600EC3F76BC5C60DBE7F6D3F8E8A73CCC6B41CE82A4F3AED9
A0475CA1EA640B3E17805B28784BC6D3C539E1BD72A6628F1E3CDC6DE45311FF
665EB631EE01A12A9EA40D633B1AFB6E9D0A187B8A2A5573A3C76C5EF6371372
42AD4A59E14A5AA88943B855390DEBF459D1430F1A9BCFEDC3DD1B8BEE4CFF72
669EDE606CFCA708E55B567791416861A6DF23E83D7A2CB3C4BC8F3EAE408325
A5A573F577E5731AA41B8533E61CE4EDBEA1A6B8D81AAFAAE6AB058DB5712C49
38763CDF451EB37B0BFC8E7DCF5720DD26D93214B50BE08AF19CDA17D5C10BF0
613A32AB5302D3AE9CFCB835B6D2A517E03616A85B713C4D43B79677A2701944
FED261579C2C59291163646C8C60E8C020C4828997D6521420AE199FFE6107CF
641547022D88A5C9D70F61543ADA0D64E8960904B7CBB3F7336ECC99CAC1831D
E5A1A15C14A64467131D1A1D225B3054E39FCFECD00E3B933270387BE705A702
BDFBC16DD5F4FC4CEFB1FEDCA2C7B28F3A309BF08ECD33031EB5DF8949EB4E1B
0CBE94904BA20E9A47C20363B134FCEE91C5DB9282A756BA59D13AD930AF497C
7A6FCC9A0F5EA030A51EB2760A3EC9DC72F0955A3626F7AC9A119899232C67BA
B41691522A7F2C41AD66D3EC933173D912E745C4D18E2882439FA81931D19B49
525A4B0F0856F151ED7A230045E7AA3F84EEB99E52AD0DAD62FA16B2BAEE10A8
861FBCE564DCCAB9C90FF2F0B5ACD68224533D0C78CEF9255C5BECA893E42EA0
21FB20EA64AE533D0F92F03306965C45E4C447F4145465E851CACAD9386005A5
AE3E482FC5A3EA35A158833ED2CFA5CDD54378A6820D9493F7A68141B78E3E5A
4682CE624D7C51A7134CFD15F50E8327A90CB382FFFC0DC933335614163CD167
A653DB9E2EB0E47F3630C69CEE066C11264552346F656EFAB959688F7503B1CE
CCFE1B79202D45A0A39BE62AF7CFBA80DC9EAE70FDCE4608BAC8CBE02223F2C4
F7ACCBE228B6C1F7AC05DFEC3A0F72E67357E9979B2AB5188CB9C1B0E02641A9
71665229F5EA1C094B849CC0DD3A6F351FEF0510C14EDE4396B9F64C2D3E6207
BD04835B779D0E1259762549E9E92B76DAE575F54E5D5D29550CDA2A25C89196
6CBDC0596FE5D2B2B39892D4E91ECF175BA1F4B1FC8DAB045F59616106CA1E81
9ABF8FFE89AAD4D53C37932B33CC7FE1E9D49917F01C5AA28E659E8102E62227
A9364D7F10F30E9E43ABFBAAB9F536C747FD4629B97EA6B62F5D1E0FF8222DB0
31074D49E845DA32297CBA6C3609FC4CD84A47AC44F8E6146A37498A610C3FD7
A04A1883379F164B7A914BD966BF88694D92197B92A583F9279068691D5BCD7A
3200EF2F068C6CA6843CC5D5CB61870A53A83AA7A5A17342670617941B31D1CE
98F68740653546E682A1244FB1BF950B287EEF7770CE7E28FE43D0A879CA4FE9
B853E9653ED3171D5BD690FE5BF624F37E386A27E2D3FA880DC7D4324917F849
E5626001D83B9439435C4D11F63966A0548A20A6F8CE786B2A81FCDAB7413E77
FC1E3F27E0211C1C3A0A8B909DAF8492BB5AA6675F40E16CDCCB272931502DF1
E03FCD9A3E0A82389958122AE4DB6ED18FC50A79EF48C1250252F9DEC807BC6D
640CB592E47349D80740DA75E96A752BB28B27C9B8A24B7817DFB5C39A4ADCC1
D459F32E3726C7E5EB857959DC4E8C58971AD36054882FA560E610A3FCA0D242
2B5FB22D3661BECA9AB8DD33D94525F828407A77506146F15AB948D3D8799B52
D9DE9B987F88366E8D63A308F822C4D38EB833A8EC583BACE4BE57BFE1C055C1
1D29C12B368F6FFF35D83D9976C60D06FC7E152BC5E81D589148036C3BDB2216
312D918E80A34962E99898A26825A7FD7019F5B9D3208FEC2FCC11408F0AFF61
C3AEA732B7F536D5542396615E51D08454363FC62690D9AE43E0A1346682EDAE
E51CEF3BECDE4AD5B831B88781D1B08816840379C5044757ED0E138526B57A82
8942ADDE3E7FD902C9305C8D5DB034164159484857BF8D18668C24F0AFDD6495
C127494AA7D7A077BB545F3F9BF605D13B0A0F49AC399E453BC6D1FE2D33BDF9
19B1BF1852BE6FE10D81C0E60431806B14561873F09E902F3A0298450B719F7A
D7B7DA776BF89A19AE5FDAD5162AC3BEB83601ABEB822CF1E111C7EB3D7522FF
A6A9E71085CDC8EB780C4315E5B3411269D605540C65A7521A5E041C38075389
16BC0F64AEB433F93136E18F1542A107676BC8FBE498A330E4C0C403FA6F661C
4D97BD2A682926D8CD36EF4C59CE0C783DA3C92309ABAC17F5EF07633F1525AC
2B8F50489F27C4A4C344C5287E340F16D7227D581A98128CA3329004836A9879
68582E17184408BA59CC19D97C5CD0EADB86B71BAADE245A98567E226E6B25B4
B634DAA0F6601C0A9F8ECE74C2AF014CCF58BB9BC884E53C365D9E6459358669
0CCBA1DCABC04ABCC322D94D4205AE83CA8F4800D068665CF431CD433F89FDC8
ED4C2BF33CD80B1A6EC3194631D45005310AE12759CC65D52BBC32F0A139B2F4
20B509732E7E3EA376D4B2E0ABBA91506786D6B2EB9B59932913B1E5DA9EAFEC
09F6AD75D086C21D1CAAA2F7CA97605DF41E1D6B6808D718FBEC50B9A64C37CA
B00EFB02A82F6FCDC84B938087182868C3E923C3F9960A61FF2B2D8887E44646
1689BFD576330C0CC99C9B7CA61E7BBE56A9E95CA087A3209486A65FDCD1C4D2
9E8AC22A6258C552B094D05213606143D64E2DC00BE8047765F45C0536611617
BB541B7C3FAEE7EBECB2EDE178BE7FD673F05A0A5219161078DE5EBF0E380A74
8470B47870822E693218DA9C48D9321CF48A175DF624D0604D93C973454341EC
F0BA81946FCFD861D44B1BC1B9BD63777A6523488A3E36500CBC100593F7028F
F58D50DAE8B9D02BD8F2A9116F0F52752FFB52A6F1F1619A71A80CDFC208CC39
43C93BD3CF7FB34FACEDC403EE63234EFA035BC347D096365757AA8D767129EB
90B57D6CF3355B5A282BEE6F447706771381A6253DC734E05EE703E77E64B9F5
10217F18B95214547A32AFAB69EB93EE5B7F5E825F77042BE5C55F746F4CD633
EEF005EE54509A487DE535D83FC6454C471E8CCB9BF00465AD160FAC2A675002
B8377AE0D52FF71916157608CAEFC9FA4C86B9371E445D3DF368E2F97B0524A3
7455416E5EB8C800076D53D42436586D10E2D33EC25D35A3096C487C39D35623
B2DD6DAC50D9941E1A1727BBF7F306B59AD1662E2FB6D7F4AD323BF4BD63CA62
0EE12B40E477499F557FCFAC15D851C7D1ABB33C6A71CB614C5EE2EF61641A6A
947999C312010A2112B735C69F1984493228DA68DEAFEEC7839AFD5AB9858E88
DD62BEC9F8827931980B94D841250BF1C8CD5C38F2CF9A6A1379B0E86B085C5D
D467A2D742B3CCC890E0975C0E1253FA87C9D365D09D3879D3DF1326491D4CC9
B22DFBEBED874212A15D3390F5B8A940039654322C99B2D77D8F7449106F4E73
1DAA476CA78F60F132A781B9324D0AE23ADF34650BBC1FE24D87D00F5BAEAD46
E6EFDFB2972597F5105AFA435DD73C8A2B0705E14CD1075ECA68F86A11F42B5C
03ADB50EBBE862C922A2153343EA4280E75995A70CB9A0651AAA460AA1BD67DA
43F678D08B706DB3B88169AA5D4A56BAF2AFA253C0AE77BB866BEBA281B5CA69
ACF3E17C849A6A02725539613F974AA3EA120AE980A0B7E9A6001640B278DD8C
6042FB1221ED50728984ACB4C39C6846AB62DFEE3B434EA509DFDC52ADB1625D
9776FA4E6535AA98EE2A045EF0372CB5A6571E30C93268967569D2955E6E91D2
A16D15C610FB206F87C52176EC1F9ECAA8FAFA5C3DC37F0B2F64E2A89E060309
D50883FD7071BCE6F1339533BEE84CCC4505478287A5BDE67B0C9AF586C59AC5
3E5B215D04183AD5C1D7427984C7262A19D1F04D3AEF26C1896AF58CAB35B300
0E7274C7A002374B0D3569BA4DB374C18EF4AF87CF619A3E54D8A16BEB503B9E
FDC375E3468D467E454AB6AD03365EEE1E39D65F5BD90392CC8BF8441448F466
5522B1ADAE63F26F6DD882A1B367E81CEF0F7E413F82029FC03D0539A7437365
A6E837E8C592B4EBD30811B2CCEE66FB16F4C62A5F6728C1D5D1B2D5F3307EEE
0F8B98EBB45AB8E95D44FB18AF02E135A7EEE94B4640095C63B7ECA654830CBC
82ECDFE250A2FF298A7547D4560A93828D6B475D18F329FA173E6DEAB141B712
2EF374955559F0F981BB66B516B823D72CA07354EE3DB4AC282FABDBC456C6DA
5B0349EF980A35D98AE72370059AA885988A505877E9889C3D4F1F2BAB979A07
B8F7C2B3E46FD84AE8073FCB0EF472BAB2D8500D08DDB8E4F5AEE57AD2C8F124
9F2DF1735D7A8C579CB53FFABD381FB920AF1D7EE55F9A7630542363975B590B
8977F20A13E67BC980374D254B06ADD7EED0E74C04432520FF7D742AB103BA30
44090D6B9DBF389B5BD483601554924D93F5E391BC7D99EB39E3E4740107B0C1
55C43E5E8CDA1A69B8698849CA0D857DB6888D4B10FC19AD4A6CD60AF743109A
DA3C752B7403C8FE05684625506E5C28982B15DA98E1615FF8CEF13D5A3FD177
FBDCEE8AA9C14AC1EF1CE7FCED3796123C5860BFC772DC00B6D586C7C457A742
0933478F6ED14842E2D61A479D9E9154035139B010162E399ADA1B28DA0379EA
8FCFEB95580475D03D9ED42B04BDAF86A726715804E5CFBF6913A776C27FA655
63171A8FA1C5B245CD3D3E75F10F30A5275ED786E76F96B2F6AA5494DF45F577
A770B6615E875557EBF8A22ABA6AED7096DA70C6CF0C9187C35B8F6D5D50D57C
838A711365AC3FC9496FF4C87F601496FACF54183DB672EC2ED2BDE35563FD53
BBA2EF556C9835758C81FACD42D38AC57543B721C8E865C1431298FC908C43D6
9B63876AC8D34EF1A2264C3AE1C82653206C9C19AD88DEDE45D00F9D59A3D36D
362AABA601D330A8208CF29ABCBCEBCAB0F1F2A0BB11F8B4CF5BD4E1FBE67E40
E4894A77C27FABC0119CAA6F0B7D237EEF89A73F343B4D1858FF49D2A4E2D458
3F68B70ADA549B2F5DA189A39783A0858BE52FBBCFDD04E59BD5696BE6E96632
2FF159730265A5B01FD8EFFC91BAD9D2DA16497ADAA386D956B540EE64F5F686
182704ED4A53C64C2D45F7384E6C09432FEC1F70483731B861597F8C57D8470A
CD6122D70968B6080693DD135F09A9D4292ABA4824566302E8B8D17B4C2BC609
B2E5FDB5D7065A768682976DF0E30D22619D900B9FA683ED13DFE498AB25F507
A1DBC82DAEFEDF7CDCB26E5B3CD86B9734F6E0DF3335FB7214340FED8FEAAF97
B0561464B3AB5BEF41A6A39D09B89B325EE140F18FEA46C1787B5636691FCCB5
6CE5A115D87E12D616F882569AC7DF5989D06BAAA6BBA8394A4A2CFD6A0D495C
CE2FC36488F215924248FC6699843509B62F3E06B1D3FC9E0049D07F8DE9A673
6A1C449CC565231C52911D7DB21DE4CFEB08466CE2E53093DF221CC02534240E
45C576FDA3EF69F10F8E0472438D239BF5E512374FC986F8DFFF229995CEDF50
BB875C883F5C33025634CCC5453885FAC9C5B2AB28536157AE38895BE807F34D
2BAB51C4D7BEE86C1A3D388CE7D8A218993388CCDD3AC5A9E3123DDFEB4E9F73
075E929F70758E57B70742D8F6CA45E0F3A2666144224381B087CFC8BE0D26B9
A927A86E7A8F3B565EFFC168F50BBA26BD276130FFF42483D90E654BF56D7B21
80E554FE07386DEFFDEC4016B01947F48D9ECD1A0B05630A0BFAE168C44AAC4E
6D019AC2A0538F4E626B4C0C9EC631915EE0B49859ED7BCAF5F6C8F1D809BAF6
DFD1AE8091F10A4E66A55502E280D9BAABF99B5E98460BB508FEF8F5379ADE47
3E3C1C523930466E0E3727F84CBF8818EB868CFE1A7109CA3BC42AC2CA678EF1
637C9A8D283A10E2ED2C34495AAD186A6468F59D4902503454DC35AAF0064A94
830A2E8688DF05BEE9B6714A5A82BC4D39F1EB85D3E347DBBA402A03336C6A06
9C769705F86C89FDAA3C2051C7D6606A5364F33A95CB87FCDC84B27495CEBB14
A7E1A588A89607A18ED203185B663AB8783FFD902004A4B113D5AEBC93D5F6B6
C0FCDC0AAB3D4841CC32A021A5AD88A609E8C6BDC8417E12171386FBD3F8857E
14813FCE0D62B8EE4A99A0D7652C59B70A643DC1167C6B3893C9AEC9259E2563
34D18FDC489B8BF12F2B1A3F3885AB60E587721647586B4B489B3D80473638F1
F6F40644153FBCEA899086D30D3BC29E7470C4F686950930411A7E0D214432EC
07CE03D911C0079729FE71C94EC318111F5A9B560BF10EDE2D4B3F55AE1773ED
01D6880B9463D5D143FBAF130434D4E7AA8073D46E53721487AEF467589B2752
055296E217E7EE12CF95BEC744E19893628D32888ECB107473019AEC697F2B43
A0430846E686085EED442EE039369629B06C792F0EBA7C7B2FB3B6DB5D3904D4
F46D156C279EFBA669E622F4F5706B86B383BA5DC97F8E03F70994BEBB60F8B0
12D8F9EAE04395978F12ACE7E8FF3786900D8A856AC56611AF35C152B56DE55B
998C3015F0D4AC2C1324269DFE41030DF4BA934FA6231BEFCF881C0CD4B1F2B7
5537EC4F1B707150B45578F4889CB37DF020A819A82D44C92FA186DA4EF1198A
A5ACF7864E5BA00D974C7E4668801681CC8EA1415DB1F1184396BBCD0797AEA4
FEE5F49CD5B7A439884A65092EE1A6DC6C2442C721C919C4F038993318ED56DB
118039AC6FC9F20518A3509B606154E307B01DEBCCB9D31F577FD22C7B02CD0A
4F5150C9A03B4BA740B1C18A95CD3F0D9687720F7B9E399BC6038A4B2A429B38
E408F50DD0ECC675D9AE1BC404360D3E723639219398E8D020AB4511ED882ABA
966B9AB8931981EBD85C73918BEA3D9CFA580C9469B2B7B51D2BC11FC9268757
80EA6A4F9D646DE27AF13A6E7D989AC4FEC7E88686C4D2C83679673CABB19E4D
B88E7760129504C25AB8D555C4DAB89443A2E0697C31B5E1D2F2FE94D7AF958A
BFBE2129DE3E32E5A2B3B316D9BB22E6A99B14C465A4D14DE34848D320C73AED
E0D70B855C03C583113A2F196695817810306514AAD23D5853FCDD3AD76E7FEE
15FD2D933BF858A6B0CE00A395CE9D74928490A8A497E44365C3D8B08BB09523
512AFCF3B8057E917AB3B54BCADA887CFD89A26EF8393C8B04130F24E3FF0223
074B1EF3653E811ED8FBA7DC57B1E33FFD7E964E98AEBAC8672F0C67E23AACFA
8FF364BD362475912E3F1D1475DD7E260BF074F5098CAE93750260127799A408
877E8090F24E6330ACF6F15B250DFE6E07CC37678C14172D24448A210DC90E6A
CD32B7D148649B016422F346437F86DBE69678F76DEE2A2DDC10DBDF8E9A5225
4670147CE365019E98F5BE97649917F1325485D4B92BC6C586B81E9A905CF362
0A17E0EF6454BCBA3E14514696FA6A9FF7CDC3EE4B1384BD3FCA5EB10DA24451
51DE1BAD2865CB2FE4AF24EDDF7367D478817E9D846F3FE908C56B925DB2BD91
3993FAE855A4F33A6E18CD676DBA7C86D3923EE1DBAB62BE5959AAC47AFAFE50
7898C346F1D4696215EEA52F37537A4405C6D7DBB4ECAEE0772DCADCF3B6B623
7BFEA125787E7DB39E4B46E05EC66704A2A6FAF2E4EA000ED12A3E4BB1E50E1D
BE14E5A849DFC6BBC4CE89378FE1522220644E988A5483C9A7D021B64A9A00EA
ED23A8FBD24AF33854B0F59ABAD23F30D8A089A7DF0493F41D42E6FC45EE9C45
4C372685828FFC67C402DDAC1F6DF4D397C273ECE99A195A76B52C34C0829F1F
18335E9CC0BEA03E9014A2519C59433FC6BBFB9CD6806ACB317ED104C26C2766
0655F869F3434FF8C6D8181B4AA701974C87D1297CD7425B25C84E039B760BBB
D9376235A5FA5972002AD67CF89E243141A025AEB89D62650EA2E2335B1324B4
C6300F8C477058BEAD04867CB8B68724172D9E55F383448D981A1BDEBB6F4609
4021CFB1A2CA03FFFECF3BB4F1EF5DE985C687E9A9B4D1D54C022EE6E2FC691C
3EB82476EF03CC8932881FFB1DEA19383ACC3251696D09F8FDF7A1F09BA87C91
9661EC404FE3F75D823FCF9F55CF800E7C9E3EDA2C634D6BA1B82F9B8CD99758
33EA35902CE041495F5D49D5EECC650186466B78608EA011EC39B9A71C2772A1
3510BCC9882E3AECC2B19E079A0EA75A293FC68643D142BB3010B3A06D2B59ED
51021A231D79688A5AEBF78569F74817E65780C742937F4B84FF22BB21E7DCCF
50B7ED2D5F6D26688FCAD9F14C0EA5272EBEE21DD966FC85939043354ACFA293
1094BEC8EBA94EFE2B45D1D6256E69A99FEAA88A7F39FC570B74C1C0A9D62D5F
32E70E0760CE0A5418957715D6F1EA77D8FED1237A8B2A74D91389D13832E434
06ADEC52721FA08E8A77CFBF336B45A9F4E20F1A1967B1875A36136119D6BB61
F655750DB05F12A58774F9A8A2F39C47EEECB268667E9BB19ED02F9CE5C90A1D
5AA4D5F7E751A8B806557CC3D11B176C78B52A7FA508B2195E7833DE0C029CAF
AF3AB9BA9D16FCCB4D52F0656C2996A925CD01B1F3BAE91E5F67E7F4784879F0
8B23BCD480609F9414F62A6B03C96F362B28F4A7F27EC3032133C93860978C57
F1E164A569DC279EB7BC8A728E40806B0D7364E93C827BEE8130FB23A6B113ED
B8A46647FFB84973E764708347E807814BE384E46E79EA057EF9B6C8918A17D3
D6B9C33D96166A688CC7255D90190D30D7D8FC98AD7BE3FF50EF9F52FB37E886
745FEE82C8043A769F0E21CD4209FD6988ECB15FB8A93E08D59EBA9B9B5B6E05
60E344E710897B01E2A8E809B4B61A2E57BADC9B13D252C1D5043B0FC88C0CA9
C5F12A07DA9A77FB0A74DDA7952A7B69B73CB6436473CBF3CEDF6FBCD7AB9089
ED679CD3720B8AAFCF5CEAE65A4428ED11DE8F3CAFB228A3531B765F0AD106D3
B655A7D36DFD8EA4B48402844D7453035C1D394C7FF5CC91FAF8366ECA75E9EF
AF897A805A6FF079112A62DD98D7935EB69EBC1B1DCBA86DF42D15D65B070715
89B1D9B6FDFEF44ED502146A43B3AEF5543646509D5D2EA1F7A04A935BFAB20D
C552514DC2888DBF2DC8451A526D5E006FB9EEC0A08E3D4790A72D69EB395781
C6D4F11B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.00B
%%CreationDate: 1992 Feb 19 19:54:59
% Copyright (C) 1988 Blue Sky Research. All rights reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Computer Modern fonts were designed by Donald E. Knuth) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 56 /eight put
dup 58 /colon put
dup 61 /equal put
dup 69 /E put
dup 80 /P put
dup 84 /T put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 120 /x put
dup 126 /tilde put
readonly def
/FontBBox{-232 -250 945 963}readonly def
/UniqueID 5000795 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F781214D8FA9C0C3F7
80001321D4397771F728FD85A32C982DEB34B6017FD1D63B3D84FAD3B703CCF8
812EE1D30A7990DEA8C6099AFF33C78EBBC960D6F2439E2D50DCBC754063A991
14CF6FF7FF3AE1E6EDA2EA8C8D4ADAC936719056D7837D8F9A518A23520B520F
A7BD98FFD050AE4342B3F2B3FF5C03C6811C86A51F2302A15807460D9A952A52
E22C41EEAD8910F88BC343132F84527F53BAABEACBD2D5ADA6373EDE69B68B06
4FE5099A39BE6035F5F35C41352759B80EDFF8BB507945C9EB2B1400720F5300
23BD095C2DB26815BDC3D588C0976539BE8A847F64600731CD86DDAF8BBA6202
EB6A8F389C0A80018835B7469A46A29AC4DDF742039F87705B0B2DE5FA610EFF
B0E5078474FFA24B26188C6F92486ED34AAE9D7415341FBE8331B0878F025633
117E6B6AB80EE7413E9B4B066C3A69DD9AFED61C1A54525B534ECA025C4EC183
E05C1525288C16A6840864484A8F5A50B63898D8719E7F4AA91025A08F959B1C
60CA214F7DFCA2C3BAD7C8229F85474A605E53F2361D40CFD02137D268091660
AAF3509C917B5E8B6686F202C247A60DC263EE052C9ED0A1D19372DC1D717072
6C00678A6E29742553CC7F29ADD760B60F274546D3D5B3FAA3580A8094A00E9B
FEAB7FA11E51BBDF27FE7AD396D01B8A688AAEC3690F1337264FCB840AF5855E
9B8881C4CEE9F398EE9054F5673E49C8429053F0E163A18169A767FC69828861
E6122443189B60E1FA098A34E772AF4929F438208E2891ECF0B5A9F2870C0CA2
20DBC0A8B3D8EC8B3D0A8E8DBF7C48C3CF0A00B1B2E2BC9981534C66BFC98E89
BB791F8A0503F41884D5A4E43A0D67F6BCD2FEA8BFE281C64C582368CED04C9D
89F40AC02326B46AC3D21948FE3EFFDECD9EDFE074DCC0A5A3A5FFD0B9B27806
ABFB885AEDFACB2206C98FFB1EDDA76B6FF66687DCEA46A28D4395E2B85218A3
4270DB10EC9E4AFD23501C45EAF1F19C33A2066C473C291C69541A9BD0307BF1
5850EFE883A267AD34479A29BCAC13EC52AFD10F8B863A9AB4E135AFBEF96E00
FD43A0FCAEFD81033169F64BBDEE895A4FDF6049AA0DC9ED1F2547D32E055C23
E4F7B46ED5C7429BCEAD314B93EB46B22B15ECB2F7AC44141CDA46DF917D13B5
6542DB42E9285C18B8C63151FCAC1DE1C95D76C2EBEE0B917A714C443D9468CF
49FFCD75B56F1ECDEE1110CAA7E636EB0013716728F6CDE0054C4F9264983F7D
3EB8F31AFA31E9B486374D7D774D5FFE076BCDE9498CBC7444561B171B184C63
AE6E85AF5784AFB26D2BA831C1604D30040DD3805B8CDBB22F74B7FA8DDBDE25
1A38EDAD69BE3475627002D94CE7F83A4D52E2E07BAFE99AB02FEAEC38514DA2
09528686E2A1CAB0D818387D8F4A95B7DAD5CA71B636AD8A0AA50D4DBFE53EBE
0D8CECD6665B2D58E6D76CB928525C5D9A8B423279851D24B396DF7F7B4BB81F
5F3E7F6051CE4314993E592708F4B048EDFB5FBBDDB972422683C7B12D7BD3AB
43CE7E131F8EF0512D00B664C0E76B091662DB02391A53D55E52B2A363501514
39D298BE0CDB4199EB6ED5877712826278AF635DF073CACE4F820793762B1384
83A0AB85E3D9FC4F294073DAE81F2FFCD48982E520DF102D70B03F2A6B6C30A9
0552C8A9936A8FBBEAA16D1E8A5DAFCF4F1EB92401D99E6CA1E6426E7F3D7F4E
90CFDD6053C3CA46202357EAD44AB18665A97225EE464F23B0B0DAF628DF6CA1
ACA9EC0D6104FF2780C1140B9CC2C640132E8F52E5BE8DEEFDE727957A9E238D
F5B6F5B241974EA8DAB05DAE9B8FA581CFE1D18990C19E446910E8A3FB7306F2
D162DEC2DDE84A1EDE96B3219A1AA79BBB97D425CC1893C9776B4B154ECA9A87
84D4A5C337BFF609061A4F9654A2D96217A31A353D2F3A0D880F9C2C68E0ED17
DEAA48BC472D4BF6439AA192849AA41848AF3343D3B66514E946B18925B2B607
37C52E024AA9393C46A92BA593CC42CAEC3EA6791CF21C060BDD632352A1D574
7B78504B74D9DE8A3A5792E9D63854E4EAD4E877F0114F466499219150E94E73
8A8DE2551F30249144AE11D33F44879786F380DABC4793825F9F4F78A131742A
CF68F9B74CD91ED048364C8EF8210E9BD79378AB5F2E7AEFFEE6D5259035B1BC
5BEE8CEF77DA138199B924A9D67B07FCF258E14FDD7DCE92FC30DB2D73479786
1C976D956021BB77835A3F3F86E2E5FF0A6E5F55B038D8202AD596A581D6E782
2E0DBAB0C44CD82519121B2B7CE834D3B7CC07F90B4E93161539801368F114EB
82CCA573E4EEE398DFB9714161059F97C221C25E987CCD45592DA55B68911A6C
4D1758594ACC5DE4F48B79715BD350187721F1A08F94786CBBD129B8A3570657
B750EAA815F453034A90D6C4202B12E3B41B964DDABA7E6DC2541EA192757D92
303E3520E4EBE0A79FD4FE3262690AF7B64A87BA8903CAC91F098BD99F9E4E60
26C985B52D656E5A2C00D74253D7F52B891B57B618E8D3BB59A4B972771A80E0
5A2AC057E61B9714B0F9198399E416608FA980BECD5658F0047AC195DA74C5FF
D729F7B5879F5FB96F9FF9BE4A7594F18578FD4D87A05021ABEE5BB7D4634423
A19588ABBA8828B94E7E6706066B169DE7F606C3770B2504EFB8257A5CD8BBED
FDEA0ABF7D43CE3473E579174B88EC66E9B1BEA9E9847C8BCCAEAEC3FED0508D
7FD0BA7D6797E513C189DA61A9EDD005F1E8EDCEDE88BFD071C0A6F4E5FD8C1B
57D2242820C789239444AE12E6021086CB12C41BC92D6A998765C5C10D1D1DB6
18392171C1445E4EC9D6EDDEAF5C72602D4D98AFEAAD7D681FB044668C6E4F7C
842C2E0B06750E64809616D1A239E656CEA7E244EC4CDA90C475051295ED67AD
26C425404A05CD880BD43033F5F30164C80753173DBD631F7BBD60A2583D878D
406B9FE10A31BC804E62C72C81AA35A5134D08AA7DBD67C5546725EF7C34D095
D50D1E003B010B462C276B3AB5FFD2D3D6FF030EFD550739019E618534C3F6F6
73F179F23A5DE07058862815CC0AAD5BA22983CA3A00D8CCE6852729B948126B
028251805EA362D5411AA1E48BDA1E6B22CA8645B585DA6EE0407FEC38C7BFBB
C44D1AC6F115BCC22E32692FD9B153FB16871FF0FED3F0EE5EF0E13CDA79204E
12A4507490A473919F23957F754F761AE5C3C6731646498943BF7316DE7F4B7A
3E411E88B8CCAFB5D1FD5A25D179EC939BFA07555EDB56B9DEDB1F7FC0D4EF4C
678117ED066B739F3E56D1B54A767670123A34D452B94C31597A9919EA77BE85
D4C46C1ECF41C8A3CDB63DE8042109217260A7D2A2191AB6B60A0C5BF3E0C975
20F9C7F4A686A69AB41707C656827B7A8FC27779478F40D6F30195DF44663767
BF0BA97806A70B010FDBEDEA05E21FC20473C43B82F0152286995375F20D570A
1497714819EA85A1EB48C61AF94EBA7E5EA3825688BF16FA0953F66874DF1282
4B2D0373AE5862BF6F866AF1BDD02FBD36D4E76F54D19A6A593986F3D1C3B643
46492490BE248CD73DAE0A98A398BDEE5F06D3C6BDB9FE174085AFB80E140C56
DFFD1A45C5164541E3288D184FD5C1EA01A3417505FEFE16B423BE961604A96E
0FB429D6D764E0B63A8398D994B045D446004EC44CA618C015EE051887C596F7
DD707866CA9C4DD02464CEB3AE8A87647E1BDA72D2E56A6DCA801062C06F5738
C059F9DC7906A061E947C5981D02418D655723084A30626A2F05A93B4EFEFEBD
EFFABA7596FC092A67959EB19265E46A669B87FFE5C8C46EC62B47EBD3A7F490
731F7BD2C3FDE309EA477C2550980168F76E0DD7CCBF5A0DD32046AB03809687
70DB332047E6EBCF356D8BCEE680376CFAD63DF606E404E8E1A0DAC7969E98A2
2D9A98BFEE53D371707D273F744F3788D351934EFFC99EA30AA4C09C12FBB2DE
6EBACF7B1D26FCB26CA306675425917F91C95FE888FCD68E113FB8A08D959D07
4DA15A9B5DA0C82BB3E1FB0AF96E1FB04B2F3E7803903A30A318D9F91F8DFEFC
788E3FCAC6D7BA607880F93056AAC34502342DFDE7CFF32F4ABB8BC1F5BBCE60
EEA36209964A675B4183A47015E43BAA1C36F7A7084751F1DC816C33C7302BDD
BFC02F2FADDA3082ABB8253F7B5F5BEF5899E244566DE946188C047A3400FAEF
EE427E57842D5B4DB2613A18FA3E41F9710C7EB36A76C8D12DCA1F61F875ADE2
040A91CF89F59E2D21E61A6B016DAAB8FEBA817598CC68A508C42704245915BA
1BEE8F4321207CB9F59E697A6204C564565888D7F8C293C7B07ED973881CEE72
D8E2D52176F0330FF15C65B2EAE99786402B06771B84FFA2548D05065AE22074
C6228A791870D73E6CA4C819BB68A703659789F6D1DC306106EE1A00EC5A7239
4F1FF661579844647CA223A173D38043A2A453D1185B2929E7519F2D041E363F
8AFE4136F200EEF994A9BEC37DC3FB70FA9172A6325711FB5F9F88B1EB905C96
2B2E72DB302D015B3CDD53A36EE2A595E2BD440BC9A033B0676EE6FAD70054FB
9460A7C57068735604E22D03C9F1CBB31A20AC9F50ED676E57AEDA535106BBF8
A38F7287E5F4C247688BB0487C3D6FA6484B7C20824144ED3C6CD9730907FDF5
D46778FF16F0FDDCC23129DA2CE11073BE61A299086B6605519B5F8231147944
2B882A96B4377F8EDF26DDD849DF11EC1D9DACAD2AAE05C5FEC66BF9DA90B8A5
425DE5174FA270323CB12308CD372298ED2510DB081E4B733B87CAE3877D98DC
88032F98980B2643A3389902683EDF8283E6C968C9E7580107C58BE148AFB9A4
EF35A821D46DF148AFBFB5F39B1CBBD71859858D372D32F83C1885903E0CA9DA
BE094447A3A0D6CAC74A50D3A9129A72DE027BD82D8C3BCD1ABAA25AEE166B5B
FC09F17D0E4BCA33CCBF3A0F7D595E90CAE2895F6E99B9912459E5DE9467BA88
B517B8EBE9CA54727E4D2C004C2736CD8D79C4255D2C53E3AA40008E6FFD9DC6
1B7E6E4BC481B458DE46DFD4D127319E255A7F57C915D21489FBD7F17610DA54
675FB78450B391DB343424E54845EF417499B963A0654B3E752BA7EFF59B0D43
7297ABFEFE06C8E7E2FEE01C972A388206E58EC3E7E7BD0DD5A8D94968203842
BDC53B32FF309FB93B0B653D6660FBAF5322AEECA0F0E42C5C9A1FD870088FF6
D71E34395F53CEDC4B8DBE11245F76D35D321B42FE3F3349A9CAC0CECD36AE4E
B09FFAC42105C56DF8F70EE5F1B6A356CF4222D2C77ED22058F54C90BF50C4A1
A0A294822B52FB1EABC177329B588C9D85E2F2630B7407DE679E78C14723411E
C000102F8094928686D63535164DFD70ACC8A0444351448D37707A0541FBA722
332AA623BCE9CAB571ED7C834F91DDA04A70BCCEE94639635D88BA73375A95CE
40CF56AD50D0E3820967617FEBF7AB1F735D44D41FB7EBF2E9D029561DEF0F85
844D0696510D57904E224656C1772E06D400A73604DF945A15540CFE0CB7E6BC
8B1EE7AC53D8C413B87B51EFDBD434648E4F2C68D1E2E9610541AF0F3A0987C4
C506CE4BB0496C885AE406B4B99C5071982625B4D39416BB5474D27DB2057C26
A3D11D1184D0DC7260768858D428E2A0C8EB8274753F916F95CC995EEBC1396D
B897EA6ABA6EE10C3CCAD40C8594F41DB47FD8C4CB31E9288EC6C4E5E96B1A97
F6D7ABD2580AF61495831ADC14A0A1A0DAE07B029245D577C12EB9FA9067E8DC
AB3E89A46BAE944793E7284224A72210EADB54580684FE7A679C53BA837D2901
0E2E4CC1B869BE2AA6AB6569179262843204D600B04A97B32AE0B81606FA8CC5
79101E79499D97E776EB0A675FC2D4311CE5C8BD729608CA4803D2A185E0874F
2A5310969F135B44C4D720F5E7676FBC614DF52D6E53B6E186830FD5DDC7F9A5
876D4D038DAB5D9CFAE6D44A416B4C9D5CEB01C552B6983394984132574C9A5B
32BFF0EA0022A7281A6CC11C2ED0AB36B450396E045BB6C7122003CBC04398F3
D5C4D5C9934EBC8FE5842721E09060A8C3150ADCE859EF180B2082A35452B746
708E4110313EA71C06514645A31C7A6FAD8B59EB356DC94FDBA888ED2E050CEA
F3E89A6FF6CA0AB28E58199028F85F655BE4B02DB9B51D58C116D0C99379F17A
0661DDB01BBFFB4877FF82137E793551948364806DE182550E8FFCF3921195D5
077799B62ABC28DA961DD819040E1EF0C154221F7F5311EEF855F2F8B1E2DEEA
AB5EE77CC9A99AEFC835EF6C2F19D5AF73753843AB9FB028F87C6492C4092D3C
5EFC31F8862AD7B9FF8EE9D594064B56F65F9AF4316E56DE225715A6DFB3F7BC
4D83D657B38B4570D8130CAB7ED67E542D4B79324B58A0A35B4B4AD6C3890D5E
8CF83C3FF62DC2A4E4296A086ACF3DD2212BB8C6045223E19DE71F3B83D1F405
B8B3C4ECB8D0123FD7AB04E25CE39AA39E93BCC35776B051558574FEABA000A4
6A30D3BCF0729CFFEC87AD85B8AE4F0EBA2684AADD5B7DAE5ED86407CD4C846E
559310C5CC9EB3A4EA675139987F09A085F24A15D0D9685AA371473D13ECE4C2
0CA3883D9C5440720C65B32B9DA15C554DE29DF6B568B94EF28F671C1F7C2D12
1D79F2F9457FEDB02C563EFAC40BB9DD47E2F939CDB2EFD35D4EEEB5C6EE1469
F1F2A94EF6D45F5EA58F2EEC47896E4E589E8F7CFD939081566E365410220037
A78839424AD6AFD6619280BFEB57459005F3474A6EAC63C45816DB4F7310F700
C6DD762C1857634266090A70A8D2C376407CCAB9342791E1CB7BE3A799832873
DFE263D952D60FDA78682866033C7676929CA5AB99743F953FE28229683D28D3
48171C8C8CFEAA8010A2FBDBCF6A6AFBC958C6A38F0B6B34F761B0BFAB25581E
2947979CC188D83EF122C35CA583B8A90A95960CA43DA33C462B153B82292D0C
FD97C122DBDA47D0A1F436B4CA478F7A8389F18FA667320A893B8CCED3583AA4
89DE289414A32A5A8CB59BDFA6DE0D39988A8F8288DCCEE782BCBA04B5C5DAFD
AA42F2754016D7E9F66FD6904E895AF839897195257CD1421CB7FEC176173E9E
88AB933FCC684EF2EE27AF3646666F5C6F9BCB8A569461430F3B29FF52D08BB3
4E41F9820FCC719DF735FBF4A4B01616F62A85946041CBDAF73CC4C44CC85A47
D5F77B327E379F766709250EE5B872D603A618EA5809EC9E6664AF78ECD1AB29
AB9157BBD3063F001DC20386F0E020E8C7522F8D83D433516B647722EB173511
E0C498417CF2E618F71B8E37090A70442B7D22B072156414089C0E4CCDE6FE99
6730BBF6717A450148A28FD3140DAF322762B04AF918D9D91A5658427C5250B3
371072B37F8429C0436093371852BDD640607E6353472F262D806C4022836854
3482958BDEF57C24113A8D0FEEA593E317F478BC747CFE85920F71E218966FDC
ADBEAD32CBFDFB90337AC8638B3A62426E2BA7BD4A71130EAB254E5291F26AAA
C69AAB0077D90375E351EDD8925F5ABC676BFAC13C03456C0E2DBCB5D8E529EB
DFBA116C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1988 Blue Sky Research. All rights reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Computer Modern fonts were designed by Donald E. Knuth) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /parenlefttp put
dup 49 /parenrighttp put
dup 50 /bracketlefttp put
dup 51 /bracketrighttp put
dup 52 /bracketleftbt put
dup 53 /bracketrightbt put
dup 56 /bracelefttp put
dup 58 /braceleftbt put
dup 60 /braceleftmid put
dup 62 /braceex put
dup 64 /parenleftbt put
dup 65 /parenrightbt put
dup 66 /parenleftex put
dup 67 /parenrightex put
dup 88 /summationdisplay put
dup 89 /productdisplay put
dup 115 /radicalBigg put
dup 116 /radicalbt put
dup 117 /radicalvertex put
dup 118 /radicaltp put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
/UniqueID 5000774 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1C829333DC021F341712CD58F9121EF1A2BB51F22879D180B0D16C145
4ED1CF548A5D771BE54B7C343852422CE74526AA6BEA129E534F689137B97F4B
0F5E80ADB5D41B5597AAACCECDF8B71FFA84CA60B368EDB3944E8526B69F4CBE
8A829BF19525F33242BC8F15DF997BF9705B7610FB8B716BEC643C783381CC34
8CAD9B00D0B61781183013289604A29D61721412E457F31CBDDD84DBE9509717
5048A6D52883982A37CFD5F3B5863571F648C8D24C583B9B9EA4090E18E00904
C6B9603BCC374D34C536C24010B4850D35BF1C807D0A754670A20966F73E0559
07B899A5A97CE96AA45ADAF1AB15F080886126F7CCF80ADB2F4FE5E2717EB0DE
F3CD4162EC1AA084507138D41D0A0D619B9C69A51766B8FABB5A5A36C2A60318
2C473369B3FEB23562756585036F8CE4C90157AE3869C492C80C0C1D2E720246
3442EDD89B618D309FDCF1D7445C6190CC851C0F8CED31D640A437DA35C6A859
CA6D0477A420D8DEA34C835BCC3EED45F15CF3BF60F7751F1DECFDCBAB8F6ED8
52E1E629BBFE3BEC0AE148EADA77A34E302BC7A79208CD7B7DFDF1E6AD8B1C72
D3D8937A3A4216085FBC8821ADD0B440FC81E88C448145D9788A837EC4BCD0FE
9CED38EAF50C53D55C03765046A45932C25227870F3BAD242D77F918409BC91D
BCEE311B62795B0F7CC6187ED3223158DA522C02E6B37BBA0643BF0B89DE9CD4
86A4B7B4A554DD0C92608C194D22919725609C5BF448275FA634F52C97E8D75B
B83AE882CECF21A1BA4D2BCD344C98CD452C449BAE02E22B8B31A13800217AB1
4E857F0BC57772B1A3734DC8CC2BE920A794E44E0A9FF9FCAF83A79638A85F0E
AD8618AFDCE4EFC7E86A94F60859C5F60D061266291D492E0D9C589B0D8F12FA
CA68E807E68C47A4A2F6226E11AE37975AF1D3A0F09010498FFE9E71D65AF629
809C566E9CC44F485CDE4A2AB3FB08CCB60C77EAFEB3649CACCE1EDE62D5CE10
C687118A22FE4D34CF2D15FC3C4621FAB3A3379BA11C38B3DE7C000777A4A16D
8692026C525FD6DDAAC1D401556E10B68ABF1A4EB5364E9351327C1C64F108C3
AB8BFF518181C173A42C74F2D972D5AB731A820A587971CB306725794E7C8C74
65F33C5ED094E24D1B7786D9C52A203333D3010539D0D6D36F64A663E0E43AD2
C578264F821A627463DB2CEAFA7679D373ED1E50C003C8F212EC134B75806D8F
49D5184B3A93DCAD517786FEDA82775A0E450A860F7B1478C0A85C36A83A06AD
4A30C2F6A6FCEB0209381B98B86C79EBEAD3C648E7F8E99B6DA0A7EF40B0A1DE
24BF75E99736FAE66703D439744B909CECBB73EAC6779EA7613FA0C92E1496FA
918B151B0CA05BFD824C411F43E9F37FE13CA1112D0E28960E2410F9D1BB5471
77CFF8FF38E267A82598EC9FF1FD60A513CB7A21CBEE2B3B69A53F188F97EAB8
4DB211277B90953E15A5EE1A7FC331100223165CD944FC432B4B0E3EAF2E7210
2BB5A75FED405B90C41FD7DFD59B970A3BAFD1AECAE865594809AA36EA68326F
9A48D26AF25426B0A842F2CF4FC8B29388BBB0FE760E0CE67163C5435BE671A9
C3A881B688EEC43B310A2E14E7C78D1F473F8C1A8507939D4604C455CEDCF5EF
F7220678B9538FFEE12E96B47FDC0D78F861E802014B41823B964067508D57E3
E601264C6D5114824E93E00C89B68BED4A69CB68D2E4D827129E5FAE03CAC42D
64F8D0D6B7EE5EF3CEBC18C4421BBD5584A54DC54B4EDCA1AA36A047D5575B9E
D1287922DCA11D45C59DE698AB2DE0D738AB824659D3E42B5983BA850111382E
E9B6CC8D38CBF3F218098DF531E25BAA5CB32E6F7E720408987E92B59729024D
46DD92E5E53F307E2AB3759C2659B3FD08D93C0F563D3B8DFFE4457905E5A23A
008BBFEAECB4B5338CE606BB2085E732C75AEFCDD6EDCB69B06A32DB7CE42B3F
1E112B35D75F9258A08A70926D2992601B5665F80F432890499A25061C6A47E1
7494608AB85FCDAE47FE1991D2657C3D6FD0AB3C1F0EBACE2F71E9350A090A55
1DF6E6F34C673102A604D1DD193547D3B9ACE6D61D60B83AFCD11EEFD6643D9E
1E0DDC98DCA551E1BD0FFCB19CF0BA5A8513B52E7E6EA4B83A28CEFABDAFD5E7
3B226A224A12D0C7DDCEA64FA729CF3EE67CA2732E63C042311530A601E819BD
773633F96CA4904F0CC78797C15B1F89CC85C62AD557A1C544D4C987CAE66F66
6D13F3136855B0A1F1D94D0B16FE406B6D55C4290AD6800BBDE3892E674D4E57
21B679FF42A26217A16033382EC9F56DA3213210CB5CDDB174C36DA13D13BBE2
A41EA7435E82F2B281DC737A0AC44BF720B0C5C3E7505289AC23B5F575E26143
D5EDA3482AD8D370955574614FD908F67FEF8FBE590FED3259D848D93BCB699C
E664A1704B8138989704FE2B3D007624489C8A1695508EEED8BF63B6B5E81C16
5ADD6FA2F359BAAA43EE73D080FB0290581E76D87E58B3C144C334513014280B
9E10FAD82EDDF96E032965B33E43541D3343A59B67AE07832E3957130C6F0B14
DDEF3B378E006581A160E3FDA403848D6BF139738AA25CF250B9CA447625467F
317A5DB61407808F63CFD8B7BEE35DCFA92BC4B0227B2C356F2D93D4D931C918
41703BDEF590C89D399D0D3EB228441182EF54984FDFCF4E1E13DC5939971A22
282D04DA5496A170003C2A562D9360C23C61CDC04B9D1B7FE8E1B07D7870B608
DD745D5B20C252CE414544CAEEF1E75D126166EA2F2F643CF7BECFD8B697045A
224EF1CAC9A4B00497035D55B1114E9EB63E9E22D8BBCCA39CFEDE728C6896D0
FF02B03844626CDADB57212DBD5A92943F8E6CEFA11DBFD7D72D2D5F4A228C57
DAEA3314C09E538D30EF9A831D78771A152CB848DC5837A7C11795864EDC0E46
4686AC78170340864464C6DC2FBD0D2AB9BB64EB0DDA551D6E553AD01C35754C
50A8B13BAE4B55F439F2EA528E1A1608E9778ADBCD045732DEF5C8AB31349386
28872D22B274290AD449224546D9379115FA132B02BFE0BF12F9788530243249
4DEF78EDE4CEAE28AAE7CF1462728CF2B8E3FC22FEC45A01C23986EC38718C88
6FA0607796FA8F42B143855A77F678E72B3B35A0277CA65E00F21D3868D42579
A54E7B5B4413F1AC72E425FCB7219E3BDA46F2AD9843CDA4740E8D6F05A7A80C
A79FD56B9503AD970DAD02CEF2B81A0852AA6DA4DE61264F6B296664F085FBA9
6D02262D31D954DEE73B64B2F6E62DBF909E979E95C398EAA51BD448D5F23F25
DA69040DC6A05DC510E4FBED269B500F40
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.00A
%%CreationDate: 1992 Jul 02 10:48:01
% Copyright (C) 1988 Blue Sky Research. All rights reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00A) readonly def
/Notice (Computer Modern fonts were designed by Donald E. Knuth) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 13 /gamma put
dup 14 /delta put
dup 15 /epsilon1 put
dup 17 /eta put
dup 18 /theta put
dup 21 /lambda put
dup 25 /pi put
dup 58 /period put
dup 59 /comma put
dup 61 /slash put
dup 62 /greater put
dup 68 /D put
dup 72 /H put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 82 /R put
dup 84 /T put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 114 /r put
dup 116 /t put
dup 118 /v put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
/UniqueID 5000786 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67
3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993
EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F
4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59
2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A
323AFDAE31952505226C6837D930454E875D1480C683272A9821E6039CBA82B5
BC70C0F55D4D59D28FE19CF9388FE0A52C90FA4AC8E759D076F42972534567CE
8EAF734331CC0D4E35E47664B3BE2C48D37F7D95460770FE7F88BEF4CCCE9AB4
2D29884A59678F62AEEB15CA913838581D128336648F476579957E6A18F3A5F1
13067169293D0015E6FCE2EBFBD5CD502E7282445F69F0E08AF5AC32E1EFFF6C
D8BED288E84017DD0553C88A15881C4B54738DE1CCF061D015D256BF76B635B4
E854D6FECAA7F8B187413A5AF601C79A639D455410639CD2B597C948BD4E0068
CD152E6953B6099E277787B9BF8BCE0B02A98740AB11DF9C7D9F9413E5B84C94
9AD9DE55F961D6ADA8DC75847CF63766D2BCC82B14B20AB4B7988AC5E12F2279
9D1CE1BA691658ACE98DBDEFFFF4DD62574921DA3CE7C37C8558341D968C241C
486AEFA887E9B5572C258643E864694E1CC68D190630ACFFCDE63ABC8747D798
ABE09356C84CA194E5768BCBD4A5C094DEDA0197F3C699DDDB5D1D1BE477239E
293CFAA4240334842911DFD21DDE1829543DE28D93AEC59EF98297A740E6407B
7031D9E87FA94CA7E60ECE7ED8134D3F376E7C995E1C1112338EE0D19AD67DB8
9B78D2E0DDF6F10A639D3B15A0B725B8471EA080C2166FCDD1657512B22D83DB
00FEBB997D61EC7E466F8367AB92A54B09D7116ADFE043B20F44BDC7AAE59585
5CADFA699A3C27798D8B81F823A536E0F875D70CD5B9DAED9B1F2BD67DC6AD2F
DE9C420FC9BA26C69124583194542141EC904448DAA3FB07B23BF1E179890250
2A6DA28A478A5365168EECB7C842D4B07D891C01B497AE9F97052D94195E1E70
27F5037C020016823D3D9178A6B52AEE1DD5028007D8D2216CB224F460C89DC7
E3A8521078168AF03012D25095298E499A83C5AE89F217083C7AD8A52FB5EAF1
AD7C95744A35844FD31FD76C5C4A17E8831866DC5552FE5755FA458A51D0DDF7
DB3577EA1A9DB9501155FAE97488205E6DBF7C6E9EC35620350BCA7B9B8B5A01
B5E24FD48384B3A268B99C1DDD56C1D533C4349E9ED04D83BECDD13A66067132
312DE10B0143428EA289FA6B69C327701B774A7D5CC3AEC9C06708AC354C5FB1
483E2D558034729C9013818E37ED25EC126F8A25BB3E6B978F8A2D8BECF96F46
F054E0CF76159FACDF46B00AC74B9569997B5C4ABDBC492162FB3EE4312C85EA
981FC61F81D4EA02391AAFC7491F1F3F6701FA9086EAD2D49ACBC360A2B4B1AB
F899535BDF75943F4F2E09E8D3C8E11DC32942F8CBFA14A2170C0804A47180DE
CE5E39F8286B6A29804444D8E1995F6B61E7B82FDE9AC249EDA9A2269138BEAB
72B4BA787B7EB961C2D56DC5E8624FFACFF01E8945EC89B7D0A8018E8A666460
0F2708DCA8217A9633EA5B1A923D1A93790EA0F130EE94F6D300F4DBFDE5A645
3E5A8861A3E811B78A4C456D17A7D62162DE8B7FDDAD06310A26A80FC1304C73
D8666338719E8C852AD3456060323B79F9DC44E843858E95ED2B5091C0E4A5BA
6085C12A221FF03C476B46E00A2FA733DDE5E59D40CEF5DE74E62E48E769AC28
CA0ECFDF411F4E539E487D5DC188973A821FC55795337DEBB33344D2F8D08C11
399163F91625E7D1DC22B52EA7DD74A9A86F00F2D56AF6FFD10517338841E4C5
FD1732742AAC60227B5C2C93908F11DAD93B711C6DE41E7F4D5545CBE8B33AA3
43BA69560941B250C89664384121ED55A6C96DDE2D156FC39ECE411E0DC57870
2313419F24CFBAB9A22C3B61E9EE4044FAB04BD9992E7FD3FC4CD5DA503D1DD6
45B3C953B5ECA83FEAB86C437DA1B7B096E5797942B690351F7F60D26791C984
EAC7CF83B61F04FA76BE03A9CBEBB2F40619A45178EBEEEA93711632979DFD93
DA4BECFA2CB881FF77F9DE02D84172AA2450AD780AE6FBAAC741C2FADEB7A5B0
B7ED6FB37B1E185607A44BDD4F7171E64D1C1D41A0C71608C1B919A3175A229F
F6BEC3EAFD63ACF4EB6A5A3A190FEF0E6D7F7FC5ACCB1A2E128FC97E397D1850
AE10A5B3C30FBFA6B83C0F6E758C84779D440D4AA39001C53CB850080E19A7F0
DF9B437A6448D53678F1F5C215F9C2970A8EFF432647DBE44D0B796AC8A3D5B0
DC611A24FC9F5B1B89F069BE56D1E1B116190A12AE6C0CF9852D218DE15011E0
87E143CE8207A82B0792AEFB6DD23BCEEA5380FA912F381754DFC33E917DDDFA
700A642EA58E49F65C2CE40060DA3D1E752709113E343118B7F45D1E6CECD22A
24368B46D11A19A3024E483ED1E80AFC09CF9AC29095000D8E3E426B756A01CC
A0C4B0349DE6F378BA7646D9FD8D19A934CC4950A97D5097001C79BC7E8A7E71
33D0C28EDB4CF3CD32D729F0C856E67B6133D1505062E02D3530F21A0CFE9E64
61E94133C8A22DFEC4A16C27ABF932E6737D79F141FB64222CF3546ACB126E76
79CC30CAABDFAB7742DBB714C4EB2BF941A0588AE29093A1D084F01C044FCA78
799F91ADEAE4E6956D8F3E1DFF6459A1FBA699C9B8AE5261CCFA1862F3872B95
A7DB137E9B0BE1D30C93108F8E30B1BF3FAB9263970631CDC35A8EF6D799E4A2
C70A193B39209F0B2650F7DCD53583387731217F26B1F2CBAE10BC9C3929897C
EF40DFCFC1449C34E640BADECFC925DAC609B727D9EDF23C6150B3B7142038FF
0D5AB5211362DDCFD230B4F049B8AB1CD69FB6CACAC543B4FFF9C9C444E856CF
91D728C0EA1EFA7093D8EB40162B742DBDA2A4D662902A66F4E18E431B2584BE
A85026862338391D3DBF3426B66AE15520E158F8145513906C8DA1DE46E06D0A
26CCDC0A425B88DB97DCEE004398D444B74EA24E7A4638347F6C3180193D0C39
F0D66F222B21A5543DC4796EBE838BBC26E74503612B9F3712472E75CADE3F49
41DC01918971FD2EA96363612403D4FCF91C69896E61CF499D9B35B8D9DED507
02727FF1C34B1812A107D3E56CCB030161D18E5E430E840D7AC22CDDCCB887BC
A5903557F2D0C935C5FA6243518DAB74D923E8889A69C109E3D0D7533AF542C2
E57329D30D5D069B7839F171E1D3C0F91FD543C2AB0DCD3CFB1D46F1A66CE294
CF13E424433217F9F9E3AE01CB4CDC2CBA53A1784A79599EBF276A6391AB165C
BE29BE0275A881645B654A1EFA29C799646F3042C0B3DAD9EF24367D8D43800A
EAD2EB95718F911ED09CFA8781BB7AE9AE489AA1AAFA8E9ED28CD2802D58E8FB
1AC43C4E9B9B26055CFB753AAC64C0A86C618B5A14340B7264783C4FA19C4327
D670909BDB98AEB60FAF8B26A5D915C0A12F7A431AECE621B4AC36BE9122D941
05EF37D9B29802381FF53D62B7E13C6974FF810EEB909787450F3C2505A075BC
F5249EBC64AE7386F3E70CFF43027798B06B9229D1AD86E838588AF46C32BDFB
5F8A7EE18C840FE0BE0EA74FBDA5D6B2F64408310BBFAAFE69FAB82C7EA514FC
FFB8E87A994DC36CEB824BED28F09672FBD87EF00BA2426FA4B1DB47260523E2
640820C79A295193490886A41C17C32DDBB52821B2EEAB5D5DFABFD839F2B665
FB5209474DF7016C3F9C4127A6670E930ACFAE8452F11D61C4CCB82FB6DEA5E8
E2BAC5804F5E4082F6F7E1810DB137A06ABCF11BEC040EB425D17E4550D65569
F943BAC05CFC5ADE471CAA46BAA2B7B3F3EAD7EF14F52A429AB5DD0311170F99
2DCA87A25B3241BDDE2FCEA46FA6943598E7C974A29F4C1E74BE26CE337554DB
ED8FDF82198E873956C27CBCF5DFA34A47AD40D34D4E8715C55CF26E7A9854FC
4B55084C0F02B2E42B87E685E5BB866895A190D5E91119F454802514F35FC07C
18DB8AAAF6331E5D3F2CD2DC0D4303287DB08745710A56B84AA1A01EE3E4B2D2
EDEBC911A0FE38F07B4431BC1A1174A443A5FDF6A73EEAF60DC7F135554DB093
11B936F102729F91129730E067B24AE9964274BF1FCF6868F7605DE72C488D5B
321D0FC1E5218E6F16E72A49984EE73E0BC126C16EBD574039DAFC41150E1D39
3F0641078C2865204039F2C5D6E463B7F8193B4E59D3F0F29114DD5686CB5DFB
C8E1D7F3FFDD50B824257BADE92597852B079B30F58C0AA9CF7DAAA5F16213BA
ABEAF4F0B4EC2DDE57C8694FCE775560C73B8336D9D2B8BE4CEB766A21DC4DF0
077C2881CB9C7EC48A10CC896653BE39922D9AC400829B5FE1C79043145E3BCE
8324AD1FDC6B918E3E36A2367AAEE654CDD432C4432A2D923CD927D460AFAF74
4C43A02E8939603DC7488FC22422A76FC953400362B3506D48045FC92910F934
9B66051A29196B150F09A6578C4350AE3C67C1F04D36E6DBDDAC215921A0BE04
0E868A118DF2E152C06A4CFA4122B6DE0C1D1ED654AB5E6EF2B65AAFB1B24CD5
0DD0E9595D15FFCFCE73BC820F07A740FC535437AA33EECB01ADC7DB535D58C4
CF3FAD251E22B11E7AF5F181DF77375539A8AB47E2372B2008BE2D40980ED0D7
FF6A2BFB27FD05A27CDA7C58CEDCDC5AF4E6ECD428B3FE67FB3F47E0FED3CF2B
874A15141BF141D4C3171273A02A5E856F855B62BF7FEB9376B41AC0014C654F
275E67613C2C5BF58C4C5D1A74A7071B5EFF354CB0E2EB4842B861E917068514
87CC0BB8DBF83534929CA68D6C0D162C851C1660A372D2FC9C7C435C38F70733
619FADC83F9A0540A086661B74CE97B88C1ACCD31D6339ACD6E15C4E60CAEDC6
15B9E7D578375E92D1EBC1ADBD773D71B588755FCF93BD49383F096E739EFE96
FCA18D83A3563C63D82C97246AA88229F66BDC532590D819733223EE7D5F5B9E
5822E48E9C682956B6801EBD1AED22B79287C5C0BE7C173524A44389C85386EA
64FC09A3560DD5DB565A8C4EC9C012B3EC55F96876BBD3D28849FCEDB6FF4880
8589B4F952C4C332BDE6CF948A162F2B645D48692B86ABF5552F57D56203DC76
C61E29CCA417B7E468F093FA1A7C8B53E8F1B10C1AF72F393BEAE6B442F95520
E0FDD4CFC20B5B56B85A635FD6BF58EA370E112DEDC8E9BC4AEF56B83824FC9E
2126E838A67C7AED1EB9D9D501EEBB2865203179EF411E09FD8AC9AC27EA0D3F
D5CDB34AA129A95637B386E2CA230DDCAA0CA935A010D492538EAF49A4510845
F6DA84209EFF1BD9CB2BF7A1C9A1ECDD29BFC1CD6C320795B248969F58788396
D97B874AF5F1B39D48EC5A55EA03A157BF21BB70D3ADDD844C8E7DCE9237F26F
4D3C9464471A20863288FC42D96362B8DB6B43501D1EF169873BE1F0E0A4E8BC
B4403D9C738B6B13745B307F6AB0697F8A00D24330D18A2AE1DD28371B756976
DE8B188B63AA465B6C1313C27054F3A427E21B5B3D8D051020A6F72DFE37CA71
9F758301C878C213195A1CBFF7489A41D575BEC1E5881290D176E6BFC184A7C9
AAC00C726B079D7BFEA9680C0EF443F231E118719780DB6C5C17AC7F121779B7
740B64544D149ED17EB30CEA7D8AB33DA66BFAFE505CB9EE71AEC918C4B3EE20
4509860544FABD21861950FD7656C0075EA7D724E5F61C2C890EFFE85FFA3316
A647CBF51693A02969A59AB4E494F3C25C7950117B699E8F9019A6F7790D5966
59564280162FE6093513E2071E949DA75A74FCC7FF7EF86CD53EF5820A30E862
3FF2BAF94CCB1EE940C2168A7C25B8603CC497976C5EC2EDBD6C4F932CD995E4
E0EC4A52DB1AB97344AEC266ED941B58818245B6E260341869498421F03FDFBF
54C4D93CE4B7E51E2E52F2BAC33AB8BBB9DA22A83B9EAD9BC4C1D1886705C32A
3C89DBF34F005EDE2624695C46C7B002F1425425D6DA0255E7B8B2E31BE46A30
8A79636D7368E434528D2E8553384DD316DF7874452DF4312A5EFFADAA57CC57
DD182F8BFFFC7C1B24594473EBF4B14F7824440828B28FEB78199FCAC0A970AA
96F7741EEBDDDCECB47B1677FFC3CF43D8241F94E14083BCE2ABD9C29F45735C
883798D322C6D64FADA14E64E832EE04F86FD97445DADDB598172F27279A3C77
0CCE9ECFEC3BB71DF118774C2E71865FE58EB5B43D63B7460450E83313F9778E
BAF55CF35BAFB4D90C41A151A4C5AB414B7CB4C8302BA67B6DAE0BB54D682BAD
E6720908EB9A18C18F90BC6345947166CA7F14EF0C988E7DB93424A29587EBD9
A42D4ED111BD6941E584148690CF6995E0372EF8B6D85E296E962B193C374CAE
45BA1C19A3281E45326D6C82C1ADA4BC4C8FE1FEC6E731E835A07E528DAE8BCA
0CBE44F7F465B8109B029A0271B7F6F078FF505E6F0CC9A5D941BD5C2AA4FBAE
935C72A92E03541C25E9387EA3ACB86F1B9AE1D3D61BFDD72F00BE0D8EFE7FC5
0B8580E386E4035AE70619282B9D6AA1E41A05526BF08A97596FE57276CCBEB9
22ED011A43099744B70D46462A1921FE325FE0AAB4F4772345646AA4901C6F52
2127E6F7D39DF2B799D0D7880A5B5E884C533344588D97C5D44E1BCFEBE66862
618B34E3438640E32420062D992703059934E60631599CB6BA9CACAD64F3E072
F48A3DEB906B03B4376BB3073F63B4073F0F29DCAEC58B0EC8D05AFCE56118A2
C4459DF0391A8D5666AA9DE53A8600DBE9D29525C53E280E5728296F4F52F577
9D0F57495EEC77D95539EC60760DE15A2F9F7D7480E60350B92326968246EB46
AE9348AA3D07050C015A3A4A0C36CB029723D57FC21AC4CE61AC254863EA77A0
35A17CBD28CFC63C4445D8B5B2D72FD45E3AA607AB3393B332D83A9FCF25115B
C1B1AD1EBFB86E4722A4C9EF46B7B5CB8F5C5C916C2CCBED52D4854F39007B81
B2C8D013D77202C21C8DD33FEED0C8E82F869A7A405E7B3574EE660AC1F44A3E
90DFEB0DAA6BFED576EABF7725A4AC6AAAFABD84B592995C68542E0D4D81328C
DA22A20F73D423E63467A78B873B915586D14FA876CF085AF3FC22DF67BD7847
CEC6CF65AA41D982227122ECD4284E151EE98137279F61DA014E7C77B86830ED
D61454C5795DB791F30F1A81AD3F40D17741694409AAE4F2F30D0FA6388ADBEE
D273DDDA9FC6B9D5519B7FCA528837880A46108B987F1335075FB35B0554EAC7
62BECDCDA0213255C89E04676ACF4AA71BE5B136EC4132E4CCA6B10B08B294A5
5D77A0364D1F0A06B0411B5F708431D0F20D57CF579774365CB2C35B4D8ED26C
56C73523099FE1FCDC2EC7C9903F79EFF6409A56479E3912FD1F6F29A40C0668
BB230C250B58E953B1AAB962B2A1203798F60CED227E1470D4A26105092FAA0D
3542C75A1E6F33BD076A31EED52CBFF67038389A6446604777AAE5F7DF3B0780
15467CC4082C23BD734EF5EB03FCE98B8498F5958E0989E67BCAF09EDA09D9FA
F8ECD7A0AC61EE59166A52CC9125F940486F00FA68FB4DAD386AE9304C3B0242
57811CB4529467980122CA14EAE2EA66A1DCA6309600D13C35169B9BB72DC5C8
6873CC09069F6C0F9CD1201733163018C793FFD9149B593DEAFDB3EE6532FF6D
53277F722B0C16967272F304230D41E0159C2634A2A97214BEC2574B9382DD81
C9112862E4557DD38D5DED70215DDCFFE90417F1638F09DA98817B1792C681A1
8C3D150DE110EBD572070A10EEA988D0D914D84FB124311F8E257589F0D75A68
4FC09D5EC8139A2D468640F4EF941C88828E0C9E87E26E11A43E860E323A55B7
7DCF7A2ACF8E18516F6DEC42EB4994B25F2A0DFB3B56B20EBFD3A901E51861BE
9F587D533A496694C4378FBCAA33A3360038ED0940C1840AE40CE8C59ECC06F8
5F8D93313087CFD96FEC82B35D7C62F8702BF2F27216D1CF24ACE8C80FCBEF47
90F822AB1C1220FA8FDCF1AB106589E440C10A74FF6597C0E05EA203C0369F9F
D626E7DD92FFAA222DC7F6B3C2F9525DC512BF21CB062C8C3F91C072713B51BD
225E346921C009F38F924E052C34E57860ABBFE3C46D905901F4706D4F32DAD7
D80C4F82F30029E09B9A9240F52208E0A36A6B474B3A0964A6D012D601C5FF9F
F1BEE9227DF7E368E1AE9BFCE85EDA3286314243E19C129A846D5957E3204326
C8558B59F05579A1310D01DCE984050AF28C9C82226CA3DFC1E47332E5E25FD0
90BF3988B325B0E4B3C6DF5E6523F608FC0C16333B7F8A3FD8577AA99D11AA89
77FCDBA67A7B89F8821C967FEAF38AD943FF63D23DA3577E09E095274E27BBBD
99600958433EC4C2188805D63B2F0A265504557D8F451C8A2ED5245B600E320B
C24CB75F8B6513E27F4B5300DA63B4D72522E74E5E805CCBCC7AC8437568CABB
7AC492117A0F4AB72DCF1B7984DFF61EC0BAC10456CF49984BFBCCF5598A5213
1B0909B4E64D0AD9B902657DE3D2E57E1AE4F0611CDFA910EE5C8C53F8D539AD
BE84D7A5D6D5785D34A64F5A57DCD0A9A513A6885A533F813CB825F4177F1E06
15EDAE0F8A04B88C9E10E58AC9423F45EC8211A482A8E3C0F7F8957A895176E0
0AC9C645B298FD0A35328F3C5C527F2C8B4CB6403838678B136F06516946CF13
4952308D19ADF14D3724CC7517C48C14061B65B7B1600BB6C6B59DCB6C3C97E6
6A3426DF246173E4A3547EA410045D9FCE777B4908014863C8E6E99D78EAF493
2FF0499D8BB2810CDC404EF0ECBA2354BA9B73E6509B24CEA79354E114997494
BD82A002DCA46BCCD91BC08ECDC185AF0BE2CCE63F743070F73C2E6B2116F271
E3D6448EC92F57517FF0D937F7122F18057D01D9BE2EF74E91E9106E772CF403
F7E6DF35F057B2016BFD3C82794C9EC90693E557404AA45ADBC8389296B8823B
3EEDD2B10AA7753666ED3EC466A3D7ABB8E0A0DA34B3BD86D26CEFDDD79FB017
E5DC6CC5AE064B09F236F52A004B258CE0491A5BF33C7942577A099CF48B91BF
EB39EAD273B97FF8F54394F11008DCA8581443D8242D10495107A4BEF6DF1691
3F07E1D5509E9CBA800924C7ED033D26A7303FC73FD52ABBF80ADA2A12B3C384
4ABED6D83954958EC5DFC1AF518BE0EE1BA8668CCFF3FD9046889A8064664A08
F66FD183E525D4E2AB82828B8134FCDD4CE5300D908A876281E6BF7C1BCB7C6E
FAFFF1077A48C8966D2CC6F0C7BBDD8BEC9B0B8AF2C5A5600241F64DE0183AD3
5AA9B3A8490C910B9540DD3D233CA46B388F47820E070EAE90EFA4078F5AAFDB
3DBAEBBE88B1F83FDCB94FC6732E3974753B553DF24881F6E8A3B76D4E1C5E48
74799DF0031BE99B8A99EFBDD422277397E358E3635ACCB0FEBE7A2E7C5BADF0
AF865D3760C421F4B740B006CFDFD05755931E3DD77797ED41C96FBD87B55E49
57A282891437609741A048730E3BD75178FC27BF52163223C8760185604B4251
F6013570785D06C40D88F83B4944BAE140AE172773C4D662B48132CEB71151B1
83946E6C862AD3CF43183E80A795441235A634B0DABC7EE8A0B2DEE6F7DD9421
E7EC16CD054EF9F6EE549D051299FA8A07673FD0F74756CDE2790A680EE11BE7
22729D727C837A646A08535804FC83226ABE7AC72D821223FB2F82F6ED24B396
5AFF2B64AB35185C0D0AE22D591F6A170E90CB9A29ABF3BBE4960924A2C8E2F2
CBBB5F3DBDFD9F701F7EA1207E2D1BAE4A4F79EBB3619F422FE94A650304672D
09BC6E1C68F199A12266ED9E588B59ED18CEC26285255FF1A8BBBB57EAD45097
D9112A49840B4F20CE936056AC2DEE1F5E29E3AC80788AC2E86823433F8E86FA
79D185E76D2D1B7327BBC4F019D09E4A3E611474FD3DFEFE88CF026A063237EF
6BB88BA55943D5E9BE996F1EB2F503C8F71F5BAC5C9AEED6F1F675EE930EEC19
8AE32006E83BB60619A94FCCA3BE4CDDEAA6C2BBD35B1F3F6261B72265C06517
0D4A0E11CFF3E4001DA13A3972C858299A66945D8B70B61283AC7CB0988AE184
89ED01D9C198D006BB83138CAD3BAE933092EE779A52C86D0D3B4FC6F8B9FD6F
A85705C53C8CF3D35D4A93E02C48F7CA6E428CB9952BED4E16B0024070CAB561
D9E36C565460673DDB858CBEF3E934061254A745A86CBBA42B1C1AC0AE17E691
9ECD8A4F8345ABBBAB5E6E49E8DECC9520CCE4D445267A95B03255D6A54C2F80
0F08AF82748C1BC8C51F2C71C3EEB7870714F86A966AC2BFFC030F998BD0DED6
4D6AAE5493BA8CF07423BAB629DD65BB2D5B84EA7CD0F79EAA564CB9B0BADE51
21372B09835250917DB8A4B76AA18FA63273B95BFCA81A5781CAA99DD34A91B8
06E00A9571829D3AE2CB46AC1FB601C14B7B4EFCF133F4D7ED5723181E4AB1E5
AD1300F3E53A50D980EFDBFF0EF371711ADB3C9C5734CD64B6635D841730C3A6
422748A371B6FAD5EEFE19B18F9F20263BE5B3D98F435043E17AB8C18B8D8927
21093D75DC0A2D162E312270FA3DE5104841A963D03F6DB2C9A5663788537A0C
46DF5249F257ACB7D9B9E99BCFE75C0F95D8361A4151883128A77CE21496725F
203FCBC2768D19260EB25F907FE0235E411655EE763428F713404345FBD79356
A508D881E53788547FE8A6108F22931986CF77CAF31737C8D3515DD0248B0947
0479DB2F95770F554023DC424E77FB1C8734B2000A8898A2DFCD9DB8315A5216
A7794B741BB59DBE576484D6A679A76CB4542BA0B3ACC17E6B5663367FD148FF
6497A176A2016CBBE246F763CC120B3CAEF1053131A6F450FCD0BB5C3A6A1D69
A1152EEA6F79216648EB9DD0D4745FA3F5C701D420404D9AC481B5AE710A97F1
F9C984E0E518466E78DA8321D33BD5510CFFFD580EACF83B0EC39D1367FB0A06
528AC1B4E19578702A8F0D7E10F60555B43366E67A5BEFECD23E3102CEFF0BEF
006E8D9566981E6AAF6D9242C895D8117D8AC4A1159334F355AAE036428396B0
969B327A0FB2CE0FEA01B8827379C9E410C6AC2C0199F69D40B3530F3280A4A3
2AEB673FECF6B322B8BCEC87DCFC4B11462319FCA0FCE465467D691D16B0BBE5
C4D740A07467B089189CFFEA088F8D2503C267B1EF4A821B1999607E6D94B368
60C9BEF2C588873AAE972DCE05E062928F1597A50DEBFF114D6A6F2363F7E4DF
AD316E67306F3CC9CDDC28088B7A63538F31F92E8981AC1EA3995BFF782DBD97
BD65692604A284C4CF24415A83B522324D1307D814D90F95145B6D24B3337B9F
15B6B784F72F7C632D01E9F09664C3C96DC81D5474F2393A72C2C19242243F9F
675807E1D24F43B38497B35F930E28A46292B27D673A0CB03099640DFB3A332D
4228E93EF8A4A2584CB1BFCCD8CC573EFDF2554E9049EC772C2916C7E70CAF8D
6A47AA2CC66476514AF27E38F602320CAD8F0F832D36F1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.00
%%CreationDate: 1992 Jul 23 21:24:04
% Copyright (C) 1988 Blue Sky Research. All rights reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Computer Modern fonts were designed by Donald E. Knuth) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 2 /multiply put
dup 3 /asteriskmath put
dup 6 /plusminus put
dup 15 /bullet put
dup 17 /equivalence put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 24 /similar put
dup 29 /greatermuch put
dup 32 /arrowleft put
dup 33 /arrowright put
dup 36 /arrowboth put
dup 41 /arrowdblright put
dup 50 /element put
dup 54 /negationslash put
dup 56 /universal put
dup 57 /existential put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
dup 114 /nabla put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD77C99CD51EF54F
C47502749DD3D5DE55A25582E556E8CC298BB8E49D4B3FEA44CF4469F7079CCB
8687CBA5001D1B4E20A0F27B81F9B20614C47203F364D408BD076F65A50E7E94
C9C88D849AB2E92005CFA267FA51DEB418F0AA8C2B6CAEFC5EF7CAE96084EAB7
10C7AF215EECA3E658AA02D35E8F7C7C5EFF5DADCD063EF4EFE50D836AE11A37
F14856626A2008EC5DE518BBBA8EB7764F2A12A4187982964888626844C08D5D
0F44D74CC6F840F1517EFA0A7864C43C5B628506D6D22EBF312A451728720BEE
2F213F8215051E13F1BA8C878C173DCFEFA2EF644C07B8A1C41CBA4B1FA0792D
03DC512AB760F9C2F1DA07D86F09ABE9D8BB8101F4682DBA52596678886F6DC7
9E5AA78D2CC4F246946FDE615B5D72BCF6F4909A99DD36D71FFA19D76FFB383B
94240D7E9A9A7FE0108583490092E276077021EADA6EBAE9BC0A7B284C5CC5AC
A4BBBFF0CF45CBE0FBB68A1F1F9264BA09FB1D9E65CED2DB3C1B7C7EBEE051DE
DBDC908397A5AEF3106BC1B1FF797480F3DCD7EF3B7164255D82A371565D26EA
1EF893A17A7B18106750067A56C9B0BA7A5A37E0BCE5310EF876550852336067
2DC7FD5775E5A54ABFBB85C0C61D476DB991405635C09C536386594E70C33E92
0A6C1CF5002530B9D167EB58BD6D5865FFD4809D8FCF35704E98A3D926C1AC84
C3FEDE46181254794CB973546EB5A300E041D4424C1D493E68C7426690A24DD0
C8F88BD155457F451A8177E255EC61B46F493B062FA5D9B991E0455ED4FA3170
B9731C4AEE9A4D5C6076F5C8DCD57B3EBD30DD99C33A9BC35A58D145ECD89C91
C776221980C6C214D0122AF011EE6CFDA0CFFFA1A8B50E46D1E1F7B94BDBB906
6ACFC381AC1B8AEE592C2EE88859C2AF05D26249D704A634420B5EE5DC12BD97
E746FB267973F48DE12642872E1881661F14F60E27FC9F7F92367095F417492D
984CA72EB81E0EE63F66A35575EFD9EDD32803F0953018A2F6F8D348A23FB3E1
D892EF7914868D36F08E5062D7AA0FCDDD2053010AC4B0A496F8F4941CFCD787
50AFE300AB44D44F6CC1FA7E72F38E151C7A8A70BA37685AB2D2925F2DFAA4DE
0F0B5C6B6DDECAF580A3F1683D5A98861D49B3ED7346EFE8ACF8D5BA2B1CF7D0
936E91E0531D509227B8DC1BC02DB1E5BBA8348561DE7EEEA3C9170A0170C534
8E183C4FEDE124096CD11258E67EA849354D15D86216412C7769CFDD950E85B6
6EC88DAC7D9933D11676BE28D2C1748D8B865FCBC2318EBE2184694AF751D560
44CDDC5A2447A8049C974AD5995304A176A9A9D4FE7A78BE8882805C451BD776
AF0C96E2CB4B4C4B72AB7A6EB0288E5DB7ADF7412E3B0E0DB2C2C6939FB95EDA
B41A4C7D413F710C9F1DA8DD237BAF23978F0A332E2ADFD7EF7A084F39FB5B1B
708AE568B26DD9604B9E1C9FBD20BF4432CA74586FADFBD49A49E76FD674F4A5
2BCF147C9F281683D6B1D57FF0045E6239F3C3D980C310CE94B4649F48CB2E30
939800B9C79D80863DCAB05168D5D312A5B5AEB2132752DEE014C21AC0AB3758
1929EB8E9B78A88802925205259AC6E43B9BCEC8BF4689E4DB6F31C6DBAEC5BE
487B836E657F0029336570999C953D15D7DFAC0A0BE4807CBE3F84E3CEC06810
A7FDFD36C58580857E74F133657301357D9D7B38E2AE9C20C893F267F5DB4648
DA1D92C1D5693C55CAAAF8125B5FDEE8AC6AB14BF9CC3FC6704793E38A2F9AC1
D52863035E200F74CC4EC5C6A596B273DD50B98FC9ED8C87762A0D0D5D9C0D40
B3DCA453977A7313BFB8E4244907730921DF7964D973C375BF4B8A092408C0A6
EB4A20391E9F5B0357B201F4C19C93F6EB244B837E3437C3824C234E66DCECE9
CFE9E57C27B1AF61B4EBAD7758872FDD655189868FEC679239A4357B97B3E9BE
3A853C2C5E8E713DF616CB549197743895F6F55ACC83CE195B56F8A43D6575BB
ADA32FD7A777DEB94AE2EEBABDE875F67D6ABD4EDB7E1129975F82ADB8651FE1
A2232FA30D9255AB4880D2B876C3EDD09DC915C94270E4BBEE6B18C4159AB880
AA9710892167D8508B59BE4194E95E6A99F7779DE6952FE57A4F0018B887697C
432F81ECDE72346AD3ABFC4FF0BC22213CFE5DF44391A3B736A5AAB0CF946914
0C2BF3682F609D1AE97D8443751C5CE13C68CD2864517BE69A3E6CCAC849DEE7
A53047D4ED9BA8FE5F36BFB9049101F716A7323AB6A62EAE62ADF79D479C1604
C1CD3108B29F8BC9086FA55C6DBDB7AC916018816395B6EBB0249230FDD5F279
C592DABAF9A6F3FC61FD919D83D58463A3C4DBC7E9055046F36AC6E57F3B12A5
BF83137EC765078D270B5007A4A0CDE90561116E6C3993E2BC9E9AA3A798BCCF
72919E37008DB4CD45EB7BE4A08221A780D5937F80796348AC5FB112E037A956
27C9D08F8FC15FEDDAA75A65ADB43B9A4DA21941FFBCFCCDE50C9872F2D509D5
A5509E97FA9B0EB95AAB76002BCA7FE004B953AF34EDAD33B5FD19DD3CFF7A9A
790FA4E11B2B28179358DD74FB6207A31D8F2BA1062FF56636FEA32CE987AFA4
7791491587A07B8D578C05E9E33ED076B57154E86483CF69919ED4981DD3F23D
34B88113C7856004ABCF7ED83EE20039712424B67C557633E86A8DF168AF887E
6C47EEE0E080E98C53AB76B31C2C0A347C83BB1BAE7E24B8B043368A22B246CC
CFC9119BF24792BD1648A6BE248116D5B4527DE862333785D4C384206ED5CA52
84DB6A55A89AA85A352E5BC0C0DA1680DA570F994252F351D3CEE5D5F1D55063
BC6FAF1B39DD3C5356A2549FE42E77C5F8616847866103883A5EC0934A25BACB
602C7FAB988439186D6BDD752500743B37991F8A58E0D651B2B5AA7919685EED
E4E805C1E22BB5A55F2E30423BE8D9FF74EEA98B81B100712064AE52F1D2CAE6
4E93BF5DC834FA1BF7F20ED99EB41EB28AB0D473692C10D3C997BF7291B46F16
5F4BBB6479AF743DF2AA967532718D25F9ACD470F8AF5FAF4F82F309E42F01ED
0BDAE68CA75437C8DEC8C871CE033BB3ADF7FF6FB101BBFAC804AF6D0F8BE74B
386CB31028E0D67C6E7BF2235CBF13F8B1239A76754C9A94D5C3A00B0DC18CFF
C11FB0FF2442BD6585F4B96A9AF778B4C6117D583181B316E75CB4F63338A5D8
3429EFDF70E6EA8FA5EB2AB26E61E9C3FB536F23A4AE7BADA8F40254D882F67B
C1F54786E085A97A7AE66B18C6018E059589D884062EDB24D084D9470FE0FB8A
B8C15CA5F7DF46614BAA5111C749BAC48174AD2B38E1CBFB0F1273B7A32FC86B
8D84597FFD0EEF02499A947F80B35351A9B0C02340E30CCFE9A5025E5CEF2E42
C191C38AABDCAA741F600F480400F693B78DCBDA2B1E528AFB7172298E70F9D7
DBC0AF55ED94C8FE588E930999CACF5D1FFC62C3CE9C2E7809DD65A21D48A16E
3A7903BF9EF299C8C12990B20570C48EE4E2CA63C8D25B6949933808859E0FBB
EF3EC75C3A10024F1F9F78A34B75E0975D24692B6D5EEED2F3C8078D972E9C84
7EE5E7DBB9177226E6C7B21CC6DE10E6AD345DEB6FA274E51C95FDDA46BA2D9C
5DA20E67CEABFB8E79C4C295FE310B36C8CD13300B3ADE05C02562D8811403F4
DDD6518D05045FCCB7957F64A889C3096FE4A5E7FD363F1C2A7BFA80415AA109
76533D09741C2C217882DA611B68297A5D453A0768871297FFE106762A109F62
6C8ACF5656C03EB4F41522F6BC46465CCF67A380BF22AECBE08D5C887F95EE71
012937562827638AD093BFDAA2ECB09ADC42B3E6A41F485FD1357346A07D3288
45CF3F7C2C8CE2E96C7147FAFE78EFAEBBBECF40E96B9E03D410B10584707D7C
E279279CBC8C25E753CA51C7D97BE2AA55B4975BDD2DAE2C1A688C198A6A574F
65388FE06FAFF22DDF0B610B6AF474577D1881F5277394EFDB577939FE6BFECB
16EA16D1F2D7FAD92F3A4DD297AA4B44C381F3BFB1E8D75B77D037714CB05DCB
23E37D6823BA34CEF31F9CCE092D3B5CF65D425C2474B473092F7C6C53998840
1E3CD74BD41678A83864E90DF2BFF2C725D83A50685D806DB11A5DB85F8825A3
955E6DD587D786DB802AC8FEF2DA1AEAFE6D61A3AA4BC68375CDF2391063A4EC
009C04C6A11DA10575A257FAB4116CFBAEDFFABC324BA503B148F5DD40F73A22
2E4D7D42AC3F5F10FF8D87D64D97A360AFAF70EE843629EE227C2B847A089401
9D8EF5D8D1300A0278A066A13B372CBB476B1B308FEA98D4F47C20AEBB3BE752
DF9062D2ED994BBF2B61DF0B4DC9019AE8BB322971D97E9340EAED8B161479AE
746C9462E5AD4914A99AE8416D7B56342D634AED3192A8200871511EF5C91DCB
5719ED39EBB76FC0C13ED86FD23DA733F376A0F7639C6BD36B256C416D5B0C29
BA20CF17D1FF2D41365BF54B63B6BB29AA58D6BD065C0A811495F61B1DA828B1
95E32104731912755C80A64919C557EE9D0A23A4D3B884439087893B0B7FE9F4
E63DEF17127C1558E1BF2F709472EF279DC7008381CE7B5CE08C1F0F2A224D6E
A0B28791A5402899EF4F0776020A94D9B0179D022EAF482D57A911F1A3483F65
1489A695392CFA0C6CAE895C96F44EE3EE9FDEE2913BFADDA257283F3DB11269
457D9F684AEE95B3FB056957E0CC521DD79579651E00A1495E0C4B43E36C62CD
F6B70B2EEC150346032D1EC8F860A7C4AB0563C80BFED2080053FFFD1DE44F03
C67F6014F80E6ABC62FBEC80F78EF7E6826166281D7BA1CCA432D043E25949F5
CEE25641784AC73B631C5F24960E6C6594B35D951B1219BB4E4E4F3E929EEC71
A6E70F824C11E10FB455575976183C33A8DB97CE97125668525D7413CAA31891
87FB755556B7F40A3F40FC4650888D7ED0634F41D22E0603175C92224512C360
6DB734B6041CF822EF57D259118DB60E599E6DF9BE97EC5E371616EA85ED56F6
5EAD59D3D8374B7555275AF2C28CAB535B3CC63E67994C7464A503D23E415DAB
D9A24B36A4B1849828E9302F9624D3E3E36F191FF5021116890BA0261ED691AA
13761C3AD17EF10416575400626DA73FCC2A5BC669D4352CA316C0000242F319
25D6C917B428671DEBDB6391DDF253684C203F6BA27D742B53DAC7A7EC293A36
3C321AEC2B93233A32BA86BDE8BEFF32DDCE3E6A057C4149DDAB604B84BD0529
C76F219E58EE5E08EF0DD2066B1817D1DAF495D225B9B10BD3FAF19B8B9116B3
043505049479E0EB4D8143616C3A49CEABEA57531E1DAEE6A168B561A172CA85
116EA4409D9F4206D24BDC1EC2B6AF8C449B9B3067FA7516DA2C11A74BEF36FF
7BEC8EC447B9B2A07BB243AD404F2355E10C02120585658976083ED608630FFE
E63D4A9D00CADD596E8981B7B4405A3B4097A8F3EB8DBAD1BC64F88A01B74BEF
B79801553779D25D19F91A2BF143C23273205383CCAFABC7269A9656C1332F4D
317E9D6349ADB60718EE616F32A8EF338F834121E879E7DA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTT12
%!PS-AdobeFont-1.1: CMTT12 1.00B
%%CreationDate: 1992 Jun 07 22:13:13
% Copyright (C) 1988 Blue Sky Research. All rights reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Computer Modern fonts were designed by Donald E. Knuth) readonly def
/FullName (CMTT12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /quoteright put
dup 46 /period put
dup 47 /slash put
dup 73 /I put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-1 -234 716 801}readonly def
/UniqueID 5000833 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660FE13FF01BC20148F9C480BCD0E
C81D5BFC66F04993DD73F0BE0AB13F53B1BA79FE5F618A4F672B16C06BE3251E
3BCB599BFA0E6041FBD558475370D693A959259A2699BA6E97CF40435B8E8A4B
426343E145DF14E59028D4E0941AB537E34024E6CDE0EA9AF8038A3260A0358D
D5B1DB53582F0DAB7ADE29CF8DBA0992D5A94672DFF91573F38D9BFD1A57E161
E52DA1B41433C82261E47F79997DF603935D2A187A95F7A25D148FB3C2B6AA32
6B982C32C6B25867871ED7B38E150031A3DE568C8D3731A779EAAF09AC5CE6C5
A129C4147E56882B8068DF37C97C761694F1316AF93E33FF7E0B2F1F252735CE
0D9F7BCE136B06EE967ABE0C8DF24DCBBF99874702ED252B677F407CB39678CC
85DDFC2F45C552BA967E4158165ED16FECC4E32AC4D3B3EB8046DCDD37C92FDF
F1F3710BB8EF5CA358ABACA33C7E5ACAD6BF5DC58BDFC3CF09BA2A38291D45A4
C15FF1916FE2EC47FDC80911EB9C61F5D355BEDFC9DB17588547763AC5F0B1CC
12D2FFB32E0803D37E3281DA9CE36C5433655526ACFB3A301C56FAB09DF07B5D
048B47687348DEB96F3F9C53CE56DDD312B93D3918CD92AF53FB9461864D11B8
0138918D0B1270C54873C4012CDE6F886DB11BCEA04B023EBB43E0D0A06BE725
741D08B9DB688731A6C9886C15A83C28DADCC81385EA239E045E8F3670D5F756
AF71CFBF51E1AFB2916C1576BDD57D885BC7418CE9687A56203141397373F72E
0561DCF5B4687F352DBA807E1CFC7B08B467D1F17CF436CC4E3C56F72BBC4743
4C1FA9AFF3B4BA15AD718CF472BBA8B91A59B78BBACA3559625C1873FE1075E8
EC31EE14C5CCB9056709951F4399A7EDB20C4B5346F9ED34289A8A227FC379CC
5B7526709337F5878EDD7C71264E521D3D6ED27633688C6B3ACD88BD66066F7C
1743C5A8B812EE2AF29DFFEB1D129F5DE126529322F842B57190B97B506A94D4
49E7B3995B5D1DE439FE01BA4BA327F44424E3537BFB53B89F53DAF1D094DC2A
F25CB7A27D950521D056BD66BDEF15898B8C596567E36230730329DDD55629C2
49163FF572E1961C07FDFBAA91CC26F3D79BB55FFB08CCEF11413B992879C2AA
5D1323803B5B33EC20E7EFE007694BC92D516EE5A43FFFB35AD77ED080E92BD0
EA4919EFB33406B00ED17614EAB18293E54BA65598DCE61ADE8D61486F66CDE7
E498AE5A3C532BE6F746D7778DDDC02C3468118A7AD11A41981B326DAA89A10C
7A352EACBEC403BB8D2C31EAD0E6703A23B7DE25D0316AF46A6D3E2C7F348165
2E9A1D9ABC41AFDC9A6F212E86C5D40F71858A41DA57FB0031CD31084F9923DC
52A225A15328FF7C402F80699F0A253AECADD5A5B63512F75C7B02062638564E
D371643A192BC68BE85499B39617D4608956CF8808342FE08701B80F272BF5ED
87FAE724CAE53246CBB6BFC53FD66CFA124C7FBF7754868C932D4775E1CC027B
23861E490FF0B3E5BB7724115268EB5AE9952681204BAC6D97EE9E71B8845B17
57848198D12D8CE90B7D0603F99B1CF940ECF397743350FE0F57AB4445B32C57
B109B7A2C3293A7FA2C46DBACA27826DA21D737F0477920A5ADBDF50A1727B77
D4496D415FE2440A06D6D8187311BF7F3A2A4FFF30AA5E7B563E0E512A869193
D3942C6987E840B92D9B90AF4E3C9DFF2D81CF8708BEF62A08C4D328D2EF8644
AFA7B1246FD047C461D2FF38949E57FCF2958B2FC75F07370F4077E6CA18AAE3
41102995EFA52FB327871A03EFDCF58941454E6C5F2B35DB458DB8244C28C62C
460854248C6F3A927F8E3BFA1D1D6EEF5CBAB8F57AF7EB18BB16E945B782D9FA
8CF43D6EA2BB98D37C0793AD47FE3E618F70CFB3600668412FAB9C17A87678EC
5C2BAF9B1E5C8D57CF32A86E74A0F71DF80A4D3DEF0A84BE0105E97F87AE5C3E
58ABF1E3B76857E92082B6355546ACF7D0C3F4A75D7AC88697C927028BAFD579
C4436FA448C9E203D146ABDDD3E20FA1363EBDC5027762C536C3974EC3CC1F69
2E36C1A4FF3CF20654FDE46B170154C73D67B00F4A7B2C5F481393F41AD13707
DA3755F7254F2B542A726B3BFB5ED421635726E36B0989A9B115D77FE11719F2
B953CAB005AC9662A3AF2F4A31FDB529AA6631D8957664DFE5761ECD86F952EE
EE445376EEF155077C21A6EE86E633C28BE13A5712D5D49587FEA7345119DF5B
6F23944B147496EE5E81D58A28E0EBC9CA5A1C9F2B37E15666D21B1ACC2395C1
5CDE9A58BD829121E532C640F88322E0780341C04BD14CE6344FA3E7F81B9EA2
137361A73E8D53E5027F81E162217EB1F3BC3AC4F323586E0C22DD0C07B16AAF
1CCD43D466AD1BF0676F9176B0A5A0390367820D48E495D89AE7F0073D670B47
B1A62373DDF7342FAC829C2948096E961FB64171E5AF803188303427A3CAA054
384D91EA45B14666D8DE31486DE40E16F99FD95C1AD7418CAA8C9806BC1C957B
C396914B2F0F8DC67E889170E531735246B8659F69A80BE226D253B464C8CCA2
9105BDC943F3F1AAB48A1944B1AAF418F885421FC37D64ABC284BA691ECC8F23
301E7D05DDF4794E89745C51B26E0DE783B9FD89CE745D14F6BC0FF967BF0936
B3E358D1B0FB19E788DBB0226A557B7335D9DA75B94546EB07715146A7486029
9FCCC98C043063D3CDC7A193D00DD522D048D2385E1150CC84744FC8EF6AE083
544CFD72B1850AB2F66E511CC59822621B6ED8E3B2292AFADC2336B79D92E295
077CB2208529E00B5FF2AE021578C5A2368C3DAD581D92E8AE5ABBAB609D881D
3638FAFC2220C831B9FAFD67F72A8314E749BC1A89E87C9C616D20ADA46D00A8
FB1820EECDF50FA09483DCECD077FB73A47A9349524AF9D86CFB77F62DE4BA77
D8E29C63CF20F4DFE4E6BB8043B1F5F54051CFCA7A47110C6DCDBA176405C0C1
887CC1B105DD83B08B8093D76FC2813D44F5C25E5FE76FB8B829A221A71890D0
F0F42ECEC2F4CC87C068C796E5FDAAEA3F19258674E5A95E1D393CA2331A8FE1
269A0EF2E36C828E2CE91746D966AB563E8B0C53807412CE5D7F54AAA6261914
663B494B56489C47401F11CB02ECF06076FE3ECE4121FB02A2A7DEBE434A8D5B
97778928D4F50801F198C4E867C681E16232522B581BE473B6114841F78FB02C
37733FF52FD765ED7E1112DA2227777D678C4E7405FD8E1C63E7A96F4E6D287B
F3C450D72A600013476541194B07493A573B09E1DED5261CD5380C4F7CCDDE36
8D2398227A7B0E67CD21A0A4645FDC0102F29F5FA4DD96C68020B0A63852363A
04F4AADB195685CDFCE8340D1DC4FABE70C28CC3E50DC53D345A476C66BA9423
1738E3E385D486A2DCFE19C75B3D9CF41CFEA9B2E3AB2F7D4100A27DA4E1C3B4
9ECC7C7C6D6BC7AAF24205FEFDEF92A7E5FAAAC8EFFDE776FE18AE3C6F80FE6B
B943F3ED188C6FF192973FE6DA8D5661551798F97BCAD887F1253B530012308C
2750535D6E1BABB2F0C2B1483F4A30D9E3341CB6561B4507F9784A8F0F46DC3A
B388EDCABB44A832AD4E5C6E4FDDD2398955C46CD57DCC681CAA3EFE43E24A96
86375DDF88BE89707CAB237AFC75700FC48671382103BC429CB8B7E4ACE76C99
8C730B8197A17300658B5091372853BD072887AB4E204828851CF0C654FE20E6
6B25349120E5FECCACB31E2AAEB2D0D88F2996337E4E37DADB3A7F6ED6477886
DF4988C99715814EC940E8AEF27EDCFC6E885C533066AAC2E92D4E16D756076A
32ECCDEEB088C109CFD71F5CD64EEEDDB19243F710EAB8D4356862B748C35B49
38E3B46F544EF9FA6B5C6EBD042DC4CDDE699CEF836A4105019428C38673632B
4A273DA5230E4B9F2CB82783DBECCA3D62A9047A3349D1C54172763AC66DFD78
9040CBBADEF8F1C9C830D5A5C8D128C7E7FFB30E592269F1A516F68411D427B8
6FBA7E7DA2C2678975BAB5E97466AF461251BFE376D0DBA582F65A6E66C69FB4
EC4C1B2318DA29FA6F527B9831112C9A71216EF1442F2EFB19E3183C64628367
A1AED4F6A933880705A51F679F14635BD7C5617ED16227B9A5BF8584C219F5D9
D9D40461978C3F21766B384D5E427B19A499F974F92DCB0BE5CADE92B4D9F0A4
C6DC917C4DF1A9B59108BEDB45EF16C6E371F894FDFDF040006BC9799155D476
08CB66DBC692C7AFAD60FBDA71098B676CFF19E29D2D41247E3A5D6D40961139
55A1511CD584E8E329BBC442D376976717EF1F94B4F043F6A38FC945356D6370
F89FD513F0C87E1582BB538703EE0B2049D6EAF0B44F9B3DDC9DB6B0BFB88779
93A963C0AAC25F1728AD402ABAAB761A629C2FB74C747E76BAEE5897792AE3F1
9E5257E4ADA9B4E665EFA212E8DEBEDDC8653A94B488D0701CD31D3E94536277
779F2D5A88177A91625D72B55A037947053CEF9B4567DC303BBF069B2BCBFF18
54D301E365C7FEC2D0FED4293D8CF2A2FB14240ABD337BF593D6D1287A0078F7
71E25E148197B1B03CF38860824CDCDE568BCE2207FF114FB2E1888EADEBC144
E61E87AFC21F15AA1B3845C3281D2730890BB5D4FB95D85B636EDEF58615F285
E1CF04C36D324B1C486EF43E9C3C489011C8DAB41099A72713B0096605CA86AB
1A09F29330961DFC1067F6988427F20F909B1CB6FB1B6E4F1F4E8698ACBCBF4A
58D26093758FD9802DA3D7990360E17B3107125A8CCC5BFE852B6E0328E47483
F9F62065FF858487FF57069DA8E5D214D185D8670EC031EE27CF31A2A91D54B7
49E0F20E4D832BFDD02A7CE2195AD168DC72FAB51DB3B45142029D7468EFAD58
6BDD8CE3EE1908C3D3A976B612CB72BFAE77A39F88F3C72CCC8288E0446D036E
E2463405710F8FFE6EF5BD16F35CDAD43BB5FE761A1174D6F3DE588B2F7E7EF6
7DB1D32624E674DF00E4885CB68C8CFA99AAA76F89D5770A3CEE63119E958D80
8D2733A8F9772C0EC80532889B2DE0D0B31D532FBB586C98CC7D42DC95067DBB
500B09E5089ACB67F71B62A1AFC0F200DC3A4554FEA27DCAA46ACD00AC140843
B542EA64B0FB2C10ECFF1EA593B80371C958F12308B5D62170A9DF6B0C6836EF
6C29F390A518DE5C7164BE8B32F3409F63CCE896D93BB1FEECEFC3486D0C01A1
FD2EE01886FA541BA62498F86FE7E88AC3E04ECC546257B5813E442395853ABB
78584F0BB41C5880F853CA7D7366155E844B0A84471B21A4E59656CB47646160
626C9CE3DCAFAB29999F04948C230715AE78FC99AB704382C40600E8EB20C41E
6E9C81DA9EC78FD028E0C3ACB609DC88221027FE7370773D13203217F3E16855
9CF25C929096DCCD66F9AF3B256B37C19ADEA46750085507F0ED576F6DC6EA6E
CF8BCC5B502AE3D6EED15F584896FBAC89F674CA65953618A197C2B2DAD5C17C
CE2D755043323FEA9D04788A7BC6E1F073282DD538842E3725EA2CE6B444F1B1
2BAA40765757A8E33F77D91D085BF43FB7250293D9453D022FC329576D8B4662
CE85CFFA9260F57B98EF7ADE5D754F109092053F2729CD4362F28A493EE0D9C3
56D3BA36C5DFEF583A1F19A32FEE0FEE681C5124CBB7E44B60B7B17CB739D3C8
40BB99CB6202350E6FFB9732348C15C79112E74A340F820AA64DA1320222FCD5
05D98E407A1E9C9CCBDEF8D6C453BF1B2EF904563EBB33E9F68C98A187D5E4FB
9725E3D54D51EDCDF003509BE1440F5D40275964A7D1A88FFEDED30CB2687D13
CA1198199F0BB7DA945AB021923FFF316CDFE6D511CDE971DA8F527A47DACC05
BC56D06003AD5C3B6A8B9C6AF754E3A40BC0044FF265A61645B684836A8515B0
4675C192C762C03AC6425EF09834ABD158A1AC17CF3089EF414C7DFF8E77277D
EF427EBFA6FD571ED8707512C0C29A9C9E0814D6313B0B846E3D2172D03ABB56
EA0B20B018184E235E8E2250D02584F18B8BC9E5BEE64D39DD44F2203EB0D9F0
8399D3B377A999365801AC1BA53A7B61424DC15B95D282A23F305CD3933067CE
4C1683CD4C41C4B5F66CEA2D4386651B92EE1ED5BF12E307E08E053DB1E3EA3C
B6094C14949187C9CAF6F2E55576BB780F7F5281FDC976B02046F49A433A4B89
6D6748210629EA8E0242E9E2130D101C3DA1AE32C110C6F860DD08DEDFF47E1F
6E36A37E5AD291A6865E2C544BC33D9DFF8FFFE42F5CD9019232F8917AAC5CC4
C371D798355447E2D34BC7FC6CC07246BAE5E08E98C2A041F0F63216814FB587
8971BD286B5A961F6997621155DCC7B5ACE6483AF9E389A36029E7BCD636A218
8089612D114C091F5A4904FCECD4A6B376C50900C05A29F3960C04C6EC0204D2
8E0CC2D6C9D235EA3A733A34D4F309902CB99437D6E2858EDAB995BB717136A2
951B7C3AF8387138D17723DE5FDFDAD6D04BE92BD8DB3AC751BB2D986BE4E457
DDF84E47013FD8511B9E3CA12346785C201EDABD208CC1F75C3176483A20DBB1
802CF12740C9B81DC3DB70FEC625F3D11744B8305DBCDB77DA83176E19573022
E72C1131F8B3D46D13C7C2AD9EE4D0FD67D466D51E54B386E9CC633914F66A01
9D8560A244B5FD64AD2BEEEF89335A47317FB92E0F15E66555377FAEC21ECCC3
16E880EA63629B692587DE12140B6A5A57ADD0E69336AAEC2E6C840C32927485
6308ECCDC44AB1F0211171ED3DCD0B94FBF9034A5AC96301F6E31EF577EB11B4
004AC837E6B8425A28149E47EC27B550CD8A2F3ADB8BE264D49D25564CC98C58
900FE7F3C0CE9E892B45B10B99FFFEAC688E047FBB0C2B6177375AD87B12857F
3FA7A3F991FF6EAE46FB2B8293E3A7CD546D45273CC3ABCC830AF90739169342
804D7C3C6BD2F27AF5E5B2AD508291C533
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 52099146 40258431 1000 600 600 (talk.dvi)
@start /Fa 137[73 89 49 56 58 1[85 77 89 131 44 78 1[45
87 72 1[65 84 63 1[80 9[136 3[76 92 3[109 132 81 2[49
3[86 1[95 1[90 10[76 3[76 1[76 6[50 50 37[87 2[{
 TeXBase1Encoding ReEncodeFont }34 143.462 /Utopia-Italic
rf /Fb 171[74 65 77 1[72 91 93 113 3[42 95 3[93 82 77
76 13[63 51[{ TeXBase1Encoding ReEncodeFont }14 119.552
/Utopia-Regular rf /Fc 173[124 82[{}1 172.188 /MSBM10
rf /Fd 174[110 93 80[{ TeXBase1Encoding ReEncodeFont }2
143.462 /Utopia-Bold rf /Fe 107[83 83 27[162 2[70 80
83 1[122 111 128 2[113 64 65 2[65 94 121 91 115 14[110
16[131 129 1[88 11[109 109 109 9[45 39[{ TeXBase1Encoding ReEncodeFont }
25 206.559 /Utopia-Italic rf /Ff 205[66 50[{}1 143.462
/CMR17 rf /Fg 137[88 88 88 83 25[106 120 20[73 73 73
73 1[74 1[74 1[74 1[74 2[55 55 55 55 73 73 48[{}20 83.022
/CMEX10 rf /Fh 139[51 10[48 105[{}2 143.462 /CMMI12 rf
/Fi 134[82 96 3[61 6[147 2[70 58 97 1[83 12[98 4[99 5[135
9[140 8[47 45[87 1[107 11[{}15 172.188 /CMMI12 rf /Fj
201[0 3[115 34[86 11[86 2[134{}5 172.188 /CMSY10 rf /Fk
87[40 45[48 50 48 77 50 60 34 43 39 59 61 57 62 92 28
52 28 29 60 52 32 51 60 49 60 52 3[33 1[33 61 59 1[94
63 1[62 54 64 76 60 76 1[94 57 66 35 35 80 73 58 60 78
68 64 63 7[53 53 53 53 1[53 53 53 53 53 1[26 39 26 4[28
70 7[40 30[{ TeXBase1Encoding ReEncodeFont }67 99.6264
/Utopia-Regular rf /Fl 145[88 1[43 10[79 12[115 22[124
2[43 5[79 79 79 79 5[124 1[61 61 27[86 12[{}14 172.188
/CMR17 rf /Fm 129[95 5[100 3[73 74 73 1[106 95 106 159
52 2[52 1[95 1[84 3[95 2[95 52 1[52 10[130 10[130 7[149
2[52 1[95 95 1[95 95 95 95 95 95 4[149 1[73 73 40[{}32
206.559 /CMR17 rf /Fn 134[99 115 1[98 1[73 1[91 3[121
177 1[105 84 69 116 1[100 94 105 87 86 106 6[138 117
168 3[119 1[154 2[155 2[138 3[168 3[168 5[157 101 1[56
56 32[115 3[118 2[94 100 1[82 90 105 1[129 11[{}38 206.559
/CMMI12 rf /Fo 134[74 74 74 74 74 74 74 74 1[74 74 74
74 74 74 74 74 74 74 74 74 74 74 74 74 23[74 33[74 39[{}26
143.462 /CMTT12 rf /Fp 231[112 8[72 15[{}2 143.462 /CMSY10
rf /Fq 87[57 19[66 66 25[73 1[110 72 87 49 63 56 1[87
83 89 132 40 1[40 42 87 75 46 74 86 71 86 75 12[89 78
92 4[135 81 2[50 1[105 1[87 1[98 93 91 1[56 4[38 76 76
76 76 76 76 76 76 76 76 66 38 1[38 2[50 50 40[{
 TeXBase1Encoding ReEncodeFont }53 143.462 /Utopia-Regular
rf /Fr 133[83 87 84 132 87 104 59 75 67 1[105 99 107
159 48 90 1[50 105 90 55 89 103 85 103 90 3[57 1[57 4[109
1[107 93 111 1[103 131 134 163 98 113 60 60 137 126 100
1[134 118 111 109 7[91 91 2[91 2[91 1[91 79 46 67 46
2[60 60 48 122 35[105 2[{ TeXBase1Encoding ReEncodeFont }59
172.188 /Utopia-Regular rf /Fs 141[172 7[57 2[103 103
44[115 115 1[0 3[138 8[207 4[207 2[207 207 2[207 4[161
2[161 161 2[161 1[103 8[161 3[161 57 161{}22 206.559
/CMSY10 rf /Ft 136[106 106 106 106 106 106 1[106 106
106 106 106 2[106 106 2[106 106 106 1[106 49[106 106
46[{}19 206.559 /CMTT12 rf /Fu 104[207 103 1[95 95 24[99
105 100 159 104 125 71 90 80 122 126 119 128 191 58 108
58 60 125 107 66 106 124 102 124 108 57 9[131 163 128
112 133 157 124 157 161 195 117 2[72 165 1[120 125 1[141
133 131 1[80 1[118 2[55 109 109 109 109 109 109 109 109
109 109 95 55 81 55 2[72 72 57 146 173 1[109 1[50 29[126
126 2[{ TeXBase1Encoding ReEncodeFont }75 206.559 /Utopia-Regular
rf /Fv 107[98 98 24[100 108 108 160 107 130 76 92 91
1[127 121 132 196 64 120 1[65 130 110 71 107 125 102
125 112 7[127 1[193 133 162 129 116 141 159 134 159 153
190 121 146 1[79 167 150 122 130 160 142 141 133 1[94
4[58 6[116 116 116 2[58 81 58 2[75 75 37[132 2[{
 TeXBase1Encoding ReEncodeFont }60 206.559 /Utopia-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 @landscape end
%%EndSetup
%%Page: 1 1
TeXDict begin @landscape 1 0 bop Blue Red 1774 1624 1852
34 v Blue White 1770 1583 a Fv(A)43 b(B)o(oosting)h(T)-15
b(utor)r(ial)p Blue White -1844 w(A)44 b(B)o(oosting)f(T)-15
b(utor)r(ial)p Blue White 1774 1579 a(A)44 b(B)o(oosting)f(T)-15
b(utor)r(ial)p Blue White 1774 1587 a(A)44 b(B)o(oosting)f(T)-15
b(utor)r(ial)p Blue 1774 1583 a(A)44 b(B)o(oosting)f(T)-15
b(utor)r(ial)p OliveGreen 3106 2716 a(R)n(ob)43 b(Schapir)l(e)3106
2965 y Fu(P)n(r)r(inceton)k(U)-8 b(niv)o(ersity)p Blue
-300 3975 a Ft(www.cs.princeton.edu/)p Fs(\030)p Ft(sch)q(api)q(re)p
eop end
%%Page: 2 2
TeXDict begin @landscape 2 1 bop Blue Red -300 184 3157
34 v Blue White -304 142 a Fv(Example:)53 b(\223H)-6
b(o)g(w)42 b(M)-5 b(ay)44 b(I)g(H)-6 b(elp)43 b(Y)-19
b(ou?\224)p Blue White -3148 w(Example:)54 b(\223H)-6
b(o)g(w)42 b(M)-5 b(ay)43 b(I)h(H)-6 b(elp)43 b(Y)-19
b(ou?\224)p Blue White -300 138 a(Example:)54 b(\223H)-6
b(o)g(w)42 b(M)-5 b(ay)43 b(I)h(H)-6 b(elp)43 b(Y)-19
b(ou?\224)p Blue White -300 146 a(Example:)54 b(\223H)-6
b(o)g(w)42 b(M)-5 b(ay)43 b(I)h(H)-6 b(elp)43 b(Y)-19
b(ou?\224)p Blue -300 142 a(Example:)54 b(\223H)-6 b(o)g(w)42
b(M)-5 b(ay)43 b(I)h(H)-6 b(elp)43 b(Y)-19 b(ou?\224)p
Black 4726 349 a Fr([G)q(or)q(in)39 b(et)f(al.])p Blue
Red -208 748 a Fs(\017)p Blue Red -56 773 447 17 v Blue
White 45 w Fu(goal:)p Blue White -439 w(goal:)p Blue
White -56 744 a(goal:)p Blue White -56 752 a(goal:)p
Blue -56 748 a(goal:)46 b(automatically)g(categor)r(iz)o(e)i(type)e(of)
h(call)f(r)l(equested)h(b)-5 b(y)45 b(phone)-56 997 y(customer)i(\()p
OliveGreen Fr(C)n(ollect)p Blue Fq(,)p OliveGreen 33
w Fr(C)n(allingC)n(ar)m(d)p Blue Fq(,)p OliveGreen 31
w Fr(P)-5 b(ersonT)-17 b(oP)-5 b(erson)p Blue Fq(,)32
b(etc)o(.)p Fu(\))p Black YellowOrange 38 1246 a Fp(\017)p
Black 48 w Fo(yes)74 b(I'd)f(like)g(to)h(place)f(a)g(collect)g(call)g
(long)g(distance)f(please)p Blue 143 w Fr(\()p OliveGreen(C)n(ollect)p
Blue(\))p Black YellowOrange 38 1429 a Fp(\017)p Black
48 w Fo(operator)h(I)h(need)f(to)g(make)g(a)h(call)f(but)g(I)h(need)f
(to)h(bill)f(it)g(to)h(my)f(office)p Blue 158 1612 a
Fr(\()p OliveGreen(Thir)m(dN)-5 b(umber)p Blue(\))p Black
YellowOrange 38 1794 a Fp(\017)p Black 48 w Fo(yes)74
b(I'd)f(like)g(to)h(place)f(a)g(call)g(on)h(my)f(master)g(card)g
(please)p Blue 143 w Fr(\()p OliveGreen(C)n(allingC)n(ar)m(d)p
Blue(\))p Black YellowOrange 38 1977 a Fp(\017)p Black
48 w Fo(I)h(just)f(called)g(a)h(number)e(in)i(sioux)f(city)g(and)g(I)h
(musta)f(rang)g(the)g(wrong)g(number)158 2160 y(because)g(I)h(got)f
(the)g(wrong)g(party)g(and)g(I)h(would)f(like)g(to)h(have)f(that)g
(taken)g(off)g(of)h(my)158 2342 y(bill)p Blue 143 w Fr(\()p
OliveGreen(B)n(illingC)o(r)m(edit)p Blue(\))p Red -208
2674 a Fs(\017)p Blue Red -56 2699 1113 17 v Blue White
45 w Fu(obser)t(v)o(ation)p Blue White -1104 w(obser)t(v)o(ation)p
Blue White -56 2670 a(obser)t(v)o(ation)p Blue White
-56 2678 a(obser)t(v)o(ation)p Blue -56 2674 a(obser)t(v)o(ation:)p
YellowOrange 38 2965 a Fp(\017)p Blue Red 158 2990 409
17 v Blue White 44 w Fu(easy)p Blue White -400 w(easy)p
Blue White 158 2961 a(easy)p Blue White 158 2969 a(easy)p
Blue 158 2965 a(easy)47 b(to)f(\002nd)g(\223)-10 b(r)r(ules)46
b(of)h(thumb)-14 b(\224)45 b(that)i(ar)l(e)g(\223)-17
b(often)g(\224)47 b(corr)l(ect)p Goldenrod 220 3235 a
Fp(\017)p Blue 49 w Fu(e)l(.g.:)p Plum 57 w(\223)l(IF)f(`)p
Black Ft(card)p Plum Fu(')j(occurs)f(in)e(utter)n(ance)759
3484 y(THEN)h(pr)l(edict)g(`)p OliveGreen Fr(C)n(allingC)n(ar)m(d)p
Plum Fu(')e(\224)p Blue YellowOrange 38 3754 a Fp(\017)p
Blue Red 158 3779 434 17 v Blue White 44 w Fu(har)l(d)p
Blue White -424 w(har)l(d)p Blue White 158 3750 a(har)l(d)p
Blue White 158 3758 a(har)l(d)p Blue 158 3754 a(har)l(d)i(to)g(\002nd)p
Red 1299 3779 550 17 v Blue White 42 w(single)p Blue
White -541 w(single)p Blue White 1299 3750 a(single)p
Blue White 1299 3758 a(single)p Blue 1299 3754 a(single)f(highly)h
(accur)n(ate)h(pr)l(ediction)f(r)r(ule)p eop end
%%Page: 3 3
TeXDict begin @landscape 3 2 bop Blue Red -300 939 2249
34 v Blue White -304 897 a Fv(The)44 b(B)o(oosting)f(A)l(ppr)o(oach)p
Blue White -2240 w(The)h(B)o(oosting)g(A)l(ppr)o(oach)p
Blue White -300 893 a(The)g(B)o(oosting)f(A)l(ppr)o(oach)p
Blue White -300 901 a(The)h(B)o(oosting)f(A)l(ppr)o(oach)p
Blue -300 897 a(The)h(B)o(oosting)f(A)l(ppr)o(oach)p
Red -208 1344 a Fs(\017)p Blue 49 w Fu(devise)j(computer)i(pr)o(ogr)n
(am)e(for)h(der)r(iving)g(r)o(ough)h(r)r(ules)e(of)h(thumb)p
Red -208 1677 a Fs(\017)p Blue 49 w Fu(apply)e(pr)o(ocedur)l(e)i(to)f
(subset)h(of)g(examples)p Red -208 2009 a Fs(\017)p Blue
49 w Fu(obtain)f(r)r(ule)h(of)f(thumb)p Red -208 2341
a Fs(\017)p Blue 49 w Fu(apply)f(to)h(2nd)h(subset)f(of)h(examples)p
Red -208 2673 a Fs(\017)p Blue 49 w Fu(obtain)f(2nd)g(r)r(ule)h(of)f
(thumb)p Red -208 3005 a Fs(\017)p Blue 49 w Fu(r)l(epeat)p
OliveGreen 47 w Fn(T)p Blue 74 w Fu(times)p eop end
%%Page: 4 4
TeXDict begin @landscape 4 3 bop Blue Red -300 1187 677
34 v Blue White -304 1145 a Fv(D)o(etails)p Blue White
-667 w(D)o(etails)p Blue White -300 1141 a(D)o(etails)p
Blue White -300 1149 a(D)o(etails)p Blue -300 1145 a(D)o(etails)p
Plum Red -208 1592 a Fs(\017)p Plum 49 w Fu(ho)-6 b(w)46
b(to)p Red 624 1617 1594 17 v Plum White 43 w(choose)i(examples)p
Plum White -1586 w(choose)g(examples)p Plum White 624
1588 a(choose)g(examples)p Plum White 624 1596 a(choose)g(examples)p
Plum 624 1592 a(choose)g(examples)e(on)h(each)g(r)o(ound?)p
Blue YellowOrange 38 1883 a Fp(\017)p Blue 48 w Fu(concentr)n(ate)i(on)
d(\223har)l(dest)l(\224)g(examples)158 2132 y(\(those)i(most)f(often)f
(misclassi\002ed)g(b)-5 b(y)46 b(pr)l(evious)h(r)r(ules)f(of)h(thumb\))
p Plum Red -208 2464 a Fs(\017)p Plum 49 w Fu(ho)-6 b(w)46
b(to)p Red 624 2489 830 17 v Plum White 43 w(combine)p
Plum White -822 w(combine)p Plum White 624 2460 a(combine)p
Plum White 624 2468 a(combine)p Plum 624 2464 a(combine)g(r)r(ules)h
(of)g(thumb)f(into)g(single)h(pr)l(ediction)g(r)r(ule?)p
Blue YellowOrange 38 2755 a Fp(\017)p Blue 48 w Fu(take)g(\(w)o
(eighted\))h(major)r(ity)e(v)o(ote)h(of)f(r)r(ules)h(of)f(thumb)p
eop end
%%Page: 5 5
TeXDict begin @landscape 5 4 bop Blue Red -300 723 858
34 v Blue White -304 682 a Fv(B)o(oosting)p Blue White
-849 w(B)o(oosting)p Blue White -300 678 a(B)o(oosting)p
Blue White -300 686 a(B)o(oosting)p Blue -300 682 a(B)o(oosting)p
Red -208 1129 a Fs(\017)p Blue Red -56 1154 819 17 v
Blue White 45 w Fu(boosting)p Blue White -810 w(boosting)p
Blue White -56 1125 a(boosting)p Blue White -56 1133
a(boosting)p Blue -56 1129 a(boosting)47 b(=)f(gener)n(al)63
b(method)g(of)g(conv)o(er)r(ting)i(r)o(ough)f(r)r(ules)f(of)973
1378 y(thumb)46 b(into)h(highly)g(accur)n(ate)h(pr)l(ediction)f(r)r
(ule)p Red -208 1677 a Fs(\017)p Blue Red -56 1702 1024
17 v Blue White 45 w Fu(technically)p Blue White -1015
w(technically)p Blue White -56 1673 a(technically)p Blue
White -56 1681 a(technically)p Blue -56 1677 a(technically:)p
YellowOrange 38 1968 a Fp(\017)p Blue Red 158 1993 711
17 v Blue White 44 w Fu(assume)p Blue White -701 w(assume)p
Blue White 158 1964 a(assume)p Blue White 158 1972 a(assume)p
Blue 158 1968 a(assume)g(giv)o(en)p Red 1466 1993 2449
17 v Blue White 43 w(\223)l(w)o(eak)-8 b(\224)45 b(lear)r(ning)i(algor)
r(ithm)p Blue White -2440 w(\223)l(w)o(eak)-8 b(\224)45
b(lear)r(ning)i(algor)r(ithm)p Blue White 1466 1964 a(\223)l(w)o(eak)-8
b(\224)45 b(lear)r(ning)i(algor)r(ithm)p Blue White 1466
1972 a(\223)l(w)o(eak)-8 b(\224)45 b(lear)r(ning)i(algor)r(ithm)p
Blue 1466 1968 a(\223)l(w)o(eak)-8 b(\224)45 b(lear)r(ning)i(algor)r
(ithm)g(that)g(can)158 2217 y(consistently)g(\002nd)f(classi\002ers)h
(\(\223)-10 b(r)r(ules)46 b(of)h(thumb)-14 b(\224\))46
b(at)g(least)158 2466 y(slightly)h(better)g(than)f(r)n(andom,)g(say)-18
b(,)46 b(accur)n(acy)i Fs(\025)e Fu(55\045)158 2715 y(\(in)h(two-class)
g(setting\))p YellowOrange 38 2964 a Fp(\017)p Blue 48
w Fu(giv)o(en)h(suf\002cient)f(data,)f(a)p Red 2297 2989
1787 17 v Blue White 42 w(boosting)h(algor)r(ithm)p Blue
White -1778 w(boosting)g(algor)r(ithm)p Blue White 2297
2960 a(boosting)g(algor)r(ithm)p Blue White 2297 2968
a(boosting)g(algor)r(ithm)p Blue 2297 2964 a(boosting)g(algor)r(ithm)g
(can)p Red 4515 2989 815 17 v Blue White 43 w(pr)o(o)-6
b(v)o(ably)p Blue White -808 w(pr)o(o)g(v)o(ably)p Blue
White 4515 2960 a(pr)o(o)g(v)o(ably)p Blue White 4515
2968 a(pr)o(o)g(v)o(ably)p Blue 4515 2964 a(pr)o(o)g(v)o(ably)158
3213 y(constr)r(uct)48 b(single)f(classi\002er)g(with)g(v)o(er)t(y)f
(high)i(accur)n(acy)-18 b(,)48 b(say)-18 b(,)46 b(99\045)p
eop end
%%Page: 6 6
TeXDict begin @landscape 6 5 bop Blue Red -300 1271 1785
34 v Blue White -304 1230 a Fv(O)o(utline)43 b(of)g(T)-15
b(utor)r(ial)p Blue White -1777 w(O)o(utline)43 b(of)g(T)-15
b(utor)r(ial)p Blue White -300 1226 a(O)o(utline)43 b(of)g(T)-15
b(utor)r(ial)p Blue White -300 1234 a(O)o(utline)43 b(of)g(T)-15
b(utor)r(ial)p Blue -300 1230 a(O)o(utline)43 b(of)g(T)-15
b(utor)r(ial)p Red -208 1677 a Fs(\017)p Blue 49 w Fu(br)r(ief)46
b(backgr)o(ound)p Red -208 2009 a Fs(\017)p Blue 49 w
Fu(basic)h(algor)r(ithm)f(and)g(cor)l(e)i(theor)t(y)p
Red -208 2341 a Fs(\017)p Blue 49 w Fu(other)f(ways)f(of)h
(understanding)f(boosting)p Red -208 2673 a Fs(\017)p
Blue 49 w Fu(exper)r(iments)n(,)g(applications)g(and)g(extensions)p
eop end
%%Page: 7 7
TeXDict begin @landscape 7 6 bop Blue Red 1851 2043 1699
34 v Blue White 1847 2002 a Fv(B)n(r)r(ief)42 b(B)n(ackgr)o(ound)p
Blue White -1690 w(B)n(r)r(ief)h(B)n(ackgr)o(ound)p Blue
White 1851 1998 a(B)n(r)r(ief)g(B)n(ackgr)o(ound)p Blue
White 1851 2006 a(B)n(r)r(ief)g(B)n(ackgr)o(ound)p Blue
1851 2002 a(B)n(r)r(ief)g(B)n(ackgr)o(ound)p eop end
%%Page: 8 8
TeXDict begin @landscape 8 7 bop Blue Red -300 626 2145
34 v Blue White -304 585 a Fv(The)44 b(B)o(oosting)f(P)n(r)o(oblem)p
Blue White -2137 w(The)h(B)o(oosting)g(P)n(r)o(oblem)p
Blue White -300 581 a(The)g(B)o(oosting)f(P)n(r)o(oblem)p
Blue White -300 589 a(The)h(B)o(oosting)f(P)n(r)o(oblem)p
Blue -300 585 a(The)h(B)o(oosting)f(P)n(r)o(oblem)p Red
-208 1032 a Fs(\017)p Blue 49 w Fu(\223)-10 b(str)o(ong)l(\224)46
b(P)-11 b(A)-5 b(C)47 b(algor)r(ithm)p YellowOrange 38
1322 a Fp(\017)p Blue 48 w Fu(for)g(any)f(distr)r(ibution)p
OliveGreen YellowOrange 38 1572 a Fp(\017)p OliveGreen
48 w Fs(8)p Fn(\017)57 b(>)h Fm(0)p Fn(;)34 b(\016)65
b(>)58 b Fm(0)p Blue YellowOrange 38 1821 a Fp(\017)p
Blue 48 w Fu(giv)o(en)48 b(polynomially)c(many)h(r)n(andom)h(examples)p
YellowOrange 38 2070 a Fp(\017)p Blue 48 w Fu(\002nds)g(classi\002er)i
(with)e(err)o(or)p OliveGreen 48 w Fs(\024)57 b Fn(\017)p
Blue 46 w Fu(with)47 b(pr)o(obability)p OliveGreen 45
w Fs(\025)57 b Fm(1)45 b Fs(\000)h Fn(\016)p Blue Red
-208 2402 a Fs(\017)p Blue 49 w Fu(\223)l(w)o(eak)-8
b(\224)45 b(P)-11 b(A)-5 b(C)47 b(algor)r(ithm)p YellowOrange
38 2692 a Fp(\017)p Blue 48 w Fu(same)l(,)f(but)h(only)e(for)p
OliveGreen 47 w Fn(\017)57 b Fs(\025)2251 2611 y Fl(1)p
2251 2642 79 4 v 2251 2764 a(2)2386 2692 y Fs(\000)46
b Fn(\015)p Blue Black Red -208 3024 a Fs(\017)p Black
49 w Fr([K)l(ear)q(ns)38 b(&)g(V)-10 b(aliant)39 b('88])p
Blue Fu(:)p YellowOrange 38 3315 a Fp(\017)p Blue 48
w Fu(does)47 b(w)o(eak)f(lear)r(nability)f(imply)g(str)o(ong)i(lear)r
(nability?)p eop end
%%Page: 9 9
TeXDict begin @landscape 9 8 bop Blue Red -300 346 2527
34 v Blue White -304 305 a Fv(E)o(ar)n(ly)44 b(B)o(oosting)f(Algor)r
(ithms)p Blue White -2518 w(E)o(ar)n(ly)h(B)o(oosting)f(Algor)r(ithms)p
Blue White -300 301 a(E)o(ar)n(ly)h(B)o(oosting)f(Algor)r(ithms)p
Blue White -300 309 a(E)o(ar)n(ly)h(B)o(oosting)f(Algor)r(ithms)p
Blue -300 305 a(E)o(ar)n(ly)h(B)o(oosting)f(Algor)r(ithms)p
Black Red -208 752 a Fs(\017)p Black 49 w Fr([Schapir)m(e)37
b('89])p Blue Fu(:)p YellowOrange 38 1042 a Fp(\017)p
Blue 48 w Fu(\002rst)47 b(pr)o(o)-6 b(v)o(able)46 b(boosting)h(algor)r
(ithm)p Goldenrod 220 1312 a Fp(\017)p Blue 49 w Fu(call)f(w)o(eak)g
(lear)r(ner)h(thr)l(ee)h(times)e(on)h(thr)l(ee)g(modi\002ed)341
1561 y(distr)r(ibutions)p Goldenrod 220 1831 a Fp(\017)p
Blue 49 w Fu(get)g(slight)g(boost)g(in)f(accur)n(acy)p
Goldenrod 220 2101 a Fp(\017)p Blue 49 w Fu(apply)f(r)l(ecursiv)o(ely)p
Black Red -208 2433 a Fs(\017)p Black 49 w Fr([F)m(r)m(eund)37
b('90])p Blue Fu(:)p YellowOrange 38 2723 a Fp(\017)p
Blue 48 w Fu(\223)-17 b(optimal)n(\224)46 b(algor)r(ithm)h(that)g
(\223boosts)f(b)-5 b(y)45 b(major)r(ity\224)p Black Red
-208 3056 a Fs(\017)p Black 49 w Fr([D)n(r)q(ucker)-10
b(,)39 b(Schapir)m(e)e(&)i(S)m(imar)m(d)f('92])p Blue
Fu(:)p YellowOrange 38 3346 a Fp(\017)p Blue 48 w Fu(\002rst)47
b(exper)r(iments)g(using)g(boosting)p YellowOrange 38
3595 a Fp(\017)p Blue 48 w Fu(limited)f(b)-5 b(y)46 b(pr)n(actical)h
(dr)n(awbacks)p eop end
%%Page: 10 10
TeXDict begin @landscape 10 9 bop Blue Red -300 -101
918 34 v Blue White -304 -142 a Fv(A)n(daB)o(oost)p Blue
White -910 w(A)n(daB)o(oost)p Blue White -300 -146 a(A)n(daB)o(oost)p
Blue White -300 -138 a(A)n(daB)o(oost)p Blue -300 -142
a(A)n(daB)o(oost)p Black Red -208 238 a Fs(\017)p Black
49 w Fr([F)m(r)m(eund)37 b(&)h(Schapir)m(e)g('95])p Blue
Fu(:)p YellowOrange 38 521 a Fp(\017)p Blue 48 w Fu(intr)o(oduced)47
b(\223)p Red 1338 546 892 17 v Blue White -4 w(A)n(daB)o(oost)p
Blue White -884 w(A)n(daB)o(oost)p Blue White 1338 517
a(A)n(daB)o(oost)p Blue White 1338 525 a(A)n(daB)o(oost)p
Blue 1338 521 a(A)n(daB)o(oost\224)f(algor)r(ithm)p YellowOrange
38 770 a Fp(\017)p Blue 48 w Fu(str)o(ong)i(pr)n(actical)f(adv)o
(antages)f(o)-6 b(v)o(er)47 b(pr)l(evious)g(boosting)158
1019 y(algor)r(ithms)p Red -208 1334 a Fs(\017)p Blue
Red -56 1359 4325 17 v Blue White 45 w Fu(exper)r(iments)f(and)g
(applications)g(using)i(A)n(daB)o(oost:)p Blue White
-4317 w(exper)r(iments)f(and)f(applications)g(using)h(A)n(daB)o(oost:)p
Blue White -56 1330 a(exper)r(iments)g(and)e(applications)i(using)g(A)n
(daB)o(oost:)p Blue White -56 1338 a(exper)r(iments)g(and)e
(applications)i(using)g(A)n(daB)o(oost:)p Blue -56 1334
a(exper)r(iments)g(and)e(applications)i(using)g(A)n(daB)o(oost:)p
Black -56 1508 a Fk([D)o(r)q(ucker)22 b(&)h(C)o(or)q(tes)g('96])p
Blue Black -56 1628 a([)8 b(J)l(ackson)24 b(&)e(C)o(r)o(aven)h('96])p
Blue Black -56 1748 a([F)n(r)n(eund)f(&)g(Schapir)n(e)h('96])p
Blue Black -56 1869 a([Q)o(uinlan)f('96])p Blue Black
-56 1989 a([B)o(r)n(eiman)g('96])p Blue Black -56 2109
a([M)o(aclin)g(&)h(O)o(pitz)f('97])p Blue Black -56 2230
a([B)o(auer)h(&)g(K)m(ohavi)g('97])p Blue Black -56 2350
a([Schw)o(enk)g(&)g(B)o(engio)g('98])p Blue Black -56
2471 a([Schapir)n(e)n(,)g(S)n(inger)f(&)g(S)n(inghal)h('98])p
Blue Black 1826 1508 a([A)o(bney)-8 b(,)22 b(Schapir)n(e)h(&)g(S)n
(inger)f('99])p Blue Black 1826 1628 a([H)n(ar)q(uno)l(,)g(S)o(hir)o
(ai)h(&)f(O)o(o)m(yama)i('99])p Blue Black 1826 1748
a([C)o(ohen)f(&)g(S)n(inger)n(')f(99])p Blue Black 1826
1869 a([D)o(ietter)q(ich)i('00])p Blue Black 1826 1989
a([Schapir)n(e)f(&)g(S)n(inger)f('00])p Blue Black 1826
2109 a([C)o(ollins)h('00])p Blue Black 1826 2230 a([Escuder)o(o)l(,)i
(M)2424 2228 y(\036)2418 2230 y(ar)o(quez)e(&)f(Rigau)h('00])p
Blue Black 1826 2350 a([I)o(y)o(er)-6 b(,)24 b(Lewis)o(,)f(Schapir)n(e)
f(et)h(al.)g('00])p Blue Black 1826 2471 a([Onoda,)f(R)2284
2469 y(\250)2278 2471 y(atsch)j(&)d(M)2737 2469 y(\250)2727
2471 y(uller)h('00])p Blue Black 3709 1508 a([)5 b(T)m(ieu)22
b(&)h(V)q(iola)g('00])p Blue Black 3709 1628 a([)6 b(W)-6
b(alker)g(,)23 b(R)o(ambo)m(w)f(&)g(R)n(ogati)i('01])p
Blue Black 3709 1748 a([R)n(ocher)r(y)-8 b(,)24 b(Schapir)n(e)n(,)f(R)o
(ahim)g(&)g(G)o(upta)f('01])p Blue Black 3709 1869 a([M)m(erler)-6
b(,)22 b(F)o(urlanello)l(,)h(Lar)n(cher)f(&)h(Sboner)f('01])p
Blue Black 3709 1989 a([D)o(i)g(F)-5 b(abbr)q(izio)l(,)22
b(D)o(utton,)h(G)o(upta)g(et)g(al.)g('02])p Blue Black
3709 2109 a([Q)o(u,)g(A)o(dam,)g(Y)-7 b(asui)23 b(et)g(al.)f('02])p
Blue Black 3709 2230 a([)5 b(T)-8 b(ur)i(,)23 b(Schapir)n(e)f(&)h(H)n
(akkani-T)4939 2228 y(\250)4929 2230 y(ur)f('03])p Blue
Black 3709 2350 a([)6 b(V)q(iola)23 b(&)f(J)m(ones)h('04])p
Blue Black 3709 2471 a([M)o(iddendor)q(f,)e(K)l(undaje)n(,)h(W)o
(iggins)f(et)i(al.)g('04])p Blue 3709 2564 a(.)3709 2598
y(.)3709 2631 y(.)p Red -208 2864 a Fs(\017)p Blue Red
-56 2889 4720 17 v Blue White 45 w Fu(continuing)47 b(dev)o(elopment)f
(of)g(theor)t(y)h(and)f(algor)r(ithms:)p Blue White -4711
w(continuing)i(dev)o(elopment)d(of)i(theor)t(y)f(and)g(algor)r(ithms:)p
Blue White -56 2860 a(continuing)h(dev)o(elopment)f(of)h(theor)t(y)f
(and)g(algor)r(ithms:)p Blue White -56 2868 a(continuing)h(dev)o
(elopment)f(of)h(theor)t(y)f(and)g(algor)r(ithms:)p Blue
-56 2864 a(continuing)h(dev)o(elopment)f(of)h(theor)t(y)f(and)g(algor)r
(ithms:)p Black -56 3038 a Fk([B)o(r)n(eiman)22 b('98,)g('99])p
Blue Black -56 3158 a([Schapir)n(e)n(,)h(F)n(r)n(eund,)f(B)o(ar)q
(tlett)h(&)g(Lee)f('98])p Blue Black -56 3278 a([Gr)o(o)m(ve)g(&)h
(Schuur)q(mans)h('98])p Blue Black -56 3399 a([M)o(ason,)f(B)o(ar)q
(tlett)g(&)g(B)o(axter)g('98])p Blue Black -56 3519 a([Schapir)n(e)g(&)
f(S)n(inger)g('99])p Blue Black -56 3640 a([C)o(ohen)h(&)g(S)n(inger)e
('99])p Blue Black -56 3760 a([F)n(r)n(eund)h(&)g(M)o(ason)h('99])p
Blue Black -56 3880 a([Domingo)f(&)h(W)-6 b(atanabe)22
b('99])p Blue Black -56 4001 a([M)o(ason,)h(B)o(axter)-6
b(,)24 b(B)o(ar)q(tlett)f(&)g(F)n(r)n(ean)f('99,)g('00])p
Blue Black 1826 3038 a([D)o(uffy)g(&)h(H)m(elmbold)e('99,)i('02])p
Blue Black 1826 3158 a([F)n(r)n(eund)f(&)h(M)o(ason)g('99])p
Blue Black 1826 3278 a([Ridgeway)-8 b(,)22 b(M)o(adigan)g(&)h(Richar)n
(dson)g('99])p Blue Black 1826 3399 a([K)q(ivinen)e(&)i(W)-6
b(ar)q(muth)23 b('99])p Blue Black 1826 3519 a([F)n(r)q(iedman,)f(H)n
(astie)g(&)h(T)m(ibshir)o(ani)f('00])p Blue Black 1826
3640 a([R)1929 3638 y(\250)1923 3640 y(atsch,)j(Onoda)d(&)g(M)2737
3638 y(\250)2727 3640 y(uller)h('00])p Blue Black 1826
3760 a([R)1929 3758 y(\250)1923 3760 y(atsch,)i(W)-6
b(ar)q(muth,)23 b(M)o(ika)g(et)g(al.)f('00])p Blue Black
1826 3880 a([Allw)o(ein,)h(Schapir)n(e)f(&)h(S)n(inger)f('00])p
Blue Black 1826 4001 a([F)n(r)q(iedman)f('01])p Blue
Black 3709 3038 a([K)m(oltchinskii,)j(P)l(anchenko)g(&)e(Lo)o(zano)h
('01])p Blue Black 3709 3158 a([C)o(ollins)o(,)g(Schapir)n(e)f(&)h(S)n
(inger)f('02])p Blue Black 3709 3278 a([D)o(emir)q(iz,)g(B)o(ennett)h
(&)g(S)o(haw)o(e-T)-10 b(aylor)23 b('02])p Blue Black
3709 3399 a([Lebanon)e(&)i(Laffer)q(ty)f('02])p Blue
Black 3709 3519 a([)6 b(W)-5 b(yner)22 b('02])p Blue
Black 3709 3640 a([R)o(udin,)g(D)o(aubechies)i(&)f(Schapir)n(e)g('03])p
Blue Black 3709 3760 a([)8 b(J)n(iang)21 b('04])p Blue
Black 3709 3880 a([L)o(ugosi)h(&)h(V)-6 b(ayatis)24 b('04])p
Blue Black 3709 4001 a([Zhang)e('04])p Blue 3709 4095
a(.)3709 4128 y(.)3709 4161 y(.)p eop end
%%Page: 11 11
TeXDict begin @landscape 11 10 bop Blue Red 1107 1560
3186 34 v Blue White 1103 1518 a Fv(B)n(asic)44 b(Algor)r(ithm)f(and)h
(C)n(or)l(e)f(Theor)t(y)p Blue White -3178 w(B)n(asic)h(Algor)r(ithm)g
(and)f(C)n(or)l(e)g(Theor)t(y)p Blue White 1107 1514
a(B)n(asic)h(Algor)r(ithm)f(and)h(C)n(or)l(e)f(Theor)t(y)p
Blue White 1107 1522 a(B)n(asic)h(Algor)r(ithm)f(and)h(C)n(or)l(e)f
(Theor)t(y)p Blue 1107 1518 a(B)n(asic)h(Algor)r(ithm)f(and)h(C)n(or)l
(e)f(Theor)t(y)p Red 2209 2335 a Fj(\017)p Blue 49 w
Fr(intr)o(oduction)d(to)f(A)n(daB)o(oost)p Red 2209 2625
a Fj(\017)p Blue 49 w Fr(analysis)g(of)g(tr)n(aining)f(err)o(or)p
Red 2209 2916 a Fj(\017)p Blue 49 w Fr(analysis)h(of)g(test)f(err)o(or)
h(based)f(on)2344 3123 y(mar)o(gins)g(theor)s(y)p eop
end
%%Page: 12 12
TeXDict begin @landscape 12 11 bop Blue Red -300 507
3196 34 v Blue White -304 466 a Fv(A)43 b(F)-7 b(or)r(mal)43
b(D)o(escr)r(iption)h(of)f(B)o(oosting)p Blue White -3187
w(A)h(F)-7 b(or)r(mal)42 b(D)o(escr)r(iption)j(of)e(B)o(oosting)p
Blue White -300 462 a(A)g(F)-7 b(or)r(mal)43 b(D)o(escr)r(iption)i(of)d
(B)o(oosting)p Blue White -300 470 a(A)h(F)-7 b(or)r(mal)43
b(D)o(escr)r(iption)i(of)d(B)o(oosting)p Blue -300 466
a(A)h(F)-7 b(or)r(mal)43 b(D)o(escr)r(iption)i(of)d(B)o(oosting)p
Red -208 913 a Fs(\017)p Blue 49 w Fu(giv)o(en)p Red
495 938 1055 17 v Blue White 43 w(tr)n(aining)47 b(set)p
Blue White -1046 w(tr)n(aining)g(set)p Blue White 495
909 a(tr)n(aining)g(set)p Blue White 495 917 a(tr)n(aining)g(set)p
Blue 495 913 a(tr)n(aining)g(set)p OliveGreen 140 w Fm(\()p
Fn(x)1877 953 y Fl(1)1960 913 y Fn(;)34 b(y)2149 953
y Fl(1)2232 913 y Fm(\))p Fn(;)g(:)g(:)g(:)j(;)d Fm(\()p
Fn(x)2946 944 y Fi(m)3098 913 y Fn(;)g(y)3287 944 y Fi(m)3439
913 y Fm(\))p Blue OliveGreen Red -208 1245 a Fs(\017)p
OliveGreen 49 w Fn(y)43 1286 y Fi(i)162 1245 y Fs(2)57
b(f\000)p Fm(1)p Fn(;)34 b Fm(+1)p Fs(g)p Blue 46 w Fu(corr)l(ect)48
b(label)e(of)g(instance)p OliveGreen 47 w Fn(x)3589 1286
y Fi(i)3708 1245 y Fs(2)58 b Fn(X)p Blue Red -208 1577
a Fs(\017)p Blue 49 w Fu(for)p OliveGreen 47 w Fn(t)f
Fm(=)g(1)p Fn(;)34 b(:)g(:)g(:)i(;)e(T)p Blue 28 w Fu(:)p
YellowOrange 38 1867 a Fp(\017)p Blue 48 w Fu(constr)r(uct)48
b(distr)r(ibution)p OliveGreen 46 w Fn(D)2424 1902 y
Fi(t)p Blue 2536 1867 a Fu(on)p OliveGreen 46 w Fs(f)p
Fm(1)p Fn(;)34 b(:)g(:)g(:)j(;)d(m)p Fs(g)p Blue YellowOrange
38 2176 a Fp(\017)p Blue 48 w Fu(\002nd)p Red 582 2201
1348 17 v Blue White 42 w(w)o(eak)46 b(classi\002er)p
Blue White -1338 w(w)o(eak)h(classi\002er)p Blue White
582 2172 a(w)o(eak)g(classi\002er)p Blue White 582 2180
a(w)o(eak)g(classi\002er)p Blue 582 2176 a(w)o(eak)g(classi\002er)g
(\(\223)-10 b(r)r(ule)46 b(of)h(thumb)-14 b(\224\))p
OliveGreen 505 2486 a Fn(h)621 2520 y Fi(t)744 2486 y
Fm(:)57 b Fn(X)73 b Fs(!)57 b(f\000)p Fm(1)p Fn(;)34
b Fm(+1)p Fs(g)p Blue 158 2795 a Fu(with)47 b(small)p
Red 1171 2820 466 17 v Blue White 41 w(err)o(or)p Blue
White -455 w(err)o(or)p Blue White 1171 2791 a(err)o(or)p
Blue White 1171 2799 a(err)o(or)p Blue 1171 2795 a(err)o(or)p
OliveGreen 47 w Fn(\017)1764 2829 y Fi(t)p Blue 1875
2795 a Fu(on)p OliveGreen 47 w Fn(D)2337 2829 y Fi(t)p
Blue 2402 2795 a Fu(:)p OliveGreen 505 3104 a Fn(\017)587
3138 y Fi(t)709 3104 y Fm(=)57 b(Pr)1118 3150 y Fi(D)1258
3179 y Fh(t)1317 3104 y Fm([)p Fn(h)1485 3138 y Fi(t)1550
3104 y Fm(\()p Fn(x)1738 3145 y Fi(i)1800 3104 y Fm(\))g
Fs(6)p Fm(=)g Fn(y)2235 3145 y Fi(i)2297 3104 y Fm(])p
Blue Red -208 3436 a Fs(\017)p Blue 49 w Fu(output)p
Red 628 3461 1287 17 v Blue White 42 w(\002nal)46 b(classi\002er)p
Blue White -1277 w(\002nal)g(classi\002er)p Blue White
628 3432 a(\002nal)g(classi\002er)p Blue White 628 3440
a(\002nal)g(classi\002er)p Blue 628 3436 a(\002nal)g(classi\002er)p
OliveGreen 47 w Fn(H)2129 3484 y Fl(\014nal)p Blue eop
end
%%Page: 13 13
TeXDict begin @landscape 13 12 bop Blue Red -300 -74
918 34 v Blue White -304 -116 a Fv(A)n(daB)o(oost)p Blue
White -910 w(A)n(daB)o(oost)p Blue White -300 -120 a(A)n(daB)o(oost)p
Blue White -300 -112 a(A)n(daB)o(oost)p Blue -300 -116
a(A)n(daB)o(oost)p Black 4639 91 a Fr([with)39 b(F)m(r)m(eund])p
Blue Red -208 491 a Fs(\017)p Blue Red -56 515 1467 17
v Blue White 45 w Fu(constr)r(ucting)48 b Fn(D)1341 525
y Fi(t)p Blue White -52 491 a Fu(constr)r(ucting)g Fn(D)1349
525 y Fi(t)p Blue White -56 487 a Fu(constr)r(ucting)g
Fn(D)1345 521 y Fi(t)p Blue White -56 495 a Fu(constr)r(ucting)g
Fn(D)1345 529 y Fi(t)p Blue -56 491 a Fu(constr)r(ucting)p
OliveGreen 48 w Fn(D)1345 525 y Fi(t)p Blue 1410 491
a Fu(:)p OliveGreen YellowOrange 38 806 a Fp(\017)p OliveGreen
48 w Fn(D)326 846 y Fl(1)410 806 y Fm(\()p Fn(i)p Fm(\))57
b(=)g(1)p Fn(=m)p Blue YellowOrange 38 1115 a Fp(\017)p
Blue 48 w Fu(giv)o(en)p OliveGreen 48 w Fn(D)878 1150
y Fi(t)p Blue 989 1115 a Fu(and)p OliveGreen 46 w Fn(h)1511
1150 y Fi(t)p Blue 1576 1115 a Fu(:)p OliveGreen 1197
1574 a Fn(D)1365 1614 y Fi(t)p Fl(+1)1632 1574 y Fm(\()p
Fn(i)p Fm(\))84 b(=)2172 1434 y Fn(D)2340 1469 y Fi(t)2405
1434 y Fm(\()p Fn(i)p Fm(\))p 2172 1524 449 4 v 2295
1716 a Fn(Z)2433 1751 y Fi(t)2677 1574 y Fs(\002)2883
1274 y Fg(8)2883 1348 y(>)2883 1373 y(>)2883 1398 y(>)2883
1423 y(>)2883 1448 y(<)2883 1597 y(>)2883 1622 y(>)2883
1647 y(>)2883 1672 y(>)2883 1697 y(:)2998 1448 y Fn(e)3092
1373 y Fj(\000)p Fi(\013)3333 1402 y Fh(t)p Blue 3475
1448 a Fu(if)p OliveGreen 47 w Fn(y)3747 1490 y Fi(i)3866
1448 y Fm(=)57 b Fn(h)4188 1483 y Fi(t)4253 1448 y Fm(\()p
Fn(x)4441 1490 y Fi(i)4503 1448 y Fm(\))p Blue OliveGreen
2998 1697 a Fn(e)3092 1623 y Fi(\013)3199 1651 y Fh(t)p
Blue 3475 1697 a Fu(if)p OliveGreen 47 w Fn(y)3747 1739
y Fi(i)3866 1697 y Fs(6)p Fm(=)g Fn(h)4188 1732 y Fi(t)4253
1697 y Fm(\()p Fn(x)4441 1739 y Fi(i)4503 1697 y Fm(\))p
Blue OliveGreen 1931 2190 a(=)2172 2050 y Fn(D)2340 2085
y Fi(t)2405 2050 y Fm(\()p Fn(i)p Fm(\))p 2172 2140 V
2295 2332 a Fn(Z)2433 2366 y Fi(t)2722 2190 y Fm(exp\()p
Fs(\000)p Fn(\013)3375 2225 y Fi(t)3497 2190 y Fn(y)3596
2232 y Fi(i)3715 2190 y Fn(h)3831 2225 y Fi(t)3896 2190
y Fm(\()p Fn(x)4084 2232 y Fi(i)4146 2190 y Fm(\)\))p
Blue 505 2788 a Fu(wher)l(e)p OliveGreen 140 w Fn(Z)1355
2822 y Fi(t)1478 2788 y Fm(=)p Blue 57 w Fu(nor)r(malization)46
b(constant)p OliveGreen Blue OliveGreen 1217 3166 a Fn(\013)1346
3201 y Fi(t)1468 3166 y Fm(=)1684 3085 y Fl(1)p 1684
3117 79 4 v 1684 3238 a(2)1807 3166 y Fm(ln)1999 2894
y Fg(0)1999 3040 y(B)1999 3090 y(B)1999 3140 y(B)1999
3193 y(@)2082 3027 y Fm(1)f Fs(\000)h Fn(\017)2511 3062
y Fi(t)p 2082 3117 494 4 v 2255 3308 a Fn(\017)2337 3343
y Fi(t)2585 2894 y Fg(1)2585 3040 y(C)2585 3090 y(C)2585
3140 y(C)2585 3193 y(A)2715 3166 y Fn(>)58 b Fm(0)p Blue
Red -208 3592 a Fs(\017)p Blue Red -56 3617 1287 17 v
Blue White 45 w Fu(\002nal)46 b(classi\002er)p Blue White
-1278 w(\002nal)g(classi\002er)p Blue White -56 3588
a(\002nal)g(classi\002er)p Blue White -56 3596 a(\002nal)g
(classi\002er)p Blue -56 3592 a(\002nal)g(classi\002er)q(:)p
OliveGreen YellowOrange 38 3918 a Fp(\017)p OliveGreen
48 w Fn(H)326 3966 y Fl(\014nal)626 3918 y Fm(\()p Fn(x)p
Fm(\))58 b(=)f(sign)1511 3670 y Fg(0)1511 3816 y(B)1511
3866 y(B)1511 3919 y(@)1584 3808 y(X)1613 4052 y Fi(t)1738
3918 y Fn(\013)1867 3953 y Fi(t)1932 3918 y Fn(h)2048
3953 y Fi(t)2113 3918 y Fm(\()p Fn(x)p Fm(\))2374 3670
y Fg(1)2374 3816 y(C)2374 3866 y(C)2374 3919 y(A)p Blue
eop end
%%Page: 14 14
TeXDict begin @landscape 14 13 bop Blue Red -300 -101
1222 34 v Blue White -304 -142 a Fv(T)-19 b(o)-5 b(y)43
b(Example)p Blue White -1213 w(T)-19 b(o)-5 b(y)44 b(Example)p
Blue White -300 -146 a(T)-19 b(o)-5 b(y)44 b(Example)p
Blue White -300 -138 a(T)-19 b(o)-5 b(y)44 b(Example)p
Blue -300 -142 a(T)-19 b(o)-5 b(y)44 b(Example)-300 308
y
 47362867 22260540 0 -23812997 50191482 0 startTexFig

 270 rotate
 -300 308 a
%%BeginDocument: /u/schapire/TALKS/ijcai99/toy-example/t1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: t1.fig
%%Creator: fig2dev Version 3.1 Patchlevel 2
%%CreationDate: Tue Jun 29 16:26:39 1999
%%For: schapire@omega1.research.att.com (Robert Schapire)
%Magnification: 1.00
%%Orientation: Landscape
%%BoundingBox: 0 0 362 763
%%Pages: 0
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.761 0.894 1.000 srgb} bind def

end
save
-107.0 -12.0 translate
 90 rotate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n 0 612 m 0 0 l 792 0 l 792 612 l cp clip
 0.06000 0.06000 sc
/Times-Italic ff 360.00 scf sf
2175 2175 m
gs 1 -1 sc (D) col2 sh gr
/Times-Roman ff 360.00 scf sf
2400 2325 m
gs 1 -1 sc (1) col2 sh gr
30.000 slw
% Polyline
n 1125 5250 m 1125 4950 l gs col1 s gr 
% Polyline
n 975 5100 m 1275 5100 l gs col1 s gr 
% Polyline
n 975 4200 m 975 3900 l gs col1 s gr 
% Polyline
n 825 4050 m 1125 4050 l gs col1 s gr 
% Polyline
n 1500 5625 m 1800 5625 l gs col4 s gr 
% Polyline
n 2475 4125 m 2775 4125 l gs col4 s gr 
% Polyline
n 3600 5100 m 3900 5100 l gs col4 s gr 
% Polyline
n 3600 3075 m 3900 3075 l gs col4 s gr 
% Polyline
n 3150 3450 m 3150 3150 l gs col1 s gr 
% Polyline
n 3000 3300 m 3300 3300 l gs col1 s gr 
% Polyline
n 2625 2850 m 2625 2550 l gs col1 s gr 
% Polyline
n 2475 2700 m 2775 2700 l gs col1 s gr 
% Polyline
n 1950 3300 m 1950 3000 l gs col1 s gr 
% Polyline
n 1800 3150 m 2100 3150 l gs col1 s gr 
% Polyline
n 1650 3900 m 1950 3900 l gs col4 s gr 
7.500 slw
% Polyline
n 600 2400 m 4200 2400 l 4200 6000 l 600 6000 l cp gs col-1 s gr 
% Polyline
n 225 1800 m 12900 1800 l 12900 7800 l 225 7800 l cp gs col7 s gr 
$F2psEnd
rs

%%EndDocument

 endTexFig
 -300 3765 a Fu(w)o(eak)i(classi\002ers)i(=)e(v)o(er)r(tical)h(or)g
(hor)r(iz)o(ontal)g(half-planes)p eop end
%%Page: 15 15
TeXDict begin @landscape 15 14 bop Blue Red -300 -101
806 34 v Blue White -304 -142 a Fv(R)n(ound)43 b(1)p
Blue White -798 w(R)n(ound)g(1)p Blue White -300 -146
a(R)n(ound)g(1)p Blue White -300 -138 a(R)n(ound)g(1)p
Blue -300 -142 a(R)n(ound)g(1)-300 644 y
 47362867 22260540 0 -23812997 50191482 0 startTexFig

 270 rotate
 -300 644 a
%%BeginDocument: /u/schapire/TALKS/ijcai99/toy-example/t2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: t2.fig
%%Creator: fig2dev Version 3.1 Patchlevel 2
%%CreationDate: Wed Jun 30 11:41:30 1999
%%For: schapire@omega1.research.att.com (Robert Schapire)
%Magnification: 1.00
%%Orientation: Landscape
%%BoundingBox: 0 0 362 763
%%Pages: 0
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.761 0.894 1.000 srgb} bind def

end
save
-107.0 -12.0 translate
 90 rotate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n 0 612 m 0 0 l 792 0 l 792 612 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Polyline
n 1350 2400 m 4200 2400 l 4200 6000 l 1350 6000 l cp gs /PC [[1.00 0.88 0.88] [1.00 0.88 0.88]] def
15.00 15.00 sc P1 [16 0 0 -8 90.00 160.00] PATmp PATsp ef gr PATusp gs col30 s gr 
% Polyline
n 600 2400 m 1350 2400 l 1350 6000 l 600 6000 l cp gs /PC [[0.53 0.81 1.00] [0.53 0.81 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 160.00] PATmp PATsp ef gr PATusp gs col11 s gr 
30.000 slw
% Polyline
n 975 5100 m 1275 5100 l gs col1 s gr 
% Polyline
n 975 4200 m 975 3900 l gs col1 s gr 
% Polyline
n 825 4050 m 1125 4050 l gs col1 s gr 
% Polyline
n 2475 4125 m 2775 4125 l gs col4 s gr 
% Polyline
n 1500 5625 m 1800 5625 l gs col4 s gr 
% Polyline
n 3600 3075 m 3900 3075 l gs col4 s gr 
% Polyline
n 3150 3450 m 3150 3150 l gs col1 s gr 
% Polyline
n 3600 5100 m 3900 5100 l gs col4 s gr 
% Polyline
n 2625 2850 m 2625 2550 l gs col1 s gr 
% Polyline
n 2475 2700 m 2775 2700 l gs col1 s gr 
% Polyline
n 3000 3300 m 3300 3300 l gs col1 s gr 
% Polyline
n 1800 3150 m 2100 3150 l gs col1 s gr 
% Polyline
n 1650 3900 m 1950 3900 l gs col4 s gr 
7.500 slw
% Polyline
n 600 2400 m 4200 2400 l 4200 6000 l 600 6000 l cp gs col-1 s gr 
30.000 slw
% Polyline
n 5325 5207 m 5325 4993 l gs col1 s gr 
% Polyline
n 5218 5100 m 5432 5100 l gs col1 s gr 
% Polyline
n 5186 4168 m 5186 3954 l gs col1 s gr 
% Polyline
n 1950 3300 m 1950 3000 l gs col1 s gr 
% Polyline
n 5893 3900 m 6107 3900 l gs col4 s gr 
% Polyline
n 5754 5604 m 5968 5604 l gs col4 s gr 
% Polyline
n 6729 4104 m 6943 4104 l gs col4 s gr 
% Polyline
n 7854 5079 m 8068 5079 l gs col4 s gr 
% Polyline
n 5079 4061 m 5293 4061 l gs col1 s gr 
% Polyline
n 6150 3400 m 6150 2900 l gs col1 s gr 
% Polyline
n 5900 3150 m 6400 3150 l gs col1 s gr 
% Polyline
n 7350 3550 m 7350 3050 l gs col1 s gr 
% Polyline
n 7100 3300 m 7600 3300 l gs col1 s gr 
% Polyline
n 6825 2950 m 6825 2450 l gs col1 s gr 
% Polyline
n 6575 2700 m 7075 2700 l gs col1 s gr 
/Times-Italic ff 360.00 scf sf
975 2175 m
gs 1 -1 sc (h) col2 sh gr
/Times-Roman ff 360.00 scf sf
1125 2325 m
gs 1 -1 sc (1) col2 sh gr
7.500 slw
% Ellipse
n 2625 2700 212 212 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 1950 3150 212 212 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 3150 3300 212 212 0 360 DrawEllipse gs col0 s gr

% Polyline
n 225 1800 m 12900 1800 l 12900 7800 l 225 7800 l cp gs col7 s gr 
30.000 slw
% Polyline
n 1350 2100 m 1350 6300 l gs col25 s gr 
% Polyline
n 1125 5250 m 1125 4950 l gs col1 s gr 
% Polyline
n 7854 3054 m 8068 3054 l gs col4 s gr 
7.500 slw
% Polyline
n 4800 2400 m 8400 2400 l 8400 6000 l 4800 6000 l cp gs col-1 s gr 
/Symbol ff 360.00 scf sf
2100 7200 m
gs 1 -1 sc (a) col2 sh gr
/Symbol ff 360.00 scf sf
2100 6600 m
gs 1 -1 sc (e) col2 sh gr
/Times-Roman ff 360.00 scf sf
2250 6750 m
gs 1 -1 sc (1) col2 sh gr
/Times-Roman ff 360.00 scf sf
2325 7350 m
gs 1 -1 sc (1) col2 sh gr
/Times-Roman ff 360.00 scf sf
2475 6675 m
gs 1 -1 sc (=0.30) col2 sh gr
/Times-Roman ff 360.00 scf sf
2475 7200 m
gs 1 -1 sc (=0.42) col2 sh gr
/Times-Roman ff 360.00 scf sf
6750 2325 m
gs 1 -1 sc (2) col2 sh gr
/Times-Italic ff 360.00 scf sf
6525 2175 m
gs 1 -1 sc (D) col2 sh gr
$F2psEnd
rs
end

%%EndDocument

 endTexFig
 eop end
%%Page: 16 16
TeXDict begin @landscape 16 15 bop Blue Red -300 -101
806 34 v Blue White -304 -142 a Fv(R)n(ound)43 b(2)p
Blue White -798 w(R)n(ound)g(2)p Blue White -300 -146
a(R)n(ound)g(2)p Blue White -300 -138 a(R)n(ound)g(2)p
Blue -300 -142 a(R)n(ound)g(2)-300 644 y
 47362867 22260540 0 -23812997 50191482 0 startTexFig

 270 rotate
 -300 644 a
%%BeginDocument: /u/schapire/TALKS/ijcai99/toy-example/t3.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: t3.fig
%%Creator: fig2dev Version 3.1 Patchlevel 2
%%CreationDate: Tue Jun 29 16:26:56 1999
%%For: schapire@omega1.research.att.com (Robert Schapire)
%Magnification: 1.00
%%Orientation: Landscape
%%BoundingBox: 0 0 362 763
%%Pages: 0
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.761 0.894 1.000 srgb} bind def

end
save
-107.0 -12.0 translate
 90 rotate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n 0 612 m 0 0 l 792 0 l 792 612 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Polyline
n 1350 2400 m 4200 2400 l 4200 6000 l 1350 6000 l cp gs /PC [[1.00 0.88 0.88] [1.00 0.88 0.88]] def
15.00 15.00 sc P1 [16 0 0 -8 90.00 160.00] PATmp PATsp ef gr PATusp gs col30 s gr 
% Polyline
n 7650 2400 m 8400 2400 l 8400 6000 l 7650 6000 l cp gs /PC [[1.00 0.88 0.88] [1.00 0.88 0.88]] def
15.00 15.00 sc P1 [16 0 0 -8 510.00 160.00] PATmp PATsp ef gr PATusp gs col30 s gr 
% Polyline
n 4800 2400 m 7650 2400 l 7650 6000 l 4800 6000 l cp gs /PC [[0.53 0.81 1.00] [0.53 0.81 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 320.00 160.00] PATmp PATsp ef gr PATusp gs col11 s gr 
% Polyline
n 600 2400 m 1350 2400 l 1350 6000 l 600 6000 l cp gs /PC [[0.53 0.81 1.00] [0.53 0.81 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 160.00] PATmp PATsp ef gr PATusp gs col11 s gr 
30.000 slw
% Polyline
n 1500 5625 m 1800 5625 l gs col4 s gr 
% Polyline
n 825 4050 m 1125 4050 l gs col1 s gr 
% Polyline
n 3600 5100 m 3900 5100 l gs col4 s gr 
% Polyline
n 2475 4125 m 2775 4125 l gs col4 s gr 
% Polyline
n 3150 3450 m 3150 3150 l gs col1 s gr 
% Polyline
n 3600 3075 m 3900 3075 l gs col4 s gr 
% Polyline
n 2625 2850 m 2625 2550 l gs col1 s gr 
% Polyline
n 2475 2700 m 2775 2700 l gs col1 s gr 
% Polyline
n 1950 3300 m 1950 3000 l gs col1 s gr 
% Polyline
n 975 4200 m 975 3900 l gs col1 s gr 
% Polyline
n 3000 3300 m 3300 3300 l gs col1 s gr 
7.500 slw
% Polyline
n 600 2400 m 4200 2400 l 4200 6000 l 600 6000 l cp gs col-1 s gr 
30.000 slw
% Polyline
n 5325 5207 m 5325 4993 l gs col1 s gr 
% Polyline
n 1800 3150 m 2100 3150 l gs col1 s gr 
% Polyline
n 5186 4168 m 5186 3954 l gs col1 s gr 
% Polyline
n 5079 4061 m 5293 4061 l gs col1 s gr 
% Polyline
n 5893 3900 m 6107 3900 l gs col4 s gr 
% Polyline
n 5754 5604 m 5968 5604 l gs col4 s gr 
% Polyline
n 6729 4104 m 6943 4104 l gs col4 s gr 
% Polyline
n 7854 5079 m 8068 5079 l gs col4 s gr 
% Polyline
n 7854 3054 m 8068 3054 l gs col4 s gr 
% Polyline
n 975 5100 m 1275 5100 l gs col1 s gr 
% Polyline
n 1650 3900 m 1950 3900 l gs col4 s gr 
% Polyline
n 5900 3150 m 6400 3150 l gs col1 s gr 
% Polyline
n 5218 5100 m 5432 5100 l gs col1 s gr 
% Polyline
n 6825 2950 m 6825 2450 l gs col1 s gr 
% Polyline
n 6575 2700 m 7075 2700 l gs col1 s gr 
% Polyline
n 9950 3900 m 10450 3900 l gs col4 s gr 
% Polyline
n 10350 3309 m 10350 2991 l gs col1 s gr 
% Polyline
n 10191 3150 m 10509 3150 l gs col1 s gr 
% Polyline
n 6150 3400 m 6150 2900 l gs col1 s gr 
% Polyline
n 10880 2714 m 11198 2714 l gs col1 s gr 
% Polyline
n 11564 3473 m 11564 3155 l gs col1 s gr 
% Polyline
n 11405 3314 m 11723 3314 l gs col1 s gr 
% Polyline
n 9386 4129 m 9386 3993 l gs col1 s gr 
% Polyline
n 9318 4061 m 9454 4061 l gs col1 s gr 
% Polyline
n 9552 5195 m 9552 5059 l gs col1 s gr 
% Polyline
n 9484 5127 m 9620 5127 l gs col1 s gr 
% Polyline
n 12093 3054 m 12229 3054 l gs col4 s gr 
% Polyline
n 12109 5059 m 12245 5059 l gs col4 s gr 
% Polyline
n 10776 4101 m 11276 4101 l gs col4 s gr 
% Polyline
n 9801 5601 m 10301 5601 l gs col4 s gr 
7.500 slw
% Ellipse
n 6000 3900 168 168 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6825 4125 168 168 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 5850 5625 168 168 0 360 DrawEllipse gs col0 s gr

% Polyline
n 225 1800 m 12900 1800 l 12900 7800 l 225 7800 l cp gs col7 s gr 
30.000 slw
% Polyline
n 1350 2100 m 1350 6300 l gs col25 s gr 
% Polyline
n 7100 3300 m 7600 3300 l gs col1 s gr 
% Polyline
n 7350 3550 m 7350 3050 l gs col1 s gr 
7.500 slw
% Polyline
n 4800 2400 m 8400 2400 l 8400 6000 l 4800 6000 l cp gs col-1 s gr 
30.000 slw
% Polyline
n 7650 2100 m 7650 6300 l gs col25 s gr 
% Polyline
n 1125 5250 m 1125 4950 l gs col1 s gr 
% Polyline
n 11039 2873 m 11039 2555 l gs col1 s gr 
7.500 slw
% Polyline
n 9000 2400 m 12600 2400 l 12600 6000 l 9000 6000 l cp gs col-1 s gr 
/Symbol ff 360.00 scf sf
6150 7200 m
gs 1 -1 sc (a) col2 sh gr
/Symbol ff 360.00 scf sf
6150 6600 m
gs 1 -1 sc (e) col2 sh gr
/Times-Roman ff 360.00 scf sf
6300 6750 m
gs 1 -1 sc (2) col2 sh gr
/Times-Roman ff 360.00 scf sf
6375 7350 m
gs 1 -1 sc (2) col2 sh gr
/Times-Roman ff 360.00 scf sf
6525 6675 m
gs 1 -1 sc (=0.21) col2 sh gr
/Times-Roman ff 360.00 scf sf
6525 7200 m
gs 1 -1 sc (=0.65) col2 sh gr
/Times-Italic ff 360.00 scf sf
7725 2175 m
gs 1 -1 sc (h) col2 sh gr
/Times-Roman ff 360.00 scf sf
7875 2325 m
gs 1 -1 sc (2) col2 sh gr
/Times-Roman ff 360.00 scf sf
10950 2325 m
gs 1 -1 sc (3) col2 sh gr
/Times-Italic ff 360.00 scf sf
10725 2175 m
gs 1 -1 sc (D) col2 sh gr
$F2psEnd
rs
end

%%EndDocument

 endTexFig
 eop end
%%Page: 17 17
TeXDict begin @landscape 17 16 bop Blue Red -300 -101
806 34 v Blue White -304 -142 a Fv(R)n(ound)43 b(3)p
Blue White -798 w(R)n(ound)g(3)p Blue White -300 -146
a(R)n(ound)g(3)p Blue White -300 -138 a(R)n(ound)g(3)p
Blue -300 -142 a(R)n(ound)g(3)-300 644 y
 47362867 22260540 0 -23812997 50191482 0 startTexFig

 270 rotate
 -300 644 a
%%BeginDocument: /u/schapire/TALKS/ijcai99/toy-example/t4.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: t4.fig
%%Creator: fig2dev Version 3.1 Patchlevel 2
%%CreationDate: Tue Jun 29 16:25:25 1999
%%For: schapire@omega1.research.att.com (Robert Schapire)
%Magnification: 1.00
%%Orientation: Landscape
%%BoundingBox: 0 0 362 763
%%Pages: 0
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.761 0.894 1.000 srgb} bind def

end
save
-107.0 -12.0 translate
 90 rotate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n 0 612 m 0 0 l 792 0 l 792 612 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Polyline
n 7650 2400 m 8400 2400 l 8400 6000 l 7650 6000 l cp gs /PC [[1.00 0.88 0.88] [1.00 0.88 0.88]] def
15.00 15.00 sc P1 [16 0 0 -8 510.00 160.00] PATmp PATsp ef gr PATusp gs col30 s gr 
% Polyline
n 4800 2400 m 7650 2400 l 7650 6000 l 4800 6000 l cp gs /PC [[0.53 0.81 1.00] [0.53 0.81 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 320.00 160.00] PATmp PATsp ef gr PATusp gs col11 s gr 
% Polyline
n 600 2400 m 1350 2400 l 1350 6000 l 600 6000 l cp gs /PC [[0.53 0.81 1.00] [0.53 0.81 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 160.00] PATmp PATsp ef gr PATusp gs col11 s gr 
% Polyline
n 1350 2400 m 4200 2400 l 4200 6000 l 1350 6000 l cp gs /PC [[1.00 0.88 0.88] [1.00 0.88 0.88]] def
15.00 15.00 sc P1 [16 0 0 -8 90.00 160.00] PATmp PATsp ef gr PATusp gs col30 s gr 
% Polyline
n 9000 3525 m 12600 3525 l 12600 6000 l 9000 6000 l cp gs /PC [[1.00 0.88 0.88] [1.00 0.88 0.88]] def
15.00 15.00 sc P1 [16 0 0 -8 600.00 235.00] PATmp PATsp ef gr PATusp gs col30 s gr 
% Polyline
n 9000 2400 m 12600 2400 l 12600 3525 l 9000 3525 l cp gs /PC [[0.53 0.81 1.00] [0.53 0.81 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 600.00 160.00] PATmp PATsp ef gr PATusp gs col11 s gr 
30.000 slw
% Polyline
n 3600 5100 m 3900 5100 l gs col4 s gr 
% Polyline
n 2475 4125 m 2775 4125 l gs col4 s gr 
% Polyline
n 3150 3450 m 3150 3150 l gs col1 s gr 
% Polyline
n 3600 3075 m 3900 3075 l gs col4 s gr 
% Polyline
n 3000 3300 m 3300 3300 l gs col1 s gr 
% Polyline
n 2475 2700 m 2775 2700 l gs col1 s gr 
% Polyline
n 1950 3300 m 1950 3000 l gs col1 s gr 
% Polyline
n 1800 3150 m 2100 3150 l gs col1 s gr 
% Polyline
n 1650 3900 m 1950 3900 l gs col4 s gr 
% Polyline
n 2625 2850 m 2625 2550 l gs col1 s gr 
% Polyline
n 5325 5207 m 5325 4993 l gs col1 s gr 
7.500 slw
% Polyline
n 600 2400 m 4200 2400 l 4200 6000 l 600 6000 l cp gs col-1 s gr 
30.000 slw
% Polyline
n 5186 4168 m 5186 3954 l gs col1 s gr 
% Polyline
n 5079 4061 m 5293 4061 l gs col1 s gr 
% Polyline
n 5893 3900 m 6107 3900 l gs col4 s gr 
% Polyline
n 5754 5604 m 5968 5604 l gs col4 s gr 
% Polyline
n 6729 4104 m 6943 4104 l gs col4 s gr 
% Polyline
n 7854 5079 m 8068 5079 l gs col4 s gr 
% Polyline
n 7854 3054 m 8068 3054 l gs col4 s gr 
% Polyline
n 6150 3400 m 6150 2900 l gs col1 s gr 
% Polyline
n 1500 5625 m 1800 5625 l gs col4 s gr 
% Polyline
n 825 4050 m 1125 4050 l gs col1 s gr 
% Polyline
n 975 4200 m 975 3900 l gs col1 s gr 
% Polyline
n 975 5100 m 1275 5100 l gs col1 s gr 
% Polyline
n 7350 3550 m 7350 3050 l gs col1 s gr 
% Polyline
n 5218 5100 m 5432 5100 l gs col1 s gr 
% Polyline
n 10350 3309 m 10350 2991 l gs col1 s gr 
% Polyline
n 10191 3150 m 10509 3150 l gs col1 s gr 
% Polyline
n 5900 3150 m 6400 3150 l gs col1 s gr 
% Polyline
n 10880 2714 m 11198 2714 l gs col1 s gr 
% Polyline
n 11564 3473 m 11564 3155 l gs col1 s gr 
% Polyline
n 11405 3314 m 11723 3314 l gs col1 s gr 
% Polyline
n 9386 4129 m 9386 3993 l gs col1 s gr 
% Polyline
n 9318 4061 m 9454 4061 l gs col1 s gr 
% Polyline
n 9552 5195 m 9552 5059 l gs col1 s gr 
% Polyline
n 9484 5127 m 9620 5127 l gs col1 s gr 
% Polyline
n 12093 3054 m 12229 3054 l gs col4 s gr 
% Polyline
n 12109 5059 m 12245 5059 l gs col4 s gr 
% Polyline
n 10776 4101 m 11276 4101 l gs col4 s gr 
% Polyline
n 9801 5601 m 10301 5601 l gs col4 s gr 
/Times-Italic ff 360.00 scf sf
8625 3300 m
gs 1 -1 sc (h) col2 sh gr
/Times-Roman ff 360.00 scf sf
8775 3450 m
gs 1 -1 sc (3) col2 sh gr
7.500 slw
% Ellipse
n 12170 3056 124 124 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 9557 5138 124 124 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 9379 4059 124 124 0 360 DrawEllipse gs col0 s gr

% Polyline
n 225 1800 m 12900 1800 l 12900 7800 l 225 7800 l cp gs col7 s gr 
30.000 slw
% Polyline
n 1350 2100 m 1350 6300 l gs col25 s gr 
% Polyline
n 6825 2950 m 6825 2450 l gs col1 s gr 
% Polyline
n 7100 3300 m 7600 3300 l gs col1 s gr 
7.500 slw
% Polyline
n 4800 2400 m 8400 2400 l 8400 6000 l 4800 6000 l cp gs col-1 s gr 
30.000 slw
% Polyline
n 7650 2100 m 7650 6300 l gs col25 s gr 
% Polyline
n 9950 3900 m 10450 3900 l gs col4 s gr 
% Polyline
n 6575 2700 m 7075 2700 l gs col1 s gr 
7.500 slw
% Polyline
n 9000 2400 m 12600 2400 l 12600 6000 l 9000 6000 l cp gs col-1 s gr 
30.000 slw
% Polyline
n 8775 3525 m 12750 3525 l gs col25 s gr 
% Polyline
n 1125 5250 m 1125 4950 l gs col1 s gr 
% Polyline
n 11039 2873 m 11039 2555 l gs col1 s gr 
/Symbol ff 360.00 scf sf
10275 7200 m
gs 1 -1 sc (a) col2 sh gr
/Symbol ff 360.00 scf sf
10275 6600 m
gs 1 -1 sc (e) col2 sh gr
/Times-Roman ff 360.00 scf sf
10425 6750 m
gs 1 -1 sc (3) col2 sh gr
/Times-Roman ff 360.00 scf sf
10500 7350 m
gs 1 -1 sc (3) col2 sh gr
/Times-Roman ff 360.00 scf sf
10650 7200 m
gs 1 -1 sc (=0.92) col2 sh gr
/Times-Roman ff 360.00 scf sf
10650 6675 m
gs 1 -1 sc (=0.14) col2 sh gr
$F2psEnd
rs
end

%%EndDocument

 endTexFig
 eop end
%%Page: 18 18
TeXDict begin @landscape 18 17 bop Blue Red -300 -101
1433 34 v Blue White -304 -142 a Fv(F)-5 b(inal)44 b(Classi\002er)p
Blue White -1423 w(F)-5 b(inal)45 b(Classi\002er)p Blue
White -300 -146 a(F)-5 b(inal)45 b(Classi\002er)p Blue
White -300 -138 a(F)-5 b(inal)45 b(Classi\002er)p Blue
-300 -142 a(F)-5 b(inal)45 b(Classi\002er)-300 314 y
 47362867 27470454 0 -28878192 49599447 0 startTexFig

 270 rotate

-300 314 a
%%BeginDocument: /u/schapire/TALKS/ijcai99/toy-example/final.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: final.fig
%%Creator: fig2dev Version 3.1 Patchlevel 2
%%CreationDate: Wed Jun 30 11:43:32 1999
%%For: schapire@omega1.research.att.com (Robert Schapire)
%Magnification: 1.00
%%Orientation: Landscape
%%BoundingBox: 0 0 439 754
%%Pages: 0
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.761 0.894 1.000 srgb} bind def

end
save
-102.0 -36.0 translate
 90 rotate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n 0 612 m 0 0 l 792 0 l 792 612 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Polyline
n 4074 1931 m 5809 1931 l 5809 4122 l 4074 4122 l cp gs /PC [[1.00 0.88 0.88] [1.00 0.88 0.88]] def
15.00 15.00 sc P1 [16 0 0 -8 271.60 128.73] PATmp PATsp ef gr PATusp gs col30 s gr 
% Polyline
n 2700 5100 m 3450 5100 l 3450 8700 l 2700 8700 l cp gs /PC [[0.53 0.81 1.00] [0.53 0.81 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 180.00 340.00] PATmp PATsp ef gr PATusp gs col11 s gr 
% Polyline
n 10380 1954 m 12570 1954 l 12570 2639 l 10380 2639 l cp gs /PC [[0.53 0.81 1.00] [0.53 0.81 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 692.00 130.27] PATmp PATsp ef gr PATusp gs col11 s gr 
% Polyline
n 10380 2639 m 12570 2639 l 12570 4145 l 10380 4145 l cp gs /PC [[1.00 0.88 0.88] [1.00 0.88 0.88]] def
15.00 15.00 sc P1 [16 0 0 -8 692.00 175.93] PATmp PATsp ef gr PATusp gs col30 s gr 
% Polyline
n 3618 1931 m 4074 1931 l 4074 4122 l 3618 4122 l cp gs /PC [[0.53 0.81 1.00] [0.53 0.81 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 241.20 128.73] PATmp PATsp ef gr PATusp gs col11 s gr 
% Polyline
n 3450 5100 m 6300 5100 l 6300 8700 l 3450 8700 l cp gs /PC [[1.00 0.88 0.88] [1.00 0.88 0.88]] def
15.00 15.00 sc P1 [16 0 0 -8 230.00 340.00] PATmp PATsp ef gr PATusp gs col30 s gr 
% Polyline
n 6940 1931 m 8675 1931 l 8675 4122 l 6940 4122 l cp gs /PC [[0.53 0.81 1.00] [0.53 0.81 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 462.67 128.73] PATmp PATsp ef gr PATusp gs col11 s gr 
% Polyline
n 8675 1931 m 9131 1931 l 9131 4122 l 8675 4122 l cp gs /PC [[1.00 0.88 0.88] [1.00 0.88 0.88]] def
15.00 15.00 sc P1 [16 0 0 -8 578.33 128.73] PATmp PATsp ef gr PATusp gs col30 s gr 
% Polyline
n 2700 5100 m 5550 5100 l 5550 6225 l 2700 6225 l cp gs /PC [[0.53 0.81 1.00] [0.53 0.81 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 180.00 340.00] PATmp PATsp ef gr PATusp gs col11 s gr 
30.000 slw
% Polyline
n 8675 1748 m 8675 4305 l gs col25 s gr 
7.500 slw
% Polyline
n 6940 1931 m 9131 1931 l 9131 4122 l 6940 4122 l cp gs col-1 s gr 
30.000 slw
% Polyline
n 10242 2639 m 12662 2639 l gs col25 s gr 
% Polyline
n 3225 7950 m 3225 7650 l gs col1 s gr 
% Polyline
n 3075 7800 m 3375 7800 l gs col1 s gr 
% Polyline
n 3075 6900 m 3075 6600 l gs col1 s gr 
% Polyline
n 4074 1748 m 4074 4305 l gs col25 s gr 
% Polyline
n 3600 8325 m 3900 8325 l gs col4 s gr 
% Polyline
n 4575 6825 m 4875 6825 l gs col4 s gr 
7.500 slw
% Polyline
n 3618 1931 m 5809 1931 l 5809 4122 l 3618 4122 l cp gs col-1 s gr 
30.000 slw
% Polyline
n 5700 5775 m 6000 5775 l gs col4 s gr 
% Polyline
n 5250 6150 m 5250 5850 l gs col1 s gr 
% Polyline
n 5100 6000 m 5400 6000 l gs col1 s gr 
% Polyline
n 2925 6750 m 3225 6750 l gs col1 s gr 
% Polyline
n 4575 5400 m 4875 5400 l gs col1 s gr 
% Polyline
n 4050 6000 m 4050 5700 l gs col1 s gr 
% Polyline
n 3900 5850 m 4200 5850 l gs col1 s gr 
% Polyline
n 3750 6600 m 4050 6600 l gs col4 s gr 
/Times-Italic ff 360.00 scf sf
600 3300 m
gs 1 -1 sc (H) col2 sh gr
/Times-Roman ff 360.00 scf sf
825 3600 m
gs 1 -1 sc (final) col2 sh gr
% Arc
gs n 4735.5 2988.3 2041.9 -144.4 140.9 arcn
gs col2 s gr
 gr

% Arc
gs n 11089.5 2913.3 2041.9 -35.6 39.1 arc
gs col2 s gr
 gr

7.500 slw
% Polyline
n 10380 1954 m 12570 1954 l 12570 4145 l 10380 4145 l cp gs col-1 s gr 
30.000 slw
% Polyline
n 5700 7800 m 6000 7800 l gs col4 s gr 
7.500 slw
% Polyline
n 3450 4800 m 3450 9000 l gs col25 s gr 
% Polyline
n 5550 4800 m 5550 9000 l gs col25 s gr 
% Polyline
n 2475 6225 m 6450 6225 l gs col25 s gr 
30.000 slw
% Polyline
n 4725 5550 m 4725 5250 l gs col1 s gr 
7.500 slw
% Polyline
n 2700 5100 m 6300 5100 l 6300 8700 l 2700 8700 l cp gs col-1 s gr 
/Times-Roman ff 360.00 scf sf
9375 3300 m
gs 1 -1 sc (+ 0.92) col2 sh gr
/Times-Roman ff 360.00 scf sf
6000 3300 m
gs 1 -1 sc (+ 0.65) col2 sh gr
/Times-Roman ff 360.00 scf sf
2925 3300 m
gs 1 -1 sc (0.42) col2 sh gr
/Times-Roman ff 360.00 scf sf
1950 3300 m
gs 1 -1 sc (sign) col2 sh gr
/Times-Italic ff 360.00 scf sf
1650 3300 m
gs 1 -1 sc (=) col2 sh gr
/Times-Italic ff 360.00 scf sf
1650 6675 m
gs 1 -1 sc (=) col2 sh gr
$F2psEnd
rs
end

%%EndDocument

 endTexFig
 eop end
%%Page: 19 19
TeXDict begin @landscape 19 18 bop Blue Red -300 -99
2684 34 v Blue White -304 -141 a Fv(Analyzing)43 b(the)i(training)f
(err)o(or)p Blue White -2676 w(Analyzing)g(the)g(training)g(err)o(or)p
Blue White -300 -145 a(Analyzing)g(the)g(training)g(err)o(or)p
Blue White -300 -137 a(Analyzing)g(the)g(training)g(err)o(or)p
Blue -300 -141 a(Analyzing)g(the)g(training)g(err)o(or)p
Red -208 306 a Fs(\017)p Blue Red -56 331 853 17 v Blue
White 45 w Fu(Theor)l(em)p Blue White -843 w(Theor)l(em)p
Blue White -56 302 a(Theor)l(em)p Blue White -56 310
a(Theor)l(em)p Blue -56 306 a(Theor)l(em)q(:)p YellowOrange
38 597 a Fp(\017)p Blue 48 w Fu(wr)r(ite)p OliveGreen
47 w Fn(\017)765 632 y Fi(t)p Blue 876 597 a Fu(as)p
OliveGreen 47 w Fm(1)p Fn(=)p Fm(2)h Fs(\000)h Fn(\015)1769
632 y Fi(t)p Blue YellowOrange 38 846 a Fp(\017)p Blue
48 w Fu(then)p OliveGreen 1285 1195 a Fm(training)h(error\()p
Fn(H)2623 1243 y Fl(\014nal)2923 1195 y Fm(\))83 b Fs(\024)3323
1085 y Fg(Y)3346 1329 y Fi(t)3464 997 y Fg(2)3464 1146
y(4)3519 1195 y Fm(2)3614 1008 y Fg(s)p 3697 1008 787
4 v 187 x Fn(\017)3779 1230 y Fi(t)3843 1195 y Fm(\(1)46
b Fs(\000)g Fn(\017)4346 1230 y Fi(t)4410 1195 y Fm(\))4484
997 y Fg(3)4484 1146 y(5)3085 1695 y Fm(=)3323 1585 y
Fg(Y)3346 1830 y Fi(t)3464 1467 y Fg(v)3464 1514 y(u)3464
1564 y(u)3464 1614 y(t)p 3551 1467 642 4 v 3551 1695
a Fm(1)g Fs(\000)f Fm(4)p Fn(\015)4109 1624 y Fl(2)4098
1743 y Fi(t)3079 2212 y Fs(\024)83 b Fm(exp)3647 1964
y Fg(0)3647 2111 y(B)3647 2160 y(B)3647 2214 y(@)3720
2212 y Fs(\000)p Fm(2)4010 2102 y Fg(X)4039 2347 y Fi(t)4164
2212 y Fn(\015)4280 2127 y Fl(2)4269 2263 y Fi(t)4363
1964 y Fg(1)4363 2111 y(C)4363 2160 y(C)4363 2214 y(A)p
Blue Red -208 2893 a Fs(\017)p Blue 49 w Fu(so:)46 b(if)p
OliveGreen 47 w Fs(8)p Fn(t)57 b Fm(:)114 b Fn(\015)943
2928 y Fi(t)1066 2893 y Fs(\025)57 b Fn(\015)68 b(>)58
b Fm(0)p Blue 254 3171 a Fu(then)p OliveGreen 47 w Fm(training)47
b(error\()p Fn(H)2069 3220 y Fl(\014nal)2369 3171 y Fm(\))58
b Fs(\024)f Fn(e)2812 3096 y Fj(\000)p Fl(2)p Fi(\015)3121
3034 y Ff(2)3191 3096 y Fi(T)p Blue Red -208 3503 a Fs(\017)p
Blue Red -56 3528 1941 17 v Blue White 45 w Fu(A)n(daB)o(oost)46
b(is)h(adaptiv)o(e)p Blue White -1933 w(A)n(daB)o(oost)f(is)h(adaptiv)o
(e)p Blue White -56 3499 a(A)n(daB)o(oost)f(is)h(adaptiv)o(e)p
Blue White -56 3507 a(A)n(daB)o(oost)f(is)h(adaptiv)o(e)p
Blue -56 3503 a(A)n(daB)o(oost)f(is)h(adaptiv)o(e)o(:)p
YellowOrange 38 3794 a Fp(\017)p Blue 48 w Fu(does)p
Red 47 w(not)p Blue 46 w(need)g(to)f(kno)-6 b(w)p OliveGreen
47 w Fn(\015)p Blue 57 w Fu(or)p OliveGreen 47 w Fn(T)p
Blue 74 w Fu(a)47 b(pr)r(ior)r(i)p YellowOrange 38 4043
a Fp(\017)p Blue 48 w Fu(can)g(exploit)p OliveGreen 47
w Fn(\015)1335 4078 y Fi(t)1457 4043 y Fs(\035)57 b Fn(\015)p
Blue eop end
%%Page: 20 20
TeXDict begin @landscape 20 19 bop Blue Red -300 712
534 34 v Blue White -304 671 a Fv(P)n(r)o(oof)p Blue
White -527 w(P)n(r)o(oof)p Blue White -300 667 a(P)n(r)o(oof)p
Blue White -300 675 a(P)n(r)o(oof)p Blue -300 671 a(P)n(r)o(oof)p
Red -208 1117 a Fs(\017)p Blue 49 w Fu(let)p OliveGreen
46 w Fn(f)22 b Fm(\()p Fn(x)p Fm(\))58 b(=)872 1008 y
Fg(X)901 1252 y Fi(t)1026 1117 y Fn(\013)1155 1152 y
Fi(t)1220 1117 y Fn(h)1336 1152 y Fi(t)1401 1117 y Fm(\()p
Fn(x)p Fm(\))p Blue 47 w Fs(\))p OliveGreen 46 w Fn(H)2130
1166 y Fl(\014nal)2429 1117 y Fm(\()p Fn(x)p Fm(\))g(=)f(sign)o(\()p
Fn(f)22 b Fm(\()p Fn(x)p Fm(\)\))p Blue Red -208 1501
a Fs(\017)p Blue Red -56 1526 546 17 v Blue White 45
w Fe(S)-6 b(tep)46 b(1)p Blue White -537 w(S)-6 b(tep)46
b(1)p Blue White -56 1497 a(S)-6 b(tep)46 b(1)p Blue
White -56 1505 a(S)-6 b(tep)46 b(1)p Blue -56 1501 a(S)-6
b(tep)46 b(1)q Fu(:)57 b(unwr)n(apping)46 b(r)l(ecurr)l(ence:)p
OliveGreen 1347 2125 a Fn(D)1515 2173 y Fl(\014nal)1815
2125 y Fm(\()p Fn(i)p Fm(\))84 b(=)2396 1985 y(1)p 2355
2075 177 4 v 2355 2266 a Fn(m)2610 1914 y Fm(exp)2934
1666 y Fg(0)2934 1812 y(B)2934 1862 y(B)2934 1915 y(@)3006
1914 y Fs(\000)p Fn(y)3266 1956 y Fi(i)3362 1804 y Fg(X)3391
2048 y Fi(t)3516 1914 y Fn(\013)3645 1949 y Fi(t)3710
1914 y Fn(h)3826 1949 y Fi(t)3891 1914 y Fm(\()p Fn(x)4079
1956 y Fi(i)4141 1914 y Fm(\))4214 1666 y Fg(1)4214 1812
y(C)4214 1862 y(C)4214 1915 y(A)p 2610 2075 1678 4 v
3276 2157 a(Y)3299 2401 y Fi(t)3417 2266 y Fn(Z)3555
2301 y Fi(t)2114 2887 y Fm(=)2396 2747 y(1)p 2355 2837
177 4 v 2355 3029 a Fn(m)2610 2747 y Fm(exp)34 b(\()p
Fs(\000)p Fn(y)3267 2789 y Fi(i)3328 2747 y Fn(f)22 b
Fm(\()p Fn(x)3638 2789 y Fi(i)3699 2747 y Fm(\)\))p 2610
2837 1236 4 v 3055 2919 a Fg(Y)3078 3163 y Fi(t)3196
3029 y Fn(Z)3334 3063 y Fi(t)p Blue eop end
%%Page: 21 21
TeXDict begin @landscape 21 20 bop Blue Red -300 191
1220 34 v Blue White -304 149 a Fv(P)n(r)o(oof)42 b(\(cont)s(.\))p
Blue White -1211 w(P)n(r)o(oof)g(\(cont)s(.\))p Blue
White -300 145 a(P)n(r)o(oof)g(\(cont)s(.\))p Blue White
-300 153 a(P)n(r)o(oof)g(\(cont)s(.\))p Blue -300 149
a(P)n(r)o(oof)g(\(cont)s(.\))p Red -208 596 a Fs(\017)p
Blue Red -56 621 546 17 v Blue White 45 w Fe(S)-6 b(tep)46
b(2)p Blue White -537 w(S)-6 b(tep)46 b(2)p Blue White
-56 592 a(S)-6 b(tep)46 b(2)p Blue White -56 600 a(S)-6
b(tep)46 b(2)p Blue -56 596 a(S)-6 b(tep)46 b(2)q Fu(:)p
OliveGreen 57 w Fm(training)h(error\()p Fn(H)1940 645
y Fl(\014nal)2240 596 y Fm(\))57 b Fs(\024)2589 487 y
Fg(Y)2611 731 y Fi(t)2729 596 y Fn(Z)2867 631 y Fi(t)p
Blue Red -208 984 a Fs(\017)p Blue 49 w Fu(P)n(r)o(oof:)p
OliveGreen 727 1395 a Fm(training)47 b(error)q(\()p Fn(H)2066
1443 y Fl(\014nal)2365 1395 y Fm(\))90 b(=)2816 1255
y(1)p 2775 1345 177 4 v 2775 1537 a Fn(m)2996 1285 y
Fg(X)3028 1537 y Fi(i)3151 1094 y Fg(8)3151 1169 y(>)3151
1194 y(>)3151 1219 y(>)3151 1244 y(>)3151 1269 y(<)3151
1418 y(>)3151 1443 y(>)3151 1468 y(>)3151 1493 y(>)3151
1518 y(:)3266 1269 y Fm(1)p Blue 83 w Fu(if)p OliveGreen
46 w Fn(y)3715 1310 y Fi(i)3834 1269 y Fs(6)p Fm(=)57
b Fn(H)4208 1317 y Fl(\014nal)4508 1269 y Fm(\()p Fn(x)4696
1310 y Fi(i)4757 1269 y Fm(\))p Blue OliveGreen 3266
1518 a(0)p Blue 83 w Fu(else)p OliveGreen 2528 2016 a
Fm(=)2816 1877 y(1)p 2775 1966 V 2775 2158 a Fn(m)2996
1907 y Fg(X)3028 2158 y Fi(i)3151 1716 y Fg(8)3151 1790
y(>)3151 1815 y(>)3151 1840 y(>)3151 1865 y(>)3151 1890
y(<)3151 2039 y(>)3151 2064 y(>)3151 2089 y(>)3151 2114
y(>)3151 2139 y(:)3266 1890 y Fm(1)p Blue 83 w Fu(if)p
OliveGreen 46 w Fn(y)3715 1932 y Fi(i)3777 1890 y Fn(f)22
b Fm(\()p Fn(x)4087 1932 y Fi(i)4148 1890 y Fm(\))58
b Fs(\024)f Fm(0)p Blue OliveGreen 3266 2139 a(0)p Blue
83 w Fu(else)p OliveGreen 2522 2610 a Fs(\024)2816 2470
y Fm(1)p 2775 2560 V 2775 2752 a Fn(m)2996 2500 y Fg(X)3028
2751 y Fi(i)3151 2610 y Fm(exp)o(\()p Fs(\000)p Fn(y)3773
2652 y Fi(i)3835 2610 y Fn(f)22 b Fm(\()p Fn(x)4145 2652
y Fi(i)4206 2610 y Fm(\)\))2528 3038 y(=)2765 2928 y
Fg(X)2796 3179 y Fi(i)2920 3038 y Fn(D)3088 3086 y Fl(\014nal)3388
3038 y Fm(\()p Fn(i)p Fm(\))3603 2928 y Fg(Y)3625 3172
y Fi(t)3743 3038 y Fn(Z)3881 3072 y Fi(t)2528 3452 y
Fm(=)2765 3342 y Fg(Y)2788 3586 y Fi(t)2906 3452 y Fn(Z)3044
3487 y Fi(t)p Blue eop end
%%Page: 22 22
TeXDict begin @landscape 22 21 bop Blue Red -300 608
1220 34 v Blue White -304 566 a Fv(P)n(r)o(oof)42 b(\(cont)s(.\))p
Blue White -1211 w(P)n(r)o(oof)g(\(cont)s(.\))p Blue
White -300 562 a(P)n(r)o(oof)g(\(cont)s(.\))p Blue White
-300 570 a(P)n(r)o(oof)g(\(cont)s(.\))p Blue -300 566
a(P)n(r)o(oof)g(\(cont)s(.\))p Red -208 1013 a Fs(\017)p
Blue Red -56 1038 546 17 v Blue White 45 w Fe(S)-6 b(tep)46
b(3)p Blue White -537 w(S)-6 b(tep)46 b(3)p Blue White
-56 1009 a(S)-6 b(tep)46 b(3)p Blue White -56 1017 a(S)-6
b(tep)46 b(3)p Blue -56 1013 a(S)-6 b(tep)46 b(3)q Fu(:)p
OliveGreen 57 w Fn(Z)740 1048 y Fi(t)863 1013 y Fm(=)57
b(2)1164 837 y Fg(s)p 1247 837 787 4 v 176 x Fn(\017)1329
1048 y Fi(t)1393 1013 y Fm(\(1)46 b Fs(\000)g Fn(\017)1896
1048 y Fi(t)1960 1013 y Fm(\))p Blue Red -208 1346 a
Fs(\017)p Blue 49 w Fu(P)n(r)o(oof:)p OliveGreen 852
1694 a Fn(Z)990 1729 y Fi(t)1139 1694 y Fm(=)1371 1585
y Fg(X)1402 1836 y Fi(i)1525 1694 y Fn(D)1693 1729 y
Fi(t)1758 1694 y Fm(\()p Fn(i)p Fm(\))34 b(exp\()p Fs(\000)p
Fn(\013)2660 1729 y Fi(t)2782 1694 y Fn(y)2881 1736 y
Fi(i)3000 1694 y Fn(h)3116 1729 y Fi(t)3181 1694 y Fm(\()p
Fn(x)3369 1736 y Fi(i)3431 1694 y Fm(\)\))1139 2153 y(=)1701
2043 y Fg(X)1371 2311 y Fi(i)p Fl(:)p Fi(y)1554 2345
y Fh(i)1605 2311 y Fj(6)p Fl(=)p Fi(h)1826 2340 y Fh(t)1881
2311 y Fl(\()p Fi(x)2038 2345 y Fh(i)2090 2311 y Fl(\))2186
2153 y Fn(D)2354 2188 y Fi(t)2419 2153 y Fm(\()p Fn(i)p
Fm(\))p Fn(e)2728 2068 y Fi(\013)2835 2097 y Fh(t)2940
2153 y Fm(+)3465 2043 y Fg(X)3134 2311 y Fi(i)p Fl(:)p
Fi(y)3317 2345 y Fh(i)3369 2311 y Fl(=)p Fi(h)3590 2340
y Fh(t)3645 2311 y Fl(\()p Fi(x)3802 2345 y Fh(i)3854
2311 y Fl(\))3949 2153 y Fn(D)4117 2188 y Fi(t)4182 2153
y Fm(\()p Fn(i)p Fm(\))p Fn(e)4491 2068 y Fj(\000)p Fi(\013)4732
2097 y Fh(t)1139 2671 y Fm(=)83 b Fn(\017)1453 2706 y
Fi(t)1575 2671 y Fn(e)1669 2585 y Fi(\013)1776 2614 y
Fh(t)1881 2671 y Fm(+)45 b(\(1)h Fs(\000)g Fn(\017)2578
2706 y Fi(t)2642 2671 y Fm(\))58 b Fn(e)2867 2585 y Fj(\000)p
Fi(\013)3108 2614 y Fh(t)1139 3035 y Fm(=)83 b(2)1466
2847 y Fg(s)p 1548 2847 V 1548 3035 a Fn(\017)1630 3069
y Fi(t)1695 3035 y Fm(\(1)46 b Fs(\000)f Fn(\017)2197
3069 y Fi(t)2262 3035 y Fm(\))p Blue eop end
%%Page: 23 23
TeXDict begin @landscape 23 22 bop Blue Red -300 -25
4136 34 v Blue White -304 -67 a Fv(H)-6 b(o)g(w)42 b(W)q(ill)h(T)-17
b(est)45 b(E)o(rr)o(or)e(B)o(ehav)m(e?)55 b(\(A)43 b(F)-5
b(irst)45 b(G)n(uess\))p Blue White -4127 w(H)-6 b(o)g(w)43
b(W)q(ill)g(T)-17 b(est)44 b(E)o(rr)o(or)f(B)o(ehav)m(e?)55
b(\(A)44 b(F)-5 b(irst)45 b(G)n(uess\))p Blue White -300
-71 a(H)-6 b(o)g(w)42 b(W)q(ill)h(T)-17 b(est)45 b(E)o(rr)o(or)e(B)o
(ehav)m(e?)55 b(\(A)44 b(F)-5 b(irst)45 b(G)n(uess\))p
Blue White -300 -63 a(H)-6 b(o)g(w)42 b(W)q(ill)h(T)-17
b(est)45 b(E)o(rr)o(or)e(B)o(ehav)m(e?)55 b(\(A)44 b(F)-5
b(irst)45 b(G)n(uess\))p Blue -300 -67 a(H)-6 b(o)g(w)42
b(W)q(ill)h(T)-17 b(est)45 b(E)o(rr)o(or)e(B)o(ehav)m(e?)55
b(\(A)44 b(F)-5 b(irst)45 b(G)n(uess\))1200 181 y
 23681433 15629742 0 0 32693534 21707980 startTexFig
 1200
181 a
%%BeginDocument: /u/schapire/TALKS/ijcai99/naive.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: naive.eps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Wed Jun 30 14:01:59 1999
%%For: schapire@spare.research.att.com (Robert Schapire)
%%Orientation: Portrait
%%BoundingBox: 0 0 497 330
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-121.0 491.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 9175 m -1000 -1000 l 11289 -1000 l 11289 9175 l cp clip
 0.06000 0.06000 sc
% Polyline
%
% Begin Imported EPS File: naive-raw.eps
%%BeginDocument: naive-raw.eps
%
n gs
2475 2700 tr
16.635394 -16.616438 sc
0 -292 tr
-72 -250 tr
sa
n 72 250 m 541 250 l 541 542 l 72 542 l cp clip
countdictstack
mark
/showpage {} def
% EPS file follows:
%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 72 250 541 542
%%Creator: Mathematica
%%CreationDate: Mon Apr 14 15:56:38 EDT 1997
%%EndComments

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

%%AspectRatio: .61803 
MathPictureStart
%% Graphics
/Helvetica findfont 24  scalefont  setfont
% Scaling calculations
0.0238095 0.00952381 0.0147151 0.588604 [
[(20)] .21429 .01472 0 2 Msboxa
[(40)] .40476 .01472 0 2 Msboxa
[(60)] .59524 .01472 0 2 Msboxa
[(80)] .78571 .01472 0 2 Msboxa
[(100)] .97619 .01472 0 2 Msboxa
[(0.2)] .01131 .13244 1 0 Msboxa
[(0.4)] .01131 .25016 1 0 Msboxa
[(0.6)] .01131 .36788 1 0 Msboxa
[(0.8)] .01131 .4856 1 0 Msboxa
[(1)] .01131 .60332 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.21429 .01472 m
.21429 .02097 L
s
P
[(20)] .21429 .01472 0 2 Mshowa
p
.002 w
.40476 .01472 m
.40476 .02097 L
s
P
[(40)] .40476 .01472 0 2 Mshowa
p
.002 w
.59524 .01472 m
.59524 .02097 L
s
P
[(60)] .59524 .01472 0 2 Mshowa
p
.002 w
.78571 .01472 m
.78571 .02097 L
s
P
[(80)] .78571 .01472 0 2 Mshowa
p
.002 w
.97619 .01472 m
.97619 .02097 L
s
P
[(100)] .97619 .01472 0 2 Mshowa
p
.001 w
.0619 .01472 m
.0619 .01847 L
s
P
p
.001 w
.1 .01472 m
.1 .01847 L
s
P
p
.001 w
.1381 .01472 m
.1381 .01847 L
s
P
p
.001 w
.17619 .01472 m
.17619 .01847 L
s
P
p
.001 w
.25238 .01472 m
.25238 .01847 L
s
P
p
.001 w
.29048 .01472 m
.29048 .01847 L
s
P
p
.001 w
.32857 .01472 m
.32857 .01847 L
s
P
p
.001 w
.36667 .01472 m
.36667 .01847 L
s
P
p
.001 w
.44286 .01472 m
.44286 .01847 L
s
P
p
.001 w
.48095 .01472 m
.48095 .01847 L
s
P
p
.001 w
.51905 .01472 m
.51905 .01847 L
s
P
p
.001 w
.55714 .01472 m
.55714 .01847 L
s
P
p
.001 w
.63333 .01472 m
.63333 .01847 L
s
P
p
.001 w
.67143 .01472 m
.67143 .01847 L
s
P
p
.001 w
.70952 .01472 m
.70952 .01847 L
s
P
p
.001 w
.74762 .01472 m
.74762 .01847 L
s
P
p
.001 w
.82381 .01472 m
.82381 .01847 L
s
P
p
.001 w
.8619 .01472 m
.8619 .01847 L
s
P
p
.001 w
.9 .01472 m
.9 .01847 L
s
P
p
.001 w
.9381 .01472 m
.9381 .01847 L
s
P
p
[ 0 1 ] 0 setdash
.002 w
0 .01472 m
1 .01472 L
s
P
p
.002 w
.02381 .13244 m
.03006 .13244 L
s
P
[(0.2)] .01131 .13244 1 0 Mshowa
p
.002 w
.02381 .25016 m
.03006 .25016 L
s
P
[(0.4)] .01131 .25016 1 0 Mshowa
p
.002 w
.02381 .36788 m
.03006 .36788 L
s
P
[(0.6)] .01131 .36788 1 0 Mshowa
p
.002 w
.02381 .4856 m
.03006 .4856 L
s
P
[(0.8)] .01131 .4856 1 0 Mshowa
p
.002 w
.02381 .60332 m
.03006 .60332 L
s
P
[(1)] .01131 .60332 1 0 Mshowa
p
.001 w
.02381 .03826 m
.02756 .03826 L
s
P
p
.001 w
.02381 .0618 m
.02756 .0618 L
s
P
p
.001 w
.02381 .08535 m
.02756 .08535 L
s
P
p
.001 w
.02381 .10889 m
.02756 .10889 L
s
P
p
.001 w
.02381 .15598 m
.02756 .15598 L
s
P
p
.001 w
.02381 .17952 m
.02756 .17952 L
s
P
p
.001 w
.02381 .20307 m
.02756 .20307 L
s
P
p
.001 w
.02381 .22661 m
.02756 .22661 L
s
P
p
.001 w
.02381 .2737 m
.02756 .2737 L
s
P
p
.001 w
.02381 .29724 m
.02756 .29724 L
s
P
p
.001 w
.02381 .32079 m
.02756 .32079 L
s
P
p
.001 w
.02381 .34433 m
.02756 .34433 L
s
P
p
.001 w
.02381 .39142 m
.02756 .39142 L
s
P
p
.001 w
.02381 .41497 m
.02756 .41497 L
s
P
p
.001 w
.02381 .43851 m
.02756 .43851 L
s
P
p
.001 w
.02381 .46205 m
.02756 .46205 L
s
P
p
.001 w
.02381 .50914 m
.02756 .50914 L
s
P
p
.001 w
.02381 .53269 m
.02756 .53269 L
s
P
p
.001 w
.02381 .55623 m
.02756 .55623 L
s
P
p
.001 w
.02381 .57977 m
.02756 .57977 L
s
P
p
[ 0 1 ] 0 setdash
.002 w
.02381 0 m
.02381 .61803 L
s
P
P
p
p
p
.004 w
.02381 .60332 m
.04365 .44523 L
.05357 .3818 L
.06349 .3306 L
.07341 .28958 L
.08333 .25693 L
.09325 .23111 L
.10317 .21085 L
.1131 .19509 L
.12302 .18299 L
.13294 .17384 L
.14286 .16708 L
.14782 .16445 L
.15278 .16224 L
.15774 .16043 L
.1627 .15896 L
.16766 .15779 L
.17262 .15691 L
.1751 .15656 L
.17758 .15627 L
.18006 .15604 L
.18254 .15586 L
.18378 .15579 L
.18502 .15573 L
.18626 .15568 L
.1875 .15565 L
.18874 .15562 L
.18998 .15561 L
.19122 .1556 L
.19246 .15561 L
.1937 .15563 L
.19494 .15565 L
.19618 .15569 L
.19742 .15573 L
.20238 .15599 L
.20486 .15617 L
.20734 .15638 L
.2123 .15688 L
.22222 .15817 L
.24206 .16162 L
.2619 .16583 L
.30159 .17538 L
.34127 .18538 L
.38095 .19526 L
.42063 .20483 L
.46032 .21402 L
.5 .22284 L
.53968 .23133 L
.57937 .2395 L
.61905 .24738 L
Mistroke
.65873 .25501 L
.69841 .26241 L
.7381 .26959 L
.77778 .27657 L
.81746 .28337 L
.85714 .29001 L
.89683 .29649 L
.93651 .30282 L
.97619 .30902 L
Mfstroke
P
P
p
p
.004 w
.02381 .60332 m
.03373 .49262 L
.04365 .40275 L
.05357 .32977 L
.06349 .27052 L
.08333 .18335 L
.09325 .15164 L
.10317 .12589 L
.1131 .10498 L
.12302 .088 L
.14286 .06303 L
.15278 .05394 L
.1627 .04657 L
.17262 .04058 L
.18254 .03571 L
.20238 .02856 L
.2123 .02595 L
.22222 .02384 L
.23214 .02212 L
.24206 .02073 L
.25198 .0196 L
.2619 .01868 L
.28175 .01733 L
.29167 .01684 L
.30159 .01644 L
.31151 .01611 L
.32143 .01585 L
.34127 .01546 L
.35119 .01532 L
.36111 .01521 L
.37103 .01512 L
.38095 .01504 L
.40079 .01493 L
.41071 .01489 L
.42063 .01486 L
.43056 .01483 L
.44048 .01481 L
.4504 .01479 L
.46032 .01478 L
.48016 .01476 L
.49008 .01475 L
.5 .01474 L
.50992 .01474 L
.51984 .01473 L
.52976 .01473 L
.53968 .01473 L
.55952 .01472 L
.56944 .01472 L
.57937 .01472 L
.58929 .01472 L
Mistroke
.59921 .01472 L
.60913 .01472 L
.61905 .01472 L
.63889 .01472 L
.64881 .01472 L
.65873 .01472 L
.66865 .01472 L
.67857 .01472 L
.68849 .01472 L
.69841 .01472 L
.71825 .01472 L
.72817 .01472 L
.7381 .01472 L
.74802 .01472 L
.75794 .01472 L
.76786 .01472 L
.77778 .01472 L
.79762 .01472 L
.80754 .01472 L
.81746 .01472 L
.82738 .01472 L
.8373 .01472 L
.84722 .01472 L
.85714 .01472 L
.87698 .01472 L
.8869 .01472 L
.89683 .01472 L
.90675 .01472 L
.91667 .01472 L
.92659 .01472 L
.93651 .01472 L
.94643 .01472 L
.95635 .01472 L
.97619 .01472 L
Mfstroke
P
P
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
% End of Graphics
MathPictureEnd
end
showpage
cleartomark
countdictstack exch sub { end } repeat
restore grestore
%
% End Imported PIC File: naive-raw.eps
%%EndDocument
%
/Times-Roman ff 540.00 scf sf
4500 8175 m
gs 1 -1 sc (# of rounds \() col1 sh gr
/Times-Roman ff 540.00 scf sf
2250 5700 m
gs 1 -1 sc  90.0 rot (error) col1 sh gr
/Times-Italic ff 540.00 scf sf
7200 8175 m
gs 1 -1 sc (T) col2 sh gr
/Times-Roman ff 540.00 scf sf
7500 8175 m
gs 1 -1 sc (\)) col1 sh gr
/Times-Roman ff 540.00 scf sf
4500 6900 m
gs 1 -1 sc (train) col1 sh gr
/Times-Roman ff 540.00 scf sf
5100 5700 m
gs 1 -1 sc (test) col1 sh gr
$F2psEnd
rs

%%EndDocument

 endTexFig
 Red -300 2543 612 17 v Blue White -304 2518 a Fu(expect)p
Blue White -603 w(expect)p Blue White -300 2514 a(expect)p
Blue White -300 2522 a(expect)p Blue -300 2518 a(expect)q(:)p
Red -208 2850 a Fs(\017)p Blue 49 w Fu(tr)n(aining)i(err)o(or)h(to)e
(continue)i(to)e(dr)o(op)g(\(or)i(r)l(each)f(z)o(er)o(o\))p
Red -208 3182 a Fs(\017)p Blue 49 w Fu(test)g(err)o(or)g(to)p
Red 1077 3207 778 17 v Blue White 43 w(incr)l(ease)p
Blue White -768 w(incr)l(ease)p Blue White 1077 3178
a(incr)l(ease)p Blue White 1077 3186 a(incr)l(ease)p
Blue 1077 3182 a(incr)l(ease)h(when)p OliveGreen 46 w
Fn(H)2633 3231 y Fl(\014nal)p Blue 2979 3182 a Fu(becomes)f(\223)-8
b(too)46 b(complex)n(\224)p YellowOrange 38 3473 a Fp(\017)p
Blue 48 w Fu(\223)p Red 253 3498 1299 17 v Blue White
-4 w(O)o(ccam)-17 b(')-23 b(s)48 b(r)n(az)o(or)p Blue
White -1289 w(O)o(ccam)-17 b(')-23 b(s)49 b(r)n(az)o(or)p
Blue White 253 3469 a(O)o(ccam)-17 b(')-23 b(s)49 b(r)n(az)o(or)p
Blue White 253 3477 a(O)o(ccam)-17 b(')-23 b(s)49 b(r)n(az)o(or)p
Blue 253 3473 a(O)o(ccam)-17 b(')-23 b(s)49 b(r)n(az)o(or\224)p
YellowOrange 38 3722 a Fp(\017)p Blue Red 158 3747 968
17 v Blue White 44 w Fu(o)-6 b(v)o(er)r(\002tting)p Blue
White -958 w(o)g(v)o(er)r(\002tting)p Blue White 158
3718 a(o)g(v)o(er)r(\002tting)p Blue White 158 3726 a(o)g(v)o(er)r
(\002tting)p Blue 158 3722 a(o)g(v)o(er)r(\002tting)p
Goldenrod 220 3992 a Fp(\017)p Blue 49 w Fu(har)l(d)47
b(to)f(kno)-6 b(w)46 b(when)h(to)g(stop)f(tr)n(aining)p
eop end
%%Page: 24 24
TeXDict begin @landscape 24 23 bop Blue Red -300 -101
1795 34 v Blue White -304 -142 a Fv(A)n(ctual)43 b(T)-15
b(ypical)44 b(R)n(un)p Blue White -1787 w(A)n(ctual)g(T)-15
b(ypical)43 b(R)n(un)p Blue White -300 -146 a(A)n(ctual)h(T)-15
b(ypical)43 b(R)n(un)p Blue White -300 -138 a(A)n(ctual)h(T)-15
b(ypical)43 b(R)n(un)p Blue -300 -142 a(A)n(ctual)h(T)-15
b(ypical)43 b(R)n(un)1500 108 y
 18944857 12314150 0 0 32167280 21115944 startTexFig
 1500 108 a
%%BeginDocument: PS/letter-err.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: letter-err.eps
%%Creator: fig2dev Version 3.2.3 Patchlevel 
%%CreationDate: Tue Jan 22 13:20:26 2002
%%For: schapire@harpo.research.att.com (Robert Schapire,,0112620)
%%BoundingBox: 0 0 489 321
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 321 moveto 0 0 lineto 489 0 lineto 489 321 lineto closepath clip newpath
-152.0 491.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
%
% Begin Imported EPS File: letter-err-raw.eps
%%BeginDocument: letter-err-raw.eps
%
n gs
2850 2850 tr
16.634043 -16.616438 sc
0 -292 tr
-71 -250 tr
sa
n 71 250 m 541 250 l 541 542 l 71 542 l cp clip n
countdictstack
mark
/showpage {} def
% EPS file follows:
%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 71 250 541 542
%%Creator: Mathematica
%%CreationDate: Tue Jan 21 13:44:15 EST 1997
%%EndComments

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

%%AspectRatio: .61803 
MathPictureStart
%% Graphics
/Helvetica findfont 24  scalefont  setfont
% Scaling calculations
0 0.333333 0 0.0309017 [
[(10)] .33333 0 0 2 Msboxa
[(100)] .66667 0 0 2 Msboxa
[(1000)] 1 0 0 2 Msboxa
[(0)] -0.0125 0 1 0 Msboxa
[()] -0.0125 .07725 1 0 Msboxa
[(5)] -0.0125 .15451 1 0 Msboxa
[()] -0.0125 .23176 1 0 Msboxa
[(10)] -0.0125 .30902 1 0 Msboxa
[()] -0.0125 .38627 1 0 Msboxa
[(15)] -0.0125 .46353 1 0 Msboxa
[()] -0.0125 .54078 1 0 Msboxa
[(20)] -0.0125 .61803 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
0 0 .5 r
.001 w
0 .0958 m
1 .0958 L
s
P
p
0 0 .5 r
.001 w
0 .42722 m
1 .42722 L
s
P
p
.002 w
.10034 0 m
.10034 .00625 L
s
P
p
.002 w
.15904 0 m
.15904 .00625 L
s
P
p
.002 w
.20069 0 m
.20069 .00625 L
s
P
p
.002 w
.23299 0 m
.23299 .00625 L
s
P
p
.002 w
.25938 0 m
.25938 .00625 L
s
P
p
.002 w
.2817 0 m
.2817 .00625 L
s
P
p
.002 w
.30103 0 m
.30103 .00625 L
s
P
p
.002 w
.31808 0 m
.31808 .00625 L
s
P
p
.002 w
.33333 0 m
.33333 .00625 L
s
P
[(10)] .33333 0 0 2 Mshowa
p
.002 w
.43368 0 m
.43368 .00625 L
s
P
p
.002 w
.49237 0 m
.49237 .00625 L
s
P
p
.002 w
.53402 0 m
.53402 .00625 L
s
P
p
.002 w
.56632 0 m
.56632 .00625 L
s
P
p
.002 w
.59272 0 m
.59272 .00625 L
s
P
p
.002 w
.61503 0 m
.61503 .00625 L
s
P
p
.002 w
.63436 0 m
.63436 .00625 L
s
P
p
.002 w
.65141 0 m
.65141 .00625 L
s
P
p
.002 w
.66667 0 m
.66667 .00625 L
s
P
[(100)] .66667 0 0 2 Mshowa
p
.002 w
.76701 0 m
.76701 .00625 L
s
P
p
.002 w
.82571 0 m
.82571 .00625 L
s
P
p
.002 w
.86735 0 m
.86735 .00625 L
s
P
p
.002 w
.89966 0 m
.89966 .00625 L
s
P
p
.002 w
.92605 0 m
.92605 .00625 L
s
P
p
.002 w
.94837 0 m
.94837 .00625 L
s
P
p
.002 w
.9677 0 m
.9677 .00625 L
s
P
p
.002 w
.98475 0 m
.98475 .00625 L
s
P
p
.002 w
1 0 m
1 .00625 L
s
P
[(1000)] 1 0 0 2 Mshowa
p
[ 0 1 ] 0 setdash
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 0 m
.00625 0 L
s
P
[(0)] -0.0125 0 1 0 Mshowa
p
.002 w
0 .07725 m
.00625 .07725 L
s
P
[()] -0.0125 .07725 1 0 Mshowa
p
.002 w
0 .15451 m
.00625 .15451 L
s
P
[(5)] -0.0125 .15451 1 0 Mshowa
p
.002 w
0 .23176 m
.00625 .23176 L
s
P
[()] -0.0125 .23176 1 0 Mshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(10)] -0.0125 .30902 1 0 Mshowa
p
.002 w
0 .38627 m
.00625 .38627 L
s
P
[()] -0.0125 .38627 1 0 Mshowa
p
.002 w
0 .46353 m
.00625 .46353 L
s
P
[(15)] -0.0125 .46353 1 0 Mshowa
p
.002 w
0 .54078 m
.00625 .54078 L
s
P
[()] -0.0125 .54078 1 0 Mshowa
p
.002 w
0 .61803 m
.00625 .61803 L
s
P
[(20)] -0.0125 .61803 1 0 Mshowa
p
.001 w
0 .01545 m
.00375 .01545 L
s
P
p
.001 w
0 .0309 m
.00375 .0309 L
s
P
p
.001 w
0 .04635 m
.00375 .04635 L
s
P
p
.001 w
0 .0618 m
.00375 .0618 L
s
P
p
.001 w
0 .09271 m
.00375 .09271 L
s
P
p
.001 w
0 .10816 m
.00375 .10816 L
s
P
p
.001 w
0 .12361 m
.00375 .12361 L
s
P
p
.001 w
0 .13906 m
.00375 .13906 L
s
P
p
.001 w
0 .16996 m
.00375 .16996 L
s
P
p
.001 w
0 .18541 m
.00375 .18541 L
s
P
p
.001 w
0 .20086 m
.00375 .20086 L
s
P
p
.001 w
0 .21631 m
.00375 .21631 L
s
P
p
.001 w
0 .24721 m
.00375 .24721 L
s
P
p
.001 w
0 .26266 m
.00375 .26266 L
s
P
p
.001 w
0 .27812 m
.00375 .27812 L
s
P
p
.001 w
0 .29357 m
.00375 .29357 L
s
P
p
.001 w
0 .32447 m
.00375 .32447 L
s
P
p
.001 w
0 .33992 m
.00375 .33992 L
s
P
p
.001 w
0 .35537 m
.00375 .35537 L
s
P
p
.001 w
0 .37082 m
.00375 .37082 L
s
P
p
.001 w
0 .40172 m
.00375 .40172 L
s
P
p
.001 w
0 .41717 m
.00375 .41717 L
s
P
p
.001 w
0 .43262 m
.00375 .43262 L
s
P
p
.001 w
0 .44807 m
.00375 .44807 L
s
P
p
.001 w
0 .47898 m
.00375 .47898 L
s
P
p
.001 w
0 .49443 m
.00375 .49443 L
s
P
p
.001 w
0 .50988 m
.00375 .50988 L
s
P
p
.001 w
0 .52533 m
.00375 .52533 L
s
P
p
.001 w
0 .55623 m
.00375 .55623 L
s
P
p
.001 w
0 .57168 m
.00375 .57168 L
s
P
p
.001 w
0 .58713 m
.00375 .58713 L
s
P
p
.001 w
0 .60258 m
.00375 .60258 L
s
P
p
[ 0 1 ] 0 setdash
.002 w
0 0 m
0 .61803 L
s
P
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
p
.004 w
0 .2449 m
.12063 .32505 L
.1855 .00425 L
.23013 0 L
.2642 0 L
.3149 0 L
.35238 0 L
.44624 0 L
.54322 0 L
.64186 0 L
.69998 0 L
.74134 0 L
.77347 0 L
.79975 0 L
.82198 0 L
.84125 0 L
.85825 0 L
.87347 0 L
.88723 0 L
.8998 0 L
.91137 0 L
.92208 0 L
.93205 0 L
.94138 0 L
.95014 0 L
.9584 0 L
.96622 0 L
.97364 0 L
.98069 0 L
.98742 0 L
.99385 0 L
1 0 L
s
P
P
P
p
p
p
.004 w
0 .54928 m
.12063 .58868 L
.1855 .29202 L
.2642 .22713 L
.3149 .18 L
.33485 .16764 L
.35238 .15374 L
.36801 .14678 L
.38212 .14447 L
.39498 .14447 L
.40678 .14292 L
.4177 .14447 L
.42785 .1406 L
.44624 .13442 L
.4772 .12206 L
.48401 .11665 L
.49051 .11974 L
.49674 .1182 L
.5027 .11434 L
.50843 .11434 L
.51394 .11279 L
.51925 .11356 L
.52438 .11279 L
.52932 .10816 L
.5341 .10507 L
.53873 .10816 L
.54322 .11202 L
.54757 .11202 L
.5518 .11047 L
.55989 .11125 L
.56378 .11202 L
.56756 .11434 L
.57125 .11588 L
.57484 .11279 L
.57835 .11665 L
.58178 .11356 L
.58512 .11202 L
.58839 .11356 L
.59159 .11202 L
.59472 .11202 L
.59778 .11356 L
.60078 .1097 L
.60372 .11202 L
.6066 .11125 L
.60942 .10584 L
.61219 .10738 L
.61491 .1097 L
.61758 .10893 L
.6202 .10584 L
.62277 .10507 L
Mistroke
.6253 .10507 L
.62778 .10507 L
.63023 .10816 L
.63263 .10661 L
.63499 .10584 L
.63732 .10584 L
.6396 .10275 L
.64186 .10352 L
.64407 .10352 L
.64626 .10507 L
.64841 .10429 L
.65053 .10507 L
.65262 .10275 L
.65468 .10352 L
.65671 .10275 L
.65872 .10661 L
.66069 .10584 L
.66264 .10429 L
.66456 .10352 L
.66646 .10275 L
.66834 .10275 L
.67019 .10275 L
.67382 .10198 L
.67736 .1012 L
.6791 .10043 L
.68081 .10043 L
.68251 .10275 L
.68419 .10429 L
.68749 .10429 L
.68911 .10352 L
.69071 .10429 L
.6923 .10507 L
.69387 .10584 L
.69542 .10429 L
.69696 .10429 L
.69848 .10198 L
.69998 .10198 L
.70147 .1012 L
.70294 .1012 L
.7044 .1012 L
.70584 .1012 L
.70869 .09966 L
.71009 .09889 L
.71148 .09811 L
.71285 .09811 L
.71422 .09811 L
.71557 .09966 L
.7169 .10043 L
.71954 .10043 L
.72084 .10043 L
Mistroke
.72213 .10043 L
.72341 .1012 L
.72468 .09966 L
.72593 .1012 L
.72718 .10198 L
.72841 .10275 L
.72964 .09966 L
.73085 .10429 L
.73205 .10429 L
.73325 .10275 L
.73443 .10043 L
.73561 .1012 L
.73677 .09966 L
.73793 .09734 L
.73907 .09811 L
.74021 .09811 L
.74134 .09966 L
.74246 .09734 L
.74357 .09734 L
.74467 .09657 L
.74577 .09889 L
.74685 .10198 L
.74793 .09811 L
.75006 .09811 L
.75112 .09734 L
.75217 .09811 L
.7532 .09889 L
.75424 .09657 L
.75526 .09811 L
.75628 .1012 L
.75829 .09966 L
.75929 .09811 L
.76028 .09811 L
.76224 .09889 L
.76321 .09889 L
.76417 .09966 L
.76513 .10043 L
.76608 .09889 L
.76702 .09889 L
.76796 .1012 L
.76889 .10043 L
.76982 .1012 L
.77166 .10043 L
.77347 .09966 L
.77437 .10043 L
.77526 .09889 L
.77615 .09811 L
.77703 .09966 L
.7779 .1012 L
.77877 .09889 L
Mistroke
.77964 .1012 L
.7805 .10275 L
.78135 .1012 L
.7822 .1012 L
.78305 .09966 L
.78389 .10198 L
.78473 .10198 L
.78556 .1012 L
.7872 .1012 L
.78802 .1012 L
.78883 .1012 L
.78964 .09966 L
.79044 .09966 L
.79124 .09966 L
.79204 .09966 L
.79283 .09966 L
.79361 .10043 L
.79517 .09889 L
.79594 .09889 L
.79671 .09734 L
.79748 .09889 L
.79824 .09811 L
.79975 .09811 L
.8005 .09734 L
.80124 .09811 L
.80272 .09734 L
.80345 .09657 L
.80418 .09657 L
.80563 .09657 L
.80635 .09657 L
.80707 .09734 L
.80778 .09734 L
.80849 .0958 L
.80919 .09657 L
.8099 .09657 L
.81129 .09657 L
.81267 .09657 L
.81336 .09657 L
.81404 .09657 L
.81539 .09811 L
.81606 .09966 L
.81673 .09966 L
.8174 .09966 L
.81806 .09966 L
.81872 .09734 L
.81938 .09734 L
.82003 .09734 L
.82069 .09657 L
.82133 .09966 L
.82198 .09889 L
Mistroke
.82326 .09889 L
.82453 .09889 L
.82516 .09966 L
.82579 .09889 L
.82642 .09889 L
.82704 .10043 L
.82766 .1012 L
.82828 .10043 L
.8289 .10043 L
.82951 .1012 L
.83012 .09966 L
.83073 .09966 L
.83193 .10043 L
.83313 .1012 L
.83373 .10043 L
.83432 .10198 L
.83491 .10198 L
.8355 .1012 L
.83608 .10198 L
.83667 .1012 L
.83725 .10198 L
.83783 .10043 L
.8384 .10043 L
.83898 .10198 L
.83955 .1012 L
.84012 .1012 L
.84068 .10198 L
.84125 .10275 L
.84181 .10198 L
.84237 .1012 L
.84349 .10198 L
.84404 .10275 L
.84459 .10275 L
.84514 .10275 L
.84569 .1012 L
.84678 .1012 L
.84786 .1012 L
.8484 .1012 L
.84893 .1012 L
.84947 .10043 L
.85 .10043 L
.85053 .1012 L
.85106 .10043 L
.85158 .1012 L
.85211 .1012 L
.85263 .10043 L
.85315 .10043 L
.85418 .10043 L
.8547 .1012 L
.85521 .1012 L
Mistroke
.85623 .10043 L
.85674 .10043 L
.85725 .1012 L
.85775 .09889 L
.85825 .09889 L
.85875 .10043 L
.85925 .09966 L
.85975 .09966 L
.86024 .09966 L
.86074 .10043 L
.86123 .10043 L
.86172 .09889 L
.86221 .09889 L
.86269 .09966 L
.86318 .10043 L
.86366 .10043 L
.86415 .09966 L
.86463 .09966 L
.8651 .10043 L
.86558 .1012 L
.86606 .09966 L
.86653 .10043 L
.86701 .09966 L
.86748 .1012 L
.86795 .1012 L
.86841 .1012 L
.86888 .1012 L
.86935 .09966 L
.86981 .09966 L
.87027 .09966 L
.87073 .09966 L
.87119 .09966 L
.87165 .09889 L
.87256 .09889 L
.87347 .09889 L
.87392 .09811 L
.87437 .09811 L
.87526 .09811 L
.87615 .09811 L
.87659 .09889 L
.87703 .09811 L
.87791 .09889 L
.87878 .09966 L
.87922 .09966 L
.87965 .10043 L
.88008 .09889 L
.88051 .09889 L
.88094 .09889 L
.88137 .09966 L
.8818 .09966 L
Mistroke
.88222 .09966 L
.88307 .09889 L
.88349 .09889 L
.88391 .09811 L
.88433 .09889 L
.88475 .09966 L
.88516 .09811 L
.88558 .09811 L
.88599 .09966 L
.88641 .09966 L
.88682 .09889 L
.88723 .09734 L
.88764 .09734 L
.88805 .09734 L
.88846 .09811 L
.88886 .09889 L
.88927 .09889 L
.88967 .09811 L
.89008 .09889 L
.89048 .09966 L
.89088 .09734 L
.89128 .09734 L
.89168 .09734 L
.89207 .09657 L
.89247 .10043 L
.89287 .09966 L
.89365 .09889 L
.89404 .09889 L
.89444 .09811 L
.89521 .09811 L
.8956 .09811 L
.89599 .09811 L
.89637 .09811 L
.89676 .09889 L
.89753 .09811 L
.89829 .09734 L
.89867 .09734 L
.89905 .09734 L
.89942 .09734 L
.8998 .0958 L
.90055 .0958 L
.9013 .0958 L
.90167 .0958 L
.90204 .0958 L
.90241 .0958 L
.90278 .09657 L
.90315 .09657 L
.90352 .0958 L
.90388 .0958 L
.90425 .0958 L
Mistroke
.90461 .0958 L
.90498 .09734 L
.9057 .09734 L
.91137 .09734 L
.91171 .0958 L
.91206 .09811 L
.91275 .09734 L
.91309 .09734 L
.91344 .0958 L
.91378 .0958 L
.91412 .0958 L
.91446 .0958 L
.9148 .09657 L
.91548 .09657 L
.91581 .09734 L
.91615 .09734 L
.91649 .09734 L
.91682 .09657 L
.91715 .09657 L
.91749 .09811 L
.91782 .09811 L
.91815 .09734 L
.91848 .09734 L
.91881 .0958 L
.91914 .09734 L
.91947 .09734 L
.9198 .09734 L
.92013 .09811 L
.92045 .09657 L
.92078 .09657 L
.9211 .09657 L
.92143 .09811 L
.92175 .09657 L
.92208 .09734 L
.9224 .09657 L
.92272 .09734 L
.92304 .09734 L
.92336 .09657 L
.924 .09657 L
.92463 .09657 L
.92527 .09657 L
.9259 .09657 L
.92621 .09657 L
.92652 .09657 L
.92684 .09657 L
.92715 .09734 L
.92746 .09657 L
.92777 .09657 L
.92808 .09657 L
.92839 .09734 L
Mistroke
.9287 .09734 L
.929 .09734 L
.92931 .09734 L
.92962 .09811 L
.93023 .09811 L
.93084 .09811 L
.93144 .09811 L
.93205 .09811 L
.93235 .09811 L
.93265 .09811 L
.93295 .09811 L
.93325 .09734 L
.93354 .09734 L
.93384 .09811 L
.93444 .09734 L
.93473 .09734 L
.93503 .09657 L
.93532 .09657 L
.93562 .09734 L
.9362 .09734 L
.93679 .09734 L
.9391 .09734 L
.93939 .09734 L
.93967 .09734 L
.93996 .09811 L
.94024 .09811 L
.94053 .09811 L
.94081 .09811 L
.94138 .09734 L
.94166 .09734 L
.94194 .09657 L
.94222 .09657 L
.9425 .09657 L
.94278 .0958 L
.94306 .0958 L
.94362 .0958 L
.94389 .0958 L
.94417 .0958 L
.94445 .0958 L
.94472 .09657 L
.94527 .09657 L
.94582 .09657 L
.94637 .09657 L
.94691 .09657 L
.94719 .09657 L
.94746 .09657 L
.94773 .09657 L
.948 .09734 L
.94854 .09734 L
.9488 .09811 L
Mistroke
.94907 .09734 L
.94934 .09811 L
.94961 .09889 L
.95014 .09811 L
.9504 .09811 L
.95067 .09734 L
.9512 .09811 L
.95146 .09734 L
.95172 .09889 L
.95225 .09811 L
.95251 .09889 L
.95277 .09734 L
.95303 .09811 L
.95329 .09811 L
.95381 .09811 L
.95433 .09811 L
.95484 .09811 L
.9551 .09811 L
.95536 .09811 L
.95561 .09889 L
.95587 .09889 L
.95638 .09889 L
.9584 .09889 L
.95865 .09889 L
.9589 .09811 L
.9594 .09811 L
.95965 .09811 L
.9599 .09811 L
.96015 .09811 L
.9604 .09889 L
.96064 .09889 L
.96089 .09889 L
.96114 .09966 L
.96138 .09966 L
.96163 .09966 L
.96187 .09889 L
.96212 .09966 L
.96236 .09966 L
.96261 .10043 L
.96285 .09966 L
.96309 .09966 L
.96334 .10043 L
.96382 .10043 L
.9643 .10043 L
.96454 .10043 L
.96478 .09889 L
.96502 .09966 L
.96526 .10043 L
.9655 .10043 L
.96574 .10043 L
Mistroke
.96598 .09966 L
.96622 .09966 L
.96646 .09966 L
.96669 .09966 L
.96693 .09889 L
.96717 .09889 L
.96764 .09889 L
.96811 .09889 L
.96834 .09889 L
.96858 .09889 L
.96881 .09811 L
.96904 .09811 L
.96928 .0958 L
.96951 .0958 L
.96997 .0958 L
.97021 .0958 L
.97044 .09734 L
.97067 .09734 L
.9709 .0958 L
.97113 .09657 L
.97136 .0958 L
.97159 .09734 L
.97182 .09657 L
.97204 .09657 L
.97227 .09657 L
.9725 .09734 L
.97273 .09734 L
.97318 .09734 L
.97341 .09657 L
.97364 .09734 L
.97409 .09811 L
.97431 .09657 L
.97454 .09889 L
.97476 .09734 L
.97498 .09811 L
.97543 .09811 L
.97565 .09734 L
.97588 .09734 L
.9761 .09734 L
.97632 .09811 L
.97676 .09734 L
.97698 .09657 L
.97721 .09657 L
.97743 .09734 L
.97765 .09657 L
.97787 .09734 L
.97808 .09734 L
.9783 .09657 L
.97852 .09657 L
.97874 .09734 L
Mistroke
.97896 .09734 L
.97918 .09734 L
.97939 .09657 L
.97961 .09734 L
.97983 .09811 L
.98004 .09811 L
.98026 .09657 L
.98069 .09657 L
.9824 .09657 L
.98325 .09657 L
.98409 .09657 L
.98451 .09657 L
.98493 .09657 L
.98514 .09657 L
.98535 .09657 L
.98556 .09657 L
.98576 .0958 L
.98597 .0958 L
.98618 .09734 L
.98659 .09657 L
.98701 .0958 L
.98721 .0958 L
.98742 .09502 L
.98762 .0958 L
.98783 .0958 L
.98803 .0958 L
.98824 .09502 L
.98844 .09502 L
.98864 .0958 L
.98905 .0958 L
.98986 .0958 L
.99067 .0958 L
.99107 .0958 L
.99127 .0958 L
.99147 .0958 L
.99167 .09657 L
.99187 .09657 L
.99226 .09657 L
.99385 .09657 L
.99463 .09657 L
.99541 .09657 L
.9958 .09657 L
.99599 .09657 L
.99618 .09657 L
.99638 .0958 L
.99657 .0958 L
.99696 .0958 L
1 .0958 L
Mfstroke
P
P
P
P
% End of Graphics
MathPictureEnd
end
showpage

cleartomark
countdictstack exch sub { end } repeat
restore grestore
%
% End Imported PIC File: letter-err-raw.eps
%%EndDocument
%
/Times-Roman ff 540.00 scf sf
5475 8175 m
gs 1 -1 sc (# of rounds \() col1 sh gr
/Times-Italic ff 540.00 scf sf
8175 8175 m
gs 1 -1 sc (T) col12 sh gr
/Times-Roman ff 540.00 scf sf
6975 4275 m
gs 1 -1 sc (C4.5 test error) col1 sh gr
/Times-Roman ff 540.00 scf sf
8475 8175 m
gs 1 -1 sc (\)) col1 sh gr
/Times-Roman ff 540.00 scf sf
5025 7125 m
gs 1 -1 sc (train) col1 sh gr
/Times-Roman ff 540.00 scf sf
5850 6075 m
gs 1 -1 sc (test) col1 sh gr
/Times-Roman ff 540.00 scf sf
2775 5550 m
gs 1 -1 sc  90.0 rot (error) col1 sh gr
$F2psEnd
rs

%%EndDocument

 endTexFig
 4039 841 a Fq(\(boosting)31 b(C4.5)i(on)4039 1024 y(\223letter)m(\224)
f(dataset\))p Red -208 1927 a Fs(\017)p Blue 49 w Fu(test)47
b(err)o(or)g(does)p Red 1326 1952 319 17 v Blue White
43 w(not)p Blue White -310 w(not)p Blue White 1326 1923
a(not)p Blue White 1326 1931 a(not)p Blue 1326 1927 a(not)f(incr)l
(ease)l(,)h(ev)o(en)g(after)g(1000)i(r)o(ounds)p YellowOrange
38 2217 a Fp(\017)p Blue 48 w Fu(\(total)e(siz)o(e)g
Fn(>)g Fu(2,000,000)i(nodes\))p Red -208 2546 a Fs(\017)p
Blue 49 w Fu(test)e(err)o(or)g(continues)h(to)e(dr)o(op)g(ev)o(en)h
(after)g(tr)n(aining)g(err)o(or)h(is)e(z)o(er)o(o!)p
Black Blue 2917 2916 a(#)h(r)o(ounds)p Black 2722 3240
4 250 v OliveGreen 2848 3165 a Fm(5)p Black 3067 3240
V OliveGreen 175 w(100)p Black 3451 3240 V OliveGreen
99 w(1000)p Black 1667 3243 2265 4 v Blue 1716 3418 a
Fu(tr)n(ain)g(err)o(or)p Black 2722 3492 4 250 v OliveGreen
101 w Fm(0)p Fn(:)p Fm(0)p Black 3067 3492 V OliveGreen
138 w(0)p Fn(:)p Fm(0)p Black 3451 3492 V OliveGreen
232 w(0)p Fn(:)p Fm(0)p Black 1667 3496 2265 4 v Blue
1763 3670 a Fu(test)g(err)o(or)p Black 2722 3745 4 250
v OliveGreen 161 w Fm(8)p Fn(:)p Fm(4)p Black 3067 3745
V OliveGreen 138 w(3)p Fn(:)p Fm(3)p Black 3451 3745
V OliveGreen 232 w(3)p Fn(:)p Fm(1)p Black Blue Red -208
4049 a Fs(\017)p Blue 49 w Fu(O)o(ccam)-17 b(')-23 b(s)48
b(r)n(az)o(or)p Red 1289 4073 755 17 v Blue White 43
w(wr)o(ongly)p Blue White -746 w(wr)o(ongly)p Blue White
1289 4045 a(wr)o(ongly)p Blue White 1289 4053 a(wr)o(ongly)p
Blue 1289 4049 a(wr)o(ongly)d(pr)l(edicts)i(\223)-10
b(simpler)l(\224)45 b(r)r(ule)h(is)h(better)p eop end
%%Page: 25 25
TeXDict begin @landscape 25 24 bop Blue Red -300 219
3201 34 v Blue White -304 177 a Fv(A)43 b(B)o(etter)i(S)-5
b(tor)t(y)t(:)53 b(Theor)t(y)44 b(of)f(M)-5 b(ar)q(gins)p
Blue White -3193 w(A)44 b(B)o(etter)g(S)-5 b(tor)t(y)t(:)54
b(Theor)t(y)43 b(of)g(M)-5 b(ar)q(gins)p Blue White -300
173 a(A)43 b(B)o(etter)i(S)-5 b(tor)t(y)t(:)53 b(Theor)t(y)44
b(of)f(M)-5 b(ar)q(gins)p Blue White -300 181 a(A)43
b(B)o(etter)i(S)-5 b(tor)t(y)t(:)53 b(Theor)t(y)44 b(of)f(M)-5
b(ar)q(gins)p Blue -300 177 a(A)43 b(B)o(etter)i(S)-5
b(tor)t(y)t(:)53 b(Theor)t(y)44 b(of)f(M)-5 b(ar)q(gins)p
Black 3499 383 a Fr([with)39 b(F)m(r)m(eund,)e(B)n(ar)q(tlett)i(&)f
(Lee])p Blue Red -208 783 a Fs(\017)p Blue Red -56 808
764 17 v Blue White 45 w Fu(key)46 b(idea)p Blue White
-755 w(key)g(idea)p Blue White -56 779 a(key)g(idea)p
Blue White -56 787 a(key)g(idea)p Blue -56 783 a(key)g(idea:)p
YellowOrange 38 1074 a Fp(\017)p Blue 48 w Fu(tr)n(aining)i(err)o(or)f
(only)f(measur)l(es)h(whether)h(classi\002cations)f(ar)l(e)158
1323 y(r)r(ight)h(or)f(wr)o(ong)p YellowOrange 38 1572
a Fp(\017)p Blue 48 w Fu(should)g(also)f(consider)p Red
2123 1597 1042 17 v Blue White 43 w(con\002dence)p Blue
White -1032 w(con\002dence)p Blue White 2123 1568 a(con\002dence)p
Blue White 2123 1576 a(con\002dence)p Blue 2123 1572
a(con\002dence)i(of)e(classi\002cations)p Red -208 1904
a Fs(\017)p Blue 49 w Fu(r)l(ecall:)p OliveGreen 57 w
Fn(H)732 1952 y Fl(\014nal)p Blue 1078 1904 a Fu(is)h(w)o(eighted)g
(major)r(ity)f(v)o(ote)h(of)f(w)o(eak)g(classi\002ers)p
Red -208 2236 a Fs(\017)p Blue 49 w Fu(measur)l(e)h(con\002dence)g(b)-5
b(y)p Red 2150 2261 674 17 v Blue White 41 w(mar)o(gin)p
Blue White -665 w(mar)o(gin)p Blue White 2150 2232 a(mar)o(gin)p
Blue White 2150 2240 a(mar)o(gin)p Blue 2150 2236 a(mar)o(gin)47
b(=)f(str)l(ength)i(of)e(the)h(v)o(ote)334 2485 y(=)p
OliveGreen 46 w Fm(\()p Blue Fu(fr)n(action)g(v)o(oting)h(corr)l(ectly)
p OliveGreen 1 w Fm(\))e Fs(\000)f Fm(\()p Blue Fu(fr)n(action)j(v)o
(oting)f(incorr)l(ectly)p OliveGreen 1 w Fm(\))p Blue
692 2794 a
 33627953 7398148 0 0 29470228 6709739 startTexFig
 692 2794 a
%%BeginDocument: PS/margin_spectrum.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: margin_spectrum.eps
%%Creator: fig2dev Version 3.2.3 Patchlevel 
%%CreationDate: Wed Jan 23 22:05:59 2002
%%For: schapire@harpo.research.att.com (Robert Schapire,,0112620)
%%BoundingBox: 0 0 448 102
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 102 moveto 0 0 lineto 448 0 lineto 448 102 lineto closepath clip newpath
-121.0 158.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hypen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/Times-Italic /Times-Italic-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.06000 0.06000 sc
/Times-Roman-iso ff 360.00 scf sf
6450 2625 m
gs 1 -1 sc (correct) col1 sh gr
/Times-Roman-iso ff 360.00 scf sf
3225 2625 m
gs 1 -1 sc (incorrect) col1 sh gr
/Times-Roman-iso ff 360.00 scf sf
7950 1500 m
gs 1 -1 sc (correct) col1 sh gr
/Times-Roman-iso ff 360.00 scf sf
2025 1500 m
gs 1 -1 sc (incorrect) col1 sh gr
/Times-Roman-iso ff 360.00 scf sf
5325 2550 m
gs 1 -1 sc (0) col12 sh gr
/Times-Roman-iso ff 360.00 scf sf
2025 1200 m
gs 1 -1 sc (high conf.) col1 sh gr
/Times-Roman-iso ff 360.00 scf sf
7950 1200 m
gs 1 -1 sc (high conf.) col1 sh gr
/Times-Roman-iso ff 360.00 scf sf
4725 1500 m
gs 1 -1 sc (low conf.) col1 sh gr
/Times-Roman-iso ff 360.00 scf sf
2175 2550 m
gs 1 -1 sc (-1) col12 sh gr
/Times-Roman-iso ff 360.00 scf sf
8250 2550 m
gs 1 -1 sc (+1) col12 sh gr
% Polyline
15.000 slw
gs  clippath
8415 2010 m 8415 1890 l 8128 1890 l 8368 1950 l 8128 2010 l cp
eoclip
n 7125 1950 m
 8400 1950 l gs col26 s gr gr

% arrowhead
n 8128 2010 m 8368 1950 l 8128 1890 l 8128 2010 l  cp gs col26 1.00 shd ef gr  col26 s
% Polyline
n 2400 1500 m
 2400 2100 l gs col-1 s gr 
/Times-Roman-iso ff 270.00 scf sf
3375 2250 m
gs 1 -1 sc (final) col12 sh gr
/Times-Italic-iso ff 360.00 scf sf
3150 2100 m
gs 1 -1 sc (H) col12 sh gr
/Times-Roman-iso ff 270.00 scf sf
6525 2250 m
gs 1 -1 sc (final) col12 sh gr
/Times-Italic-iso ff 360.00 scf sf
6300 2100 m
gs 1 -1 sc (H) col12 sh gr
% Polyline
n 5400 1575 m
 5400 2025 l gs col-1 s gr 
% Polyline
gs  clippath
5385 1890 m 5385 2010 l 5672 2010 l 5432 1950 l 5672 1890 l cp
eoclip
n 6300 1950 m
 5400 1950 l gs col26 s gr gr

% arrowhead
n 5672 1890 m 5432 1950 l 5672 2010 l 5672 1890 l  cp gs col26 1.00 shd ef gr  col26 s
% Polyline
gs  clippath
5415 2010 m 5415 1890 l 5128 1890 l 5368 1950 l 5128 2010 l cp
eoclip
n 3975 1950 m
 5400 1950 l gs col26 s gr gr

% arrowhead
n 5128 2010 m 5368 1950 l 5128 1890 l 5128 2010 l  cp gs col26 1.00 shd ef gr  col26 s
% Polyline
gs  clippath
2385 1890 m 2385 2010 l 2672 2010 l 2432 1950 l 2672 1890 l cp
eoclip
n 3150 1950 m
 2400 1950 l gs col26 s gr gr

% arrowhead
n 2672 1890 m 2432 1950 l 2672 2010 l 2672 1890 l  cp gs col26 1.00 shd ef gr  col26 s
% Polyline
n 2400 1800 m
 8400 1800 l gs col-1 s gr 
% Polyline
n 8400 1500 m
 8400 2100 l gs col-1 s gr 
$F2psEnd
rs

%%EndDocument

 endTexFig
 eop end
%%Page: 26 26
TeXDict begin @landscape 26 25 bop Blue Red -300 -78
4327 34 v Blue White -304 -119 a Fv(E)o(mpir)r(ical)43
b(E)-5 b(vidence:)55 b(The)44 b(M)-5 b(ar)q(gin)43 b(D)n(istr)r
(ibution)p Blue White -4318 w(E)o(mpir)r(ical)h(E)-5
b(vidence:)54 b(The)44 b(M)-5 b(ar)q(gin)43 b(D)n(istr)r(ibution)p
Blue White -300 -123 a(E)o(mpir)r(ical)h(E)-5 b(vidence:)54
b(The)44 b(M)-5 b(ar)q(gin)43 b(D)n(istr)r(ibution)p
Blue White -300 -115 a(E)o(mpir)r(ical)h(E)-5 b(vidence:)54
b(The)44 b(M)-5 b(ar)q(gin)43 b(D)n(istr)r(ibution)p
Blue -300 -119 a(E)o(mpir)r(ical)h(E)-5 b(vidence:)54
b(The)44 b(M)-5 b(ar)q(gin)43 b(D)n(istr)r(ibution)p
Red -208 328 a Fs(\017)p Blue Red -56 353 1834 17 v Blue
White 45 w Fu(mar)o(gin)j(distr)r(ibution)p Blue White
-1825 w(mar)o(gin)h(distr)r(ibution)p Blue White -56
324 a(mar)o(gin)g(distr)r(ibution)p Blue White -56 332
a(mar)o(gin)g(distr)r(ibution)p Blue -56 328 a(mar)o(gin)g(distr)r
(ibution)-56 577 y(=)f(cumulativ)o(e)h(distr)r(ibution)f(of)h(mar)o
(gins)g(of)f(tr)n(aining)h(examples)100 862 y
 18944857 12314150 0 0 32167280 21115944 startTexFig
 100 862
a
%%BeginDocument: /u/schapire/TALKS/ijcai99/letter-err.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: letter-err.eps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Wed Jun 30 14:24:16 1999
%%For: schapire@spare.research.att.com (Robert Schapire)
%%Orientation: Portrait
%%BoundingBox: 0 0 489 321
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-152.0 491.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 9175 m -1000 -1000 l 11680 -1000 l 11680 9175 l cp clip
 0.06000 0.06000 sc
% Polyline
%
% Begin Imported EPS File: letter-err-raw.eps
%%BeginDocument: letter-err-raw.eps
%
n gs
2850 2850 tr
16.634043 -16.616438 sc
0 -292 tr
-71 -250 tr
sa
n 71 250 m 541 250 l 541 542 l 71 542 l cp clip
countdictstack
mark
/showpage {} def
% EPS file follows:
%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 71 250 541 542
%%Creator: Mathematica
%%CreationDate: Tue Jan 21 13:44:15 EST 1997
%%EndComments

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

%%AspectRatio: .61803 
MathPictureStart
%% Graphics
/Helvetica findfont 24  scalefont  setfont
% Scaling calculations
0 0.333333 0 0.0309017 [
[(10)] .33333 0 0 2 Msboxa
[(100)] .66667 0 0 2 Msboxa
[(1000)] 1 0 0 2 Msboxa
[(0)] -0.0125 0 1 0 Msboxa
[()] -0.0125 .07725 1 0 Msboxa
[(5)] -0.0125 .15451 1 0 Msboxa
[()] -0.0125 .23176 1 0 Msboxa
[(10)] -0.0125 .30902 1 0 Msboxa
[()] -0.0125 .38627 1 0 Msboxa
[(15)] -0.0125 .46353 1 0 Msboxa
[()] -0.0125 .54078 1 0 Msboxa
[(20)] -0.0125 .61803 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
0 0 .5 r
.001 w
0 .0958 m
1 .0958 L
s
P
p
0 0 .5 r
.001 w
0 .42722 m
1 .42722 L
s
P
p
.002 w
.10034 0 m
.10034 .00625 L
s
P
p
.002 w
.15904 0 m
.15904 .00625 L
s
P
p
.002 w
.20069 0 m
.20069 .00625 L
s
P
p
.002 w
.23299 0 m
.23299 .00625 L
s
P
p
.002 w
.25938 0 m
.25938 .00625 L
s
P
p
.002 w
.2817 0 m
.2817 .00625 L
s
P
p
.002 w
.30103 0 m
.30103 .00625 L
s
P
p
.002 w
.31808 0 m
.31808 .00625 L
s
P
p
.002 w
.33333 0 m
.33333 .00625 L
s
P
[(10)] .33333 0 0 2 Mshowa
p
.002 w
.43368 0 m
.43368 .00625 L
s
P
p
.002 w
.49237 0 m
.49237 .00625 L
s
P
p
.002 w
.53402 0 m
.53402 .00625 L
s
P
p
.002 w
.56632 0 m
.56632 .00625 L
s
P
p
.002 w
.59272 0 m
.59272 .00625 L
s
P
p
.002 w
.61503 0 m
.61503 .00625 L
s
P
p
.002 w
.63436 0 m
.63436 .00625 L
s
P
p
.002 w
.65141 0 m
.65141 .00625 L
s
P
p
.002 w
.66667 0 m
.66667 .00625 L
s
P
[(100)] .66667 0 0 2 Mshowa
p
.002 w
.76701 0 m
.76701 .00625 L
s
P
p
.002 w
.82571 0 m
.82571 .00625 L
s
P
p
.002 w
.86735 0 m
.86735 .00625 L
s
P
p
.002 w
.89966 0 m
.89966 .00625 L
s
P
p
.002 w
.92605 0 m
.92605 .00625 L
s
P
p
.002 w
.94837 0 m
.94837 .00625 L
s
P
p
.002 w
.9677 0 m
.9677 .00625 L
s
P
p
.002 w
.98475 0 m
.98475 .00625 L
s
P
p
.002 w
1 0 m
1 .00625 L
s
P
[(1000)] 1 0 0 2 Mshowa
p
[ 0 1 ] 0 setdash
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 0 m
.00625 0 L
s
P
[(0)] -0.0125 0 1 0 Mshowa
p
.002 w
0 .07725 m
.00625 .07725 L
s
P
[()] -0.0125 .07725 1 0 Mshowa
p
.002 w
0 .15451 m
.00625 .15451 L
s
P
[(5)] -0.0125 .15451 1 0 Mshowa
p
.002 w
0 .23176 m
.00625 .23176 L
s
P
[()] -0.0125 .23176 1 0 Mshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(10)] -0.0125 .30902 1 0 Mshowa
p
.002 w
0 .38627 m
.00625 .38627 L
s
P
[()] -0.0125 .38627 1 0 Mshowa
p
.002 w
0 .46353 m
.00625 .46353 L
s
P
[(15)] -0.0125 .46353 1 0 Mshowa
p
.002 w
0 .54078 m
.00625 .54078 L
s
P
[()] -0.0125 .54078 1 0 Mshowa
p
.002 w
0 .61803 m
.00625 .61803 L
s
P
[(20)] -0.0125 .61803 1 0 Mshowa
p
.001 w
0 .01545 m
.00375 .01545 L
s
P
p
.001 w
0 .0309 m
.00375 .0309 L
s
P
p
.001 w
0 .04635 m
.00375 .04635 L
s
P
p
.001 w
0 .0618 m
.00375 .0618 L
s
P
p
.001 w
0 .09271 m
.00375 .09271 L
s
P
p
.001 w
0 .10816 m
.00375 .10816 L
s
P
p
.001 w
0 .12361 m
.00375 .12361 L
s
P
p
.001 w
0 .13906 m
.00375 .13906 L
s
P
p
.001 w
0 .16996 m
.00375 .16996 L
s
P
p
.001 w
0 .18541 m
.00375 .18541 L
s
P
p
.001 w
0 .20086 m
.00375 .20086 L
s
P
p
.001 w
0 .21631 m
.00375 .21631 L
s
P
p
.001 w
0 .24721 m
.00375 .24721 L
s
P
p
.001 w
0 .26266 m
.00375 .26266 L
s
P
p
.001 w
0 .27812 m
.00375 .27812 L
s
P
p
.001 w
0 .29357 m
.00375 .29357 L
s
P
p
.001 w
0 .32447 m
.00375 .32447 L
s
P
p
.001 w
0 .33992 m
.00375 .33992 L
s
P
p
.001 w
0 .35537 m
.00375 .35537 L
s
P
p
.001 w
0 .37082 m
.00375 .37082 L
s
P
p
.001 w
0 .40172 m
.00375 .40172 L
s
P
p
.001 w
0 .41717 m
.00375 .41717 L
s
P
p
.001 w
0 .43262 m
.00375 .43262 L
s
P
p
.001 w
0 .44807 m
.00375 .44807 L
s
P
p
.001 w
0 .47898 m
.00375 .47898 L
s
P
p
.001 w
0 .49443 m
.00375 .49443 L
s
P
p
.001 w
0 .50988 m
.00375 .50988 L
s
P
p
.001 w
0 .52533 m
.00375 .52533 L
s
P
p
.001 w
0 .55623 m
.00375 .55623 L
s
P
p
.001 w
0 .57168 m
.00375 .57168 L
s
P
p
.001 w
0 .58713 m
.00375 .58713 L
s
P
p
.001 w
0 .60258 m
.00375 .60258 L
s
P
p
[ 0 1 ] 0 setdash
.002 w
0 0 m
0 .61803 L
s
P
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
p
.004 w
0 .2449 m
.12063 .32505 L
.1855 .00425 L
.23013 0 L
.2642 0 L
.3149 0 L
.35238 0 L
.44624 0 L
.54322 0 L
.64186 0 L
.69998 0 L
.74134 0 L
.77347 0 L
.79975 0 L
.82198 0 L
.84125 0 L
.85825 0 L
.87347 0 L
.88723 0 L
.8998 0 L
.91137 0 L
.92208 0 L
.93205 0 L
.94138 0 L
.95014 0 L
.9584 0 L
.96622 0 L
.97364 0 L
.98069 0 L
.98742 0 L
.99385 0 L
1 0 L
s
P
P
P
p
p
p
.004 w
0 .54928 m
.12063 .58868 L
.1855 .29202 L
.2642 .22713 L
.3149 .18 L
.33485 .16764 L
.35238 .15374 L
.36801 .14678 L
.38212 .14447 L
.39498 .14447 L
.40678 .14292 L
.4177 .14447 L
.42785 .1406 L
.44624 .13442 L
.4772 .12206 L
.48401 .11665 L
.49051 .11974 L
.49674 .1182 L
.5027 .11434 L
.50843 .11434 L
.51394 .11279 L
.51925 .11356 L
.52438 .11279 L
.52932 .10816 L
.5341 .10507 L
.53873 .10816 L
.54322 .11202 L
.54757 .11202 L
.5518 .11047 L
.55989 .11125 L
.56378 .11202 L
.56756 .11434 L
.57125 .11588 L
.57484 .11279 L
.57835 .11665 L
.58178 .11356 L
.58512 .11202 L
.58839 .11356 L
.59159 .11202 L
.59472 .11202 L
.59778 .11356 L
.60078 .1097 L
.60372 .11202 L
.6066 .11125 L
.60942 .10584 L
.61219 .10738 L
.61491 .1097 L
.61758 .10893 L
.6202 .10584 L
.62277 .10507 L
Mistroke
.6253 .10507 L
.62778 .10507 L
.63023 .10816 L
.63263 .10661 L
.63499 .10584 L
.63732 .10584 L
.6396 .10275 L
.64186 .10352 L
.64407 .10352 L
.64626 .10507 L
.64841 .10429 L
.65053 .10507 L
.65262 .10275 L
.65468 .10352 L
.65671 .10275 L
.65872 .10661 L
.66069 .10584 L
.66264 .10429 L
.66456 .10352 L
.66646 .10275 L
.66834 .10275 L
.67019 .10275 L
.67382 .10198 L
.67736 .1012 L
.6791 .10043 L
.68081 .10043 L
.68251 .10275 L
.68419 .10429 L
.68749 .10429 L
.68911 .10352 L
.69071 .10429 L
.6923 .10507 L
.69387 .10584 L
.69542 .10429 L
.69696 .10429 L
.69848 .10198 L
.69998 .10198 L
.70147 .1012 L
.70294 .1012 L
.7044 .1012 L
.70584 .1012 L
.70869 .09966 L
.71009 .09889 L
.71148 .09811 L
.71285 .09811 L
.71422 .09811 L
.71557 .09966 L
.7169 .10043 L
.71954 .10043 L
.72084 .10043 L
Mistroke
.72213 .10043 L
.72341 .1012 L
.72468 .09966 L
.72593 .1012 L
.72718 .10198 L
.72841 .10275 L
.72964 .09966 L
.73085 .10429 L
.73205 .10429 L
.73325 .10275 L
.73443 .10043 L
.73561 .1012 L
.73677 .09966 L
.73793 .09734 L
.73907 .09811 L
.74021 .09811 L
.74134 .09966 L
.74246 .09734 L
.74357 .09734 L
.74467 .09657 L
.74577 .09889 L
.74685 .10198 L
.74793 .09811 L
.75006 .09811 L
.75112 .09734 L
.75217 .09811 L
.7532 .09889 L
.75424 .09657 L
.75526 .09811 L
.75628 .1012 L
.75829 .09966 L
.75929 .09811 L
.76028 .09811 L
.76224 .09889 L
.76321 .09889 L
.76417 .09966 L
.76513 .10043 L
.76608 .09889 L
.76702 .09889 L
.76796 .1012 L
.76889 .10043 L
.76982 .1012 L
.77166 .10043 L
.77347 .09966 L
.77437 .10043 L
.77526 .09889 L
.77615 .09811 L
.77703 .09966 L
.7779 .1012 L
.77877 .09889 L
Mistroke
.77964 .1012 L
.7805 .10275 L
.78135 .1012 L
.7822 .1012 L
.78305 .09966 L
.78389 .10198 L
.78473 .10198 L
.78556 .1012 L
.7872 .1012 L
.78802 .1012 L
.78883 .1012 L
.78964 .09966 L
.79044 .09966 L
.79124 .09966 L
.79204 .09966 L
.79283 .09966 L
.79361 .10043 L
.79517 .09889 L
.79594 .09889 L
.79671 .09734 L
.79748 .09889 L
.79824 .09811 L
.79975 .09811 L
.8005 .09734 L
.80124 .09811 L
.80272 .09734 L
.80345 .09657 L
.80418 .09657 L
.80563 .09657 L
.80635 .09657 L
.80707 .09734 L
.80778 .09734 L
.80849 .0958 L
.80919 .09657 L
.8099 .09657 L
.81129 .09657 L
.81267 .09657 L
.81336 .09657 L
.81404 .09657 L
.81539 .09811 L
.81606 .09966 L
.81673 .09966 L
.8174 .09966 L
.81806 .09966 L
.81872 .09734 L
.81938 .09734 L
.82003 .09734 L
.82069 .09657 L
.82133 .09966 L
.82198 .09889 L
Mistroke
.82326 .09889 L
.82453 .09889 L
.82516 .09966 L
.82579 .09889 L
.82642 .09889 L
.82704 .10043 L
.82766 .1012 L
.82828 .10043 L
.8289 .10043 L
.82951 .1012 L
.83012 .09966 L
.83073 .09966 L
.83193 .10043 L
.83313 .1012 L
.83373 .10043 L
.83432 .10198 L
.83491 .10198 L
.8355 .1012 L
.83608 .10198 L
.83667 .1012 L
.83725 .10198 L
.83783 .10043 L
.8384 .10043 L
.83898 .10198 L
.83955 .1012 L
.84012 .1012 L
.84068 .10198 L
.84125 .10275 L
.84181 .10198 L
.84237 .1012 L
.84349 .10198 L
.84404 .10275 L
.84459 .10275 L
.84514 .10275 L
.84569 .1012 L
.84678 .1012 L
.84786 .1012 L
.8484 .1012 L
.84893 .1012 L
.84947 .10043 L
.85 .10043 L
.85053 .1012 L
.85106 .10043 L
.85158 .1012 L
.85211 .1012 L
.85263 .10043 L
.85315 .10043 L
.85418 .10043 L
.8547 .1012 L
.85521 .1012 L
Mistroke
.85623 .10043 L
.85674 .10043 L
.85725 .1012 L
.85775 .09889 L
.85825 .09889 L
.85875 .10043 L
.85925 .09966 L
.85975 .09966 L
.86024 .09966 L
.86074 .10043 L
.86123 .10043 L
.86172 .09889 L
.86221 .09889 L
.86269 .09966 L
.86318 .10043 L
.86366 .10043 L
.86415 .09966 L
.86463 .09966 L
.8651 .10043 L
.86558 .1012 L
.86606 .09966 L
.86653 .10043 L
.86701 .09966 L
.86748 .1012 L
.86795 .1012 L
.86841 .1012 L
.86888 .1012 L
.86935 .09966 L
.86981 .09966 L
.87027 .09966 L
.87073 .09966 L
.87119 .09966 L
.87165 .09889 L
.87256 .09889 L
.87347 .09889 L
.87392 .09811 L
.87437 .09811 L
.87526 .09811 L
.87615 .09811 L
.87659 .09889 L
.87703 .09811 L
.87791 .09889 L
.87878 .09966 L
.87922 .09966 L
.87965 .10043 L
.88008 .09889 L
.88051 .09889 L
.88094 .09889 L
.88137 .09966 L
.8818 .09966 L
Mistroke
.88222 .09966 L
.88307 .09889 L
.88349 .09889 L
.88391 .09811 L
.88433 .09889 L
.88475 .09966 L
.88516 .09811 L
.88558 .09811 L
.88599 .09966 L
.88641 .09966 L
.88682 .09889 L
.88723 .09734 L
.88764 .09734 L
.88805 .09734 L
.88846 .09811 L
.88886 .09889 L
.88927 .09889 L
.88967 .09811 L
.89008 .09889 L
.89048 .09966 L
.89088 .09734 L
.89128 .09734 L
.89168 .09734 L
.89207 .09657 L
.89247 .10043 L
.89287 .09966 L
.89365 .09889 L
.89404 .09889 L
.89444 .09811 L
.89521 .09811 L
.8956 .09811 L
.89599 .09811 L
.89637 .09811 L
.89676 .09889 L
.89753 .09811 L
.89829 .09734 L
.89867 .09734 L
.89905 .09734 L
.89942 .09734 L
.8998 .0958 L
.90055 .0958 L
.9013 .0958 L
.90167 .0958 L
.90204 .0958 L
.90241 .0958 L
.90278 .09657 L
.90315 .09657 L
.90352 .0958 L
.90388 .0958 L
.90425 .0958 L
Mistroke
.90461 .0958 L
.90498 .09734 L
.9057 .09734 L
.91137 .09734 L
.91171 .0958 L
.91206 .09811 L
.91275 .09734 L
.91309 .09734 L
.91344 .0958 L
.91378 .0958 L
.91412 .0958 L
.91446 .0958 L
.9148 .09657 L
.91548 .09657 L
.91581 .09734 L
.91615 .09734 L
.91649 .09734 L
.91682 .09657 L
.91715 .09657 L
.91749 .09811 L
.91782 .09811 L
.91815 .09734 L
.91848 .09734 L
.91881 .0958 L
.91914 .09734 L
.91947 .09734 L
.9198 .09734 L
.92013 .09811 L
.92045 .09657 L
.92078 .09657 L
.9211 .09657 L
.92143 .09811 L
.92175 .09657 L
.92208 .09734 L
.9224 .09657 L
.92272 .09734 L
.92304 .09734 L
.92336 .09657 L
.924 .09657 L
.92463 .09657 L
.92527 .09657 L
.9259 .09657 L
.92621 .09657 L
.92652 .09657 L
.92684 .09657 L
.92715 .09734 L
.92746 .09657 L
.92777 .09657 L
.92808 .09657 L
.92839 .09734 L
Mistroke
.9287 .09734 L
.929 .09734 L
.92931 .09734 L
.92962 .09811 L
.93023 .09811 L
.93084 .09811 L
.93144 .09811 L
.93205 .09811 L
.93235 .09811 L
.93265 .09811 L
.93295 .09811 L
.93325 .09734 L
.93354 .09734 L
.93384 .09811 L
.93444 .09734 L
.93473 .09734 L
.93503 .09657 L
.93532 .09657 L
.93562 .09734 L
.9362 .09734 L
.93679 .09734 L
.9391 .09734 L
.93939 .09734 L
.93967 .09734 L
.93996 .09811 L
.94024 .09811 L
.94053 .09811 L
.94081 .09811 L
.94138 .09734 L
.94166 .09734 L
.94194 .09657 L
.94222 .09657 L
.9425 .09657 L
.94278 .0958 L
.94306 .0958 L
.94362 .0958 L
.94389 .0958 L
.94417 .0958 L
.94445 .0958 L
.94472 .09657 L
.94527 .09657 L
.94582 .09657 L
.94637 .09657 L
.94691 .09657 L
.94719 .09657 L
.94746 .09657 L
.94773 .09657 L
.948 .09734 L
.94854 .09734 L
.9488 .09811 L
Mistroke
.94907 .09734 L
.94934 .09811 L
.94961 .09889 L
.95014 .09811 L
.9504 .09811 L
.95067 .09734 L
.9512 .09811 L
.95146 .09734 L
.95172 .09889 L
.95225 .09811 L
.95251 .09889 L
.95277 .09734 L
.95303 .09811 L
.95329 .09811 L
.95381 .09811 L
.95433 .09811 L
.95484 .09811 L
.9551 .09811 L
.95536 .09811 L
.95561 .09889 L
.95587 .09889 L
.95638 .09889 L
.9584 .09889 L
.95865 .09889 L
.9589 .09811 L
.9594 .09811 L
.95965 .09811 L
.9599 .09811 L
.96015 .09811 L
.9604 .09889 L
.96064 .09889 L
.96089 .09889 L
.96114 .09966 L
.96138 .09966 L
.96163 .09966 L
.96187 .09889 L
.96212 .09966 L
.96236 .09966 L
.96261 .10043 L
.96285 .09966 L
.96309 .09966 L
.96334 .10043 L
.96382 .10043 L
.9643 .10043 L
.96454 .10043 L
.96478 .09889 L
.96502 .09966 L
.96526 .10043 L
.9655 .10043 L
.96574 .10043 L
Mistroke
.96598 .09966 L
.96622 .09966 L
.96646 .09966 L
.96669 .09966 L
.96693 .09889 L
.96717 .09889 L
.96764 .09889 L
.96811 .09889 L
.96834 .09889 L
.96858 .09889 L
.96881 .09811 L
.96904 .09811 L
.96928 .0958 L
.96951 .0958 L
.96997 .0958 L
.97021 .0958 L
.97044 .09734 L
.97067 .09734 L
.9709 .0958 L
.97113 .09657 L
.97136 .0958 L
.97159 .09734 L
.97182 .09657 L
.97204 .09657 L
.97227 .09657 L
.9725 .09734 L
.97273 .09734 L
.97318 .09734 L
.97341 .09657 L
.97364 .09734 L
.97409 .09811 L
.97431 .09657 L
.97454 .09889 L
.97476 .09734 L
.97498 .09811 L
.97543 .09811 L
.97565 .09734 L
.97588 .09734 L
.9761 .09734 L
.97632 .09811 L
.97676 .09734 L
.97698 .09657 L
.97721 .09657 L
.97743 .09734 L
.97765 .09657 L
.97787 .09734 L
.97808 .09734 L
.9783 .09657 L
.97852 .09657 L
.97874 .09734 L
Mistroke
.97896 .09734 L
.97918 .09734 L
.97939 .09657 L
.97961 .09734 L
.97983 .09811 L
.98004 .09811 L
.98026 .09657 L
.98069 .09657 L
.9824 .09657 L
.98325 .09657 L
.98409 .09657 L
.98451 .09657 L
.98493 .09657 L
.98514 .09657 L
.98535 .09657 L
.98556 .09657 L
.98576 .0958 L
.98597 .0958 L
.98618 .09734 L
.98659 .09657 L
.98701 .0958 L
.98721 .0958 L
.98742 .09502 L
.98762 .0958 L
.98783 .0958 L
.98803 .0958 L
.98824 .09502 L
.98844 .09502 L
.98864 .0958 L
.98905 .0958 L
.98986 .0958 L
.99067 .0958 L
.99107 .0958 L
.99127 .0958 L
.99147 .0958 L
.99167 .09657 L
.99187 .09657 L
.99226 .09657 L
.99385 .09657 L
.99463 .09657 L
.99541 .09657 L
.9958 .09657 L
.99599 .09657 L
.99618 .09657 L
.99638 .0958 L
.99657 .0958 L
.99696 .0958 L
1 .0958 L
Mfstroke
P
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
cleartomark
countdictstack exch sub { end } repeat
restore grestore
%
% End Imported PIC File: letter-err-raw.eps
%%EndDocument
%
/Times-Roman ff 540.00 scf sf
2775 5550 m
gs 1 -1 sc  90.0 rot (error) col1 sh gr
/Times-Roman ff 540.00 scf sf
5850 6075 m
gs 1 -1 sc (test) col1 sh gr
/Times-Roman ff 540.00 scf sf
5025 7125 m
gs 1 -1 sc (train) col1 sh gr
/Times-Roman ff 540.00 scf sf
8475 8175 m
gs 1 -1 sc (\)) col1 sh gr
/Times-Italic ff 540.00 scf sf
8175 8175 m
gs 1 -1 sc (T) col2 sh gr
/Times-Roman ff 540.00 scf sf
5475 8175 m
gs 1 -1 sc (# of rounds \() col1 sh gr
$F2psEnd
rs

%%EndDocument

 endTexFig
 2900 766 a
 18944857 13071942 0 0 32825098 22826270 startTexFig
 2900 766 a
%%BeginDocument: /u/schapire/TALKS/ijcai99/letter-margin.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: letter-margin.eps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Wed Jun 30 14:34:57 1999
%%For: schapire@spare.research.att.com (Robert Schapire)
%%Orientation: Portrait
%%BoundingBox: 0 0 499 347
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-123.0 499.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 9310 m -1000 -1000 l 11364 -1000 l 11364 9310 l cp clip
 0.06000 0.06000 sc
% Polyline
%
% Begin Imported EPS File: letter-margin-raw.eps
%%BeginDocument: letter-margin-raw.eps
%
n gs
2550 2550 tr
16.635394 -16.618750 sc
0 -320 tr
-72 -236 tr
sa
n 72 236 m 541 236 l 541 556 l 72 556 l cp clip
countdictstack
mark
/showpage {} def
% EPS file follows:
%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 72 236 541 556
%%Creator: Mathematica
%%CreationDate: Tue Jan 21 12:48:38 EST 1997
%%EndComments

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

%%AspectRatio: .61803 
MathPictureStart
%% Graphics
/Helvetica findfont 24  scalefont  setfont
% Scaling calculations
0.5 0.5 0 0.618034 [
[(-1)] 0 0 0 2 Msboxa
[(-0.5)] .25 0 0 2 Msboxa
[(0.5)] .75 0 0 2 Msboxa
[(1)] 1 0 0 2 Msboxa
[(0.5)] .4875 .30902 1 0 Msboxa
[(1.0)] .4875 .61803 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
0 0 m
0 .00625 L
s
P
[(-1)] 0 0 0 2 Mshowa
p
.002 w
.25 0 m
.25 .00625 L
s
P
[(-0.5)] .25 0 0 2 Mshowa
p
.002 w
.75 0 m
.75 .00625 L
s
P
[(0.5)] .75 0 0 2 Mshowa
p
.002 w
1 0 m
1 .00625 L
s
P
[(1)] 1 0 0 2 Mshowa
p
.002 w
0 0 m
0 .00625 L
s
P
p
.002 w
.05 0 m
.05 .00625 L
s
P
p
.002 w
.1 0 m
.1 .00625 L
s
P
p
.002 w
.15 0 m
.15 .00625 L
s
P
p
.002 w
.2 0 m
.2 .00625 L
s
P
p
.002 w
.25 0 m
.25 .00625 L
s
P
p
.002 w
.3 0 m
.3 .00625 L
s
P
p
.002 w
.35 0 m
.35 .00625 L
s
P
p
.002 w
.4 0 m
.4 .00625 L
s
P
p
.002 w
.45 0 m
.45 .00625 L
s
P
p
.002 w
.5 0 m
.5 .00625 L
s
P
p
.002 w
.55 0 m
.55 .00625 L
s
P
p
.002 w
.6 0 m
.6 .00625 L
s
P
p
.002 w
.65 0 m
.65 .00625 L
s
P
p
.002 w
.7 0 m
.7 .00625 L
s
P
p
.002 w
.75 0 m
.75 .00625 L
s
P
p
.002 w
.8 0 m
.8 .00625 L
s
P
p
.002 w
.85 0 m
.85 .00625 L
s
P
p
.002 w
.9 0 m
.9 .00625 L
s
P
p
.002 w
.95 0 m
.95 .00625 L
s
P
p
.002 w
1 0 m
1 .00625 L
s
P
p
[ 0 1 ] 0 setdash
.002 w
0 0 m
1 0 L
s
P
p
.002 w
.5 .30902 m
.50625 .30902 L
s
P
[(0.5)] .4875 .30902 1 0 Mshowa
p
.002 w
.5 .61803 m
.50625 .61803 L
s
P
[(1.0)] .4875 .61803 1 0 Mshowa
p
.002 w
.5 .0618 m
.50625 .0618 L
s
P
p
.002 w
.5 .12361 m
.50625 .12361 L
s
P
p
.002 w
.5 .18541 m
.50625 .18541 L
s
P
p
.002 w
.5 .24721 m
.50625 .24721 L
s
P
p
.002 w
.5 .30902 m
.50625 .30902 L
s
P
p
.002 w
.5 .37082 m
.50625 .37082 L
s
P
p
.002 w
.5 .43262 m
.50625 .43262 L
s
P
p
.002 w
.5 .49443 m
.50625 .49443 L
s
P
p
.002 w
.5 .55623 m
.50625 .55623 L
s
P
p
.002 w
.5 .61803 m
.50625 .61803 L
s
P
p
[ 0 1 ] 0 setdash
.002 w
.5 0 m
.5 .61803 L
s
P
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
[ .005 .01 ] 0 setdash
p
.004 w
0 0 m
.04167 0 L
.08333 0 L
.125 0 L
.16667 0 L
.20833 0 L
.25 0 L
.29167 0 L
.33333 0 L
.375 0 L
.41667 0 L
.45833 0 L
.5 0 L
.52083 0 L
.54167 0 L
.55208 0 L
.55729 0 L
.5625 0 L
.5651 0 L
.56771 0 L
.56901 0 L
.57031 .00012 L
.57161 .00012 L
.57292 .00012 L
.57422 .0005 L
.57552 .0005 L
.57682 .0005 L
.57813 .0005 L
.58073 .0005 L
.58203 .0005 L
.58333 .0005 L
.58464 .00189 L
.58594 .00189 L
.58724 .00189 L
.58854 .00189 L
.58984 .00189 L
.59115 .00189 L
.59245 .00189 L
.59375 .00224 L
.59505 .00224 L
.59635 .00355 L
.59896 .00355 L
.60156 .00355 L
.60286 .00355 L
.60417 .00355 L
.60547 .00355 L
.60677 .0061 L
.60807 .0061 L
.60938 .0061 L
.61068 .00715 L
Mistroke
.61198 .00715 L
.61328 .00715 L
.61458 .00715 L
.61589 .00718 L
.61719 .00718 L
.61849 .00718 L
.61979 .00954 L
.625 .00954 L
.6276 .00954 L
.62891 .00954 L
.63021 .00954 L
.63151 .01286 L
.63281 .01286 L
.63542 .01286 L
.64583 .01286 L
.65625 .01286 L
.66146 .01286 L
.66406 .01286 L
.66667 .01286 L
.66797 .01286 L
.66927 .01286 L
.67057 .01286 L
.67188 .01329 L
.67318 .01329 L
.67448 .01452 L
.67578 .01452 L
.67708 .01452 L
.67839 .01452 L
.67969 .01877 L
.68099 .01877 L
.68229 .01877 L
.6875 .02043 L
.6901 .02043 L
.69271 .02043 L
.69401 .02043 L
.69531 .02043 L
.69661 .02379 L
.69792 .02379 L
.70313 .03055 L
.70443 .03055 L
.70573 .03484 L
.70703 .03496 L
.70833 .03496 L
.70964 .04009 L
.71094 .04009 L
.71224 .04009 L
.71354 .04009 L
.71615 .04009 L
.71875 .04009 L
.72005 .04009 L
Mistroke
.72135 .0477 L
.72396 .0477 L
.72917 .0477 L
.75 .0477 L
.76042 .0477 L
.76563 .0477 L
.76823 .0477 L
.77083 .0477 L
.77214 .0477 L
.77344 .0477 L
.77474 .10267 L
.77604 .10267 L
.78125 .10267 L
.78646 .10267 L
.78906 .10267 L
.79167 .10267 L
.79297 .10267 L
.79427 .10267 L
.79688 .153 L
.79818 .153 L
.79948 .20179 L
.80208 .20179 L
.80469 .20179 L
.80729 .20179 L
.80859 .20179 L
.8099 .20179 L
.8112 .26394 L
.8125 .26394 L
.8138 .26394 L
.8151 .26394 L
.81641 .26394 L
.81771 .26394 L
.81901 .26394 L
.82031 .29233 L
.82161 .29233 L
.82292 .29233 L
.83333 .29233 L
.875 .29233 L
.91667 .29233 L
.9375 .29233 L
.95833 .29233 L
.96875 .29233 L
.97917 .29233 L
.98438 .29233 L
.98958 .29233 L
.99219 .29233 L
.99479 .29233 L
.99609 .29233 L
.9974 .29233 L
.9987 .29233 L
Mistroke
1 .61803 L
Mfstroke
P
P
p
[ .02 .01 ] 0 setdash
p
.004 w
0 0 m
.04167 0 L
.08333 0 L
.125 0 L
.16667 0 L
.20833 0 L
.25 0 L
.29167 0 L
.33333 0 L
.375 0 L
.41667 0 L
.45833 0 L
.5 0 L
.54167 0 L
.58333 0 L
.625 0 L
.66667 0 L
.70833 0 L
.72917 0 L
.75 0 L
.75521 0 L
.75781 0 L
.75911 0 L
.76042 0 L
.76172 0 L
.76302 4e-05 L
.76432 4e-05 L
.76563 4e-05 L
.76693 8e-05 L
.76823 .00035 L
.77083 .00108 L
.77344 .00162 L
.77474 .00182 L
.77604 .00228 L
.77865 .00328 L
.78125 .00464 L
.78646 .00784 L
.78906 .00966 L
.79036 .01066 L
.79167 .01128 L
.79427 .01441 L
.79688 .0168 L
.80208 .02213 L
.8125 .03704 L
.81771 .04736 L
.82292 .06045 L
.82813 .07598 L
.83073 .08591 L
.83333 .09819 L
.85417 .22732 L
Mistroke
.86458 .32366 L
.875 .39751 L
.88542 .45209 L
.89583 .49794 L
.90625 .5339 L
.91667 .56287 L
.92188 .57411 L
.92318 .57435 L
.92448 .5784 L
.92578 .58485 L
.92708 .58524 L
.93229 .59269 L
.9375 .60007 L
.94271 .60602 L
.94792 .61089 L
.94922 .61135 L
.95052 .61286 L
.95182 .61317 L
.95313 .61324 L
.95443 .61379 L
.95573 .61487 L
.95703 .61514 L
.95833 .61541 L
.96354 .6163 L
.96484 .61684 L
.96615 .61718 L
.96745 .61718 L
.96875 .61722 L
.97005 .61753 L
.97135 .61765 L
.97266 .61765 L
.97396 .61776 L
.97917 .61788 L
.98047 .61803 L
.98177 .61803 L
.98307 .61803 L
.98438 .61803 L
.98958 .61803 L
1 .61803 L
Mfstroke
P
P
p
[ .2 0 ] 0 setdash
p
.004 w
0 0 m
.04167 0 L
.08333 0 L
.125 0 L
.16667 0 L
.20833 0 L
.25 0 L
.29167 0 L
.33333 0 L
.375 0 L
.41667 0 L
.45833 0 L
.5 0 L
.54167 0 L
.58333 0 L
.625 0 L
.66667 0 L
.70833 0 L
.75 0 L
.76042 0 L
.76563 0 L
.76823 0 L
.77083 0 L
.77344 0 L
.77474 0 L
.77604 .00027 L
.77865 .00147 L
.77995 .00193 L
.78125 .00239 L
.78255 .00336 L
.78385 .00417 L
.78646 .00599 L
.79167 .00993 L
.79688 .01479 L
.80208 .02067 L
.8125 .03643 L
.81771 .04701 L
.82292 .06149 L
.82813 .07822 L
.83333 .09807 L
.83854 .12558 L
.84375 .15679 L
.85417 .2454 L
.86458 .35973 L
.86719 .38693 L
.86849 .40126 L
.86979 .41404 L
.8724 .43038 L
.875 .44398 L
.88542 .49141 L
Mistroke
.89063 .5137 L
.89323 .52471 L
.89453 .53093 L
.89583 .53665 L
.89714 .53978 L
.89844 .54437 L
.90104 .55183 L
.90625 .56558 L
.91146 .57794 L
.91667 .58841 L
.91927 .59293 L
.92188 .59671 L
.92708 .6022 L
.93229 .60699 L
.9375 .61093 L
.94271 .61379 L
.94531 .61514 L
.94661 .6156 L
.94792 .61622 L
.94922 .61645 L
.95052 .61668 L
.95182 .61699 L
.95313 .6173 L
.95443 .61765 L
.95573 .61769 L
.95703 .6178 L
.95833 .61792 L
.96354 .618 L
.96484 .61803 L
.96615 .61803 L
.96875 .61803 L
.97917 .61803 L
1 .61803 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
showpage
cleartomark
countdictstack exch sub { end } repeat
restore grestore
%
% End Imported PIC File: letter-margin-raw.eps
%%EndDocument
%
/Times-Roman ff 540.00 scf sf
2400 7575 m
gs 1 -1 sc  90.0 rot (cumulative distribution) col1 sh gr
/Times-Roman ff 540.00 scf sf
8325 3525 m
gs 1 -1 sc (1000) col2 sh gr
/Times-Roman ff 540.00 scf sf
9450 4125 m
gs 1 -1 sc (100) col2 sh gr
/Times-Roman ff 540.00 scf sf
5475 8175 m
gs 1 -1 sc (margin) col1 sh gr
/Times-Roman ff 540.00 scf sf
8025 6975 m
gs 1 -1 sc (5) col2 sh gr
$F2psEnd
rs

%%EndDocument

 endTexFig
 Black Blue 3149 2736 a Fu(#)g(r)o(ounds)p Black 2878
3060 4 250 v OliveGreen 3052 2985 a Fm(5)p Black 3318
3060 V OliveGreen 251 w(100)p Black 3758 3060 V OliveGreen
127 w(1000)p Black 1115 3063 3124 4 v Blue 1165 3237
a Fu(tr)n(ain)g(err)o(or)p Black 2878 3312 4 250 v OliveGreen
903 w Fm(0)p Fn(:)p Fm(0)p Black 3318 3312 V OliveGreen
194 w(0)p Fn(:)p Fm(0)p Black 3758 3312 V OliveGreen
233 w(0)p Fn(:)p Fm(0)p Black 1115 3315 3124 4 v Blue
1165 3490 a Fu(test)g(err)o(or)p Black 2878 3564 4 250
v OliveGreen 1010 w Fm(8)p Fn(:)p Fm(4)p Black 3318 3564
V OliveGreen 194 w(3)p Fn(:)p Fm(3)p Black 3758 3564
V OliveGreen 233 w(3)p Fn(:)p Fm(1)p Black 1115 3568
3124 4 v Blue 1165 3742 a Fu(\045)g(mar)o(gins)p OliveGreen
46 w Fs(\024)57 b Fm(0)p Fn(:)p Fm(5)p Blue Black 2878
3817 4 250 v OliveGreen 366 w(7)p Fn(:)p Fm(7)p Black
3318 3817 V OliveGreen 194 w(0)p Fn(:)p Fm(0)p Black
3758 3817 V OliveGreen 233 w(0)p Fn(:)p Fm(0)p Black
1115 3820 3124 4 v Blue 1165 3994 a Fu(minimum)46 b(mar)o(gin)p
Black 2878 4069 4 250 v OliveGreen 100 w Fm(0)p Fn(:)p
Fm(14)p Black 3318 4069 V OliveGreen 99 w(0)p Fn(:)p
Fm(52)p Black 3758 4069 V OliveGreen 137 w(0)p Fn(:)p
Fm(55)p Black Blue eop end
%%Page: 27 27
TeXDict begin @landscape 27 26 bop Blue Red -300 149
5411 34 v Blue White -304 108 a Fv(Theor)l(etical)44
b(E)-5 b(vidence:)55 b(Analyzing)43 b(B)o(oosting)h(U)-9
b(sing)44 b(M)-5 b(ar)q(gins)p Blue White -5403 w(Theor)l(etical)45
b(E)-5 b(vidence:)54 b(Analyzing)44 b(B)o(oosting)f(U)-9
b(sing)44 b(M)-5 b(ar)q(gins)p Blue White -300 104 a(Theor)l(etical)45
b(E)-5 b(vidence:)54 b(Analyzing)43 b(B)o(oosting)h(U)-9
b(sing)44 b(M)-5 b(ar)q(gins)p Blue White -300 112 a(Theor)l(etical)45
b(E)-5 b(vidence:)54 b(Analyzing)43 b(B)o(oosting)h(U)-9
b(sing)44 b(M)-5 b(ar)q(gins)p Blue -300 108 a(Theor)l(etical)45
b(E)-5 b(vidence:)54 b(Analyzing)43 b(B)o(oosting)h(U)-9
b(sing)44 b(M)-5 b(ar)q(gins)p Black Red -208 555 a Fs(\017)p
Black 49 w Fu(Theor)l(em)p Blue(:)p Red 908 579 2792
17 v Blue White 54 w(lar)o(ge)47 b(mar)o(gins)g Fs(\))f
Fu(better)g(bound)p Blue White -2784 w(lar)o(ge)h(mar)o(gins)g
Fs(\))f Fu(better)h(bound)p Blue White 908 551 a(lar)o(ge)g(mar)o(gins)
g Fs(\))f Fu(better)h(bound)p Blue White 908 559 a(lar)o(ge)g(mar)o
(gins)g Fs(\))f Fu(better)h(bound)p Blue 908 555 a(lar)o(ge)g(mar)o
(gins)g Fs(\))f Fu(better)h(bound)e(on)i(gener)n(alization)-56
804 y(err)o(or)h(\(independent)d(of)i(number)f(of)g(r)o(ounds\))p
YellowOrange 38 1094 a Fp(\017)p Blue Red 158 1119 954
17 v Blue White 44 w Fu(pr)o(oof)h(idea)p Blue White
-945 w(pr)o(oof)f(idea)p Blue White 158 1090 a(pr)o(oof)h(idea)p
Blue White 158 1098 a(pr)o(oof)g(idea)p Blue 158 1094
a(pr)o(oof)g(idea:)57 b(if)47 b(all)e(mar)o(gins)i(ar)l(e)g(lar)o(ge)l
(,)f(then)h(can)p Red 4230 1119 1191 17 v Blue White
43 w(appr)o(o)l(ximate)p Blue White -1182 w(appr)o(o)l(ximate)p
Blue White 4230 1090 a(appr)o(o)l(ximate)p Blue White
4230 1098 a(appr)o(o)l(ximate)p Blue 4230 1094 a(appr)o(o)l(ximate)158
1343 y(\002nal)f(classi\002er)i(b)-5 b(y)45 b(a)i(much)p
Red 2506 1368 691 17 v Blue White 43 w(smaller)p Blue
White -683 w(smaller)p Blue White 2506 1339 a(smaller)p
Blue White 2506 1347 a(smaller)p Blue 2506 1343 a(smaller)f
(classi\002er)h(\(just)g(as)g(polls)e(can)158 1592 y(pr)l(edict)i
(not-too-close)g(election\))p Black Red -208 1924 a Fs(\017)p
Black 49 w Fu(Theor)l(em)p Blue(:)p Red 908 1949 3254
17 v Blue White 54 w(boosting)g(tends)f(to)h(incr)l(ease)g(mar)o(gins)p
Blue White -3245 w(boosting)g(tends)f(to)h(incr)l(ease)h(mar)o(gins)p
Blue White 908 1920 a(boosting)f(tends)f(to)h(incr)l(ease)h(mar)o(gins)
p Blue White 908 1928 a(boosting)f(tends)f(to)h(incr)l(ease)h(mar)o
(gins)p Blue 908 1924 a(boosting)f(tends)f(to)h(incr)l(ease)h(mar)o
(gins)e(of)h(tr)n(aining)-56 2173 y(examples)f(\(giv)o(en)h(w)o(eak)g
(lear)r(ning)f(assumption\))p YellowOrange 38 2464 a
Fp(\017)p Blue Red 158 2489 954 17 v Blue White 44 w
Fu(pr)o(oof)h(idea)p Blue White -945 w(pr)o(oof)f(idea)p
Blue White 158 2460 a(pr)o(oof)h(idea)p Blue White 158
2468 a(pr)o(oof)g(idea)p Blue 158 2464 a(pr)o(oof)g(idea:)57
b(similar)47 b(to)f(tr)n(aining)h(err)o(or)h(pr)o(oof)p
Red -208 2796 a Fs(\017)p Blue 49 w Fu(so:)-56 3045 y(although)g
(\002nal)e(classi\002er)h(is)g(getting)p Red 3057 3070
539 17 v Blue White 43 w(lar)o(ger)p Blue White -530
w(lar)o(ger)p Blue White 3057 3041 a(lar)o(ger)p Blue
White 3057 3049 a(lar)o(ger)p Blue 3057 3045 a(lar)o(ger)q(,)p
Red -56 3319 764 17 v Blue White -60 3294 a(mar)o(gins)p
Blue White -755 w(mar)o(gins)p Blue White -56 3290 a(mar)o(gins)p
Blue White -56 3298 a(mar)o(gins)p Blue -56 3294 a(mar)o(gins)g(ar)l(e)
f(likely)g(to)h(be)p Red 2144 3319 967 17 v Blue White
42 w(incr)l(easing)p Blue White -957 w(incr)l(easing)p
Blue White 2144 3290 a(incr)l(easing)p Blue White 2144
3298 a(incr)l(easing)p Blue 2144 3294 a(incr)l(easing)q(,)-56
3543 y(so)g(\002nal)f(classi\002er)h(actually)f(getting)h(close)g(to)g
(a)p Red 3925 3568 711 17 v Blue White 42 w(simpler)p
Blue White -702 w(simpler)p Blue White 3925 3539 a(simpler)p
Blue White 3925 3547 a(simpler)p Blue 3925 3543 a(simpler)f
(classi\002er)-12 b(,)-56 3792 y(dr)r(iving)p Red 655
3817 524 17 v Blue White 42 w(do)-6 b(wn)p Blue White
-515 w(do)g(wn)p Blue White 655 3788 a(do)g(wn)p Blue
White 655 3796 a(do)g(wn)p Blue 655 3792 a(do)g(wn)46
b(the)h(test)g(err)o(or)p eop end
%%Page: 28 28
TeXDict begin @landscape 28 27 bop Blue Red -300 827
1800 34 v Blue White -304 785 a Fv(M)-6 b(or)l(e)42 b(T)-17
b(echnically)i(...)p Blue White -1790 w(M)-6 b(or)l(e)43
b(T)-17 b(echnically)i(...)p Blue White -300 781 a(M)-6
b(or)l(e)43 b(T)-17 b(echnically)i(...)p Blue White -300
789 a(M)-6 b(or)l(e)43 b(T)-17 b(echnically)i(...)p Blue
-300 785 a(M)-6 b(or)l(e)43 b(T)-17 b(echnically)i(...)p
Red -208 1232 a Fs(\017)p Blue 49 w Fu(with)47 b(high)g(pr)o(obability)
-18 b(,)p OliveGreen 45 w Fs(8)p Fn(\022)63 b(>)58 b
Fm(0)f(:)p Blue OliveGreen 549 1757 a Fu(gener)n(alization)48
b(err)o(or)58 b Fs(\024)2691 1705 y Fm(^)2673 1757 y(Pr[)p
Fu(mar)o(gin)g Fs(\024)f Fn(\022)6 b Fm(])45 b(+)4318
1705 y(~)4268 1757 y Fn(O)4463 1435 y Fg(0)4463 1581
y(B)4463 1631 y(B)4463 1681 y(B)4463 1731 y(B)4463 1780
y(B)4463 1834 y(@)4546 1441 y(s)p 4629 1441 384 4 v 177
x Fn(d=m)p 4546 1707 467 4 v 4729 1899 a(\022)5022 1435
y Fg(1)5022 1581 y(C)5022 1631 y(C)5022 1681 y(C)5022
1731 y(C)5022 1780 y(C)5022 1834 y(A)p Blue -10 2241
a Fu(wher)l(e)p OliveGreen YellowOrange 38 2532 a Fp(\017)p
OliveGreen 48 w Fn(m)58 b Fm(=)p Blue 46 w Fu(#)47 b(tr)n(aining)g
(examples)p OliveGreen YellowOrange 38 2781 a Fp(\017)p
OliveGreen 48 w Fn(d)58 b Fm(=)p Blue 46 w Fu(\223)-17
b(complexity\224)46 b(of)h(w)o(eak)f(classi\002ers)p
OliveGreen Red -208 3113 a Fs(\017)p OliveGreen -39 3061
a Fm(^)-56 3113 y(Pr[)p Fu(mar)o(gin)57 b Fs(\024)g Fn(\022)6
b Fm(])57 b Fs(!)g Fm(0)p Blue 46 w Fu(exponentially)46
b(fast)g(\(in)p OliveGreen 47 w Fn(T)p Blue 28 w Fu(\))g(if)p
OliveGreen 47 w Fn(\015)4311 3148 y Fi(t)4433 3113 y
Fn(>)58 b(\022)p Blue 52 w Fu(\()p OliveGreen Fs(8)p
Fn(t)p Blue Fu(\))p eop end
%%Page: 29 29
TeXDict begin @landscape 29 28 bop Blue Red 807 1663
3787 34 v Blue White 802 1622 a Fv(O)o(ther)44 b(W)-15
b(ays)43 b(of)g(U)-10 b(nderstanding)44 b(A)n(daB)o(oost)p
Blue White -3778 w(O)o(ther)f(W)-15 b(ays)44 b(of)f(U)-10
b(nderstanding)44 b(A)n(daB)o(oost)p Blue White 807 1618
a(O)o(ther)f(W)-15 b(ays)44 b(of)e(U)-10 b(nderstanding)44
b(A)n(daB)o(oost)p Blue White 807 1626 a(O)o(ther)f(W)-15
b(ays)44 b(of)e(U)-10 b(nderstanding)44 b(A)n(daB)o(oost)p
Blue 807 1622 a(O)o(ther)f(W)-15 b(ays)44 b(of)e(U)-10
b(nderstanding)44 b(A)n(daB)o(oost)p Red 2209 2473 a
Fj(\017)p Blue 49 w Fr(game)38 b(theor)s(y)p Red 2209
2764 a Fj(\017)p Blue 49 w Fr(loss)h(minimization)p Red
2209 3054 a Fj(\017)p Blue 49 w Fr(estimating)f(conditional)h(pr)o
(obabilities)p eop end
%%Page: 30 30
TeXDict begin @landscape 30 29 bop Blue Red -300 -101
1297 34 v Blue White -304 -142 a Fv(G)n(ame)43 b(Theor)t(y)p
Blue White -1288 w(G)n(ame)g(Theor)t(y)p Blue White -300
-146 a(G)n(ame)g(Theor)t(y)p Blue White -300 -138 a(G)n(ame)g(Theor)t
(y)p Blue -300 -142 a(G)n(ame)g(Theor)t(y)p Red -208
238 a Fs(\017)p Blue Red -56 263 513 17 v Blue White
45 w Fu(game)p Blue White -504 w(game)p Blue White -56
234 a(game)p Blue White -56 242 a(game)p Blue -56 238
a(game)k(de\002ned)e(b)-5 b(y)46 b(matr)r(ix)p OliveGreen
46 w Fv(M)p Blue Fu(:)p Black 1953 625 4 250 v Plum 2147
550 a(R)l(ock)p Black Plum 347 w(P)-7 b(aper)p Black
Plum 203 w(Scissors)p Black 1111 628 3375 4 v Plum 1446
802 a(R)l(ock)p Black 1953 877 4 250 v OliveGreen 328
w Fm(1)p Fn(=)p Fm(2)p Black OliveGreen 650 w(1)p Black
OliveGreen 749 w(0)p Black Plum 1369 1051 a Fu(P)g(aper)p
Black 1953 1126 V OliveGreen 424 w Fm(0)p Black OliveGreen
650 w(1)p Fn(=)p Fm(2)p Black OliveGreen 651 w(1)p Black
Plum 1161 1300 a Fu(Scissors)p Black 1953 1375 V OliveGreen
426 w Fm(1)p Black OliveGreen 748 w(0)p Black OliveGreen
651 w(1)p Fn(=)p Fm(2)p Black Blue Red -208 1616 a Fs(\017)p
Blue Red -56 1641 979 17 v Blue White 45 w Fu(r)o(o)h(w)46
b(play)o(er)p Blue White -971 w(r)o(o)-6 b(w)46 b(play)o(er)p
Blue White -56 1612 a(r)o(o)-6 b(w)46 b(play)o(er)p Blue
White -56 1620 a(r)o(o)-6 b(w)46 b(play)o(er)p Blue -56
1616 a(r)o(o)-6 b(w)46 b(play)o(er)g(chooses)i(r)o(o)-6
b(w)p OliveGreen 46 w Fn(i)p Blue Red -208 1932 a Fs(\017)p
Blue Red -56 1956 1351 17 v Blue White 45 w Fu(column)46
b(play)o(er)p Blue White -1343 w(column)g(play)o(er)p
Blue White -56 1928 a(column)g(play)o(er)p Blue White
-56 1936 a(column)g(play)o(er)p Blue -56 1932 a(column)g(play)o(er)g
(chooses)i(column)p OliveGreen 46 w Fn(j)p Blue -56 2181
a Fu(\(simultaneously\))p Red -208 2496 a Fs(\017)p Blue
Red -56 2521 1538 17 v Blue White 45 w Fu(r)o(o)-6 b(w)46
b(play)o(er)l(')-23 b(s)46 b(goal)p Blue White -1529
w(r)o(o)-6 b(w)46 b(play)o(er)l(')-23 b(s)46 b(goal)p
Blue White -56 2492 a(r)o(o)-6 b(w)46 b(play)o(er)l(')-23
b(s)46 b(goal)p Blue White -56 2500 a(r)o(o)-6 b(w)46
b(play)o(er)l(')-23 b(s)46 b(goal)p Blue -56 2496 a(r)o(o)-6
b(w)46 b(play)o(er)l(')-23 b(s)46 b(goal:)58 b(minimiz)o(e)46
b(loss)p OliveGreen 46 w Fv(M)p Fm(\()p Fn(i;)34 b(j)12
b Fm(\))p Blue Red -208 2812 a Fs(\017)p Blue 49 w Fu(usually)46
b(allo)-6 b(w)p Red 1200 2837 1136 17 v Blue White 41
w(r)n(andomiz)o(ed)p Blue White -1128 w(r)n(andomiz)o(ed)p
Blue White 1200 2808 a(r)n(andomiz)o(ed)p Blue White
1200 2816 a(r)n(andomiz)o(ed)p Blue 1200 2812 a(r)n(andomiz)o(ed)46
b(play)r(:)p YellowOrange 38 3094 a Fp(\017)p Blue 48
w Fu(play)o(ers)g(choose)p Red 1585 3119 1204 17 v Blue
White 44 w(distr)r(ibutions)p Blue White -1196 w(distr)r(ibutions)p
Blue White 1585 3090 a(distr)r(ibutions)p Blue White
1585 3098 a(distr)r(ibutions)p Blue 1585 3094 a(distr)r(ibutions)p
OliveGreen 46 w Fv(P)p Blue 47 w Fu(and)p OliveGreen
46 w Fv(Q)p Blue 46 w Fu(o)-6 b(v)o(er)47 b(r)o(o)-6
b(ws)46 b(and)158 3343 y(columns)p Red -208 3658 a Fs(\017)p
Blue 49 w Fu(lear)r(ner)l(')-23 b(s)47 b(\(expected\))h(loss)p
OliveGreen 1949 3949 a Fm(=)2213 3839 y Fg(X)2181 4091
y Fi(i;j)2399 3949 y Fv(P)q Fm(\()p Fn(i)p Fm(\))p Fv(M)o
Fm(\()p Fn(i;)34 b(j)12 b Fm(\))p Fv(Q)p Fm(\()p Fn(j)g
Fm(\))1949 4368 y(=)83 b Fv(P)2315 4283 y Fl(T)2434 4368
y Fv(MQ)57 b Fs(\021)g Fv(M)p Fm(\()p Fv(P)p Fn(;)34
b Fv(Q)p Fm(\))p Blue eop end
%%Page: 31 31
TeXDict begin @landscape 31 30 bop Blue Red -300 -101
2131 34 v Blue White -304 -142 a Fv(The)44 b(M)n(inmax)e(Theor)l(em)p
Blue White -2122 w(The)i(M)n(inmax)f(Theor)l(em)p Blue
White -300 -146 a(The)h(M)n(inmax)e(Theor)l(em)p Blue
White -300 -138 a(The)i(M)n(inmax)e(Theor)l(em)p Blue
-300 -142 a(The)i(M)n(inmax)e(Theor)l(em)p Red -208 259
a Fs(\017)p Blue 49 w Fu(v)o(on)k(N)-6 b(eumann)-17 b(')-23
b(s)48 b(minmax)e(theor)l(em:)p OliveGreen 1077 568 a
Fm(min)1189 682 y Fd(P)1428 568 y Fm(max)1550 684 y Fd(Q)1817
568 y Fv(M)p Fm(\()p Fv(P)p Fn(;)34 b Fv(Q)p Fm(\))83
b(=)g(max)2973 684 y Fd(Q)3240 568 y Fm(min)3352 682
y Fd(P)3591 568 y Fv(M)p Fm(\()p Fv(P)p Fn(;)34 b Fv(Q)p
Fm(\))2619 842 y(=)83 b Fn(v)2619 1116 y Fm(=)p Blue
83 w Fu(\223)p Red 2946 1141 500 17 v Blue White -4 w(v)o(alue)p
Blue White -492 w(v)o(alue)p Blue White 2946 1112 a(v)o(alue)p
Blue White 2946 1120 a(v)o(alue)p Blue 2946 1116 a(v)o(alue\224)46
b(of)g(game)p OliveGreen 47 w Fv(M)p Blue OliveGreen
Blue Red -208 1745 a Fs(\017)p Blue Red -56 1770 803
17 v Blue White 45 w Fu(in)g(wor)l(ds)p Blue White -794
w(in)g(wor)l(ds)p Blue White -56 1741 a(in)g(wor)l(ds)p
Blue White -56 1749 a(in)g(wor)l(ds)p Blue -56 1745 a(in)g(wor)l(ds:)p
OliveGreen YellowOrange 38 2043 a Fp(\017)p OliveGreen
48 w Fn(v)65 b Fm(=)57 b Fu(min)46 b(max)p Blue 47 w(means:)p
Goldenrod 220 2310 a Fp(\017)p Blue 49 w Fu(r)o(o)-6
b(w)46 b(play)o(er)g(has)h(str)n(ategy)p OliveGreen 47
w Fv(P)2653 2233 y Fj(\003)p Blue 341 2559 a Fu(such)g(that)g
Fs(8)g Fu(column)f(str)n(ategy)p OliveGreen 47 w Fv(Q)p
Blue 341 2808 a Fu(loss)p OliveGreen 46 w Fv(M)p Fm(\()p
Fv(P)1141 2731 y Fj(\003)1232 2808 y Fn(;)34 b Fv(Q)p
Fm(\))57 b Fs(\024)g Fn(v)p Blue OliveGreen YellowOrange
38 3075 a Fp(\017)p OliveGreen 48 w Fn(v)65 b Fm(=)57
b Fu(max)47 b(min)p Blue 46 w(means:)p Goldenrod 220
3339 a Fp(\017)p Blue 49 w Fu(this)g(is)p Red 931 3364
733 17 v Blue White 42 w(optimal)p Blue White -724 w(optimal)p
Blue White 931 3335 a(optimal)p Blue White 931 3343 a(optimal)p
Blue 931 3339 a(optimal)e(in)i(sense)g(that)341 3588
y(column)f(play)o(er)g(has)h(str)n(ategy)p OliveGreen
47 w Fv(Q)3049 3508 y Fj(\003)p Blue 341 3837 a Fu(such)g(that)g
Fs(8)g Fu(r)o(o)-6 b(w)46 b(str)n(ategy)p OliveGreen
47 w Fv(P)p Blue 341 4086 a Fu(loss)p OliveGreen 46 w
Fv(M)p Fm(\()p Fv(P)p Fn(;)34 b Fv(Q)1391 4006 y Fj(\003)1481
4086 y Fm(\))57 b Fs(\025)g Fn(v)p Blue eop end
%%Page: 32 32
TeXDict begin @landscape 32 31 bop Blue Red -300 -101
1874 34 v Blue White -304 -142 a Fv(The)44 b(B)o(oosting)f(G)n(ame)p
Blue White -1865 w(The)h(B)o(oosting)g(G)n(ame)p Blue
White -300 -146 a(The)g(B)o(oosting)f(G)n(ame)p Blue
White -300 -138 a(The)h(B)o(oosting)f(G)n(ame)p Blue
-300 -142 a(The)h(B)o(oosting)f(G)n(ame)p Red -208 238
a Fs(\017)p Blue 49 w Fu(let)p OliveGreen 46 w Fs(f)p
328 85 117 4 v Fn(h)445 278 y Fl(1)528 238 y Fn(;)34
b(:)g(:)g(:)i(;)p 980 85 V 34 w(h)1097 285 y Fi(N)1255
238 y Fs(g)57 b Fm(=)p Blue 46 w Fu(space)47 b(of)p Red
2421 263 224 17 v Blue White 43 w(all)p Blue White -216
w(all)p Blue White 2421 234 a(all)p Blue White 2421 242
a(all)p Blue 2421 238 a(all)f(w)o(eak)g(classi\002ers)p
Red -208 554 a Fs(\017)p Blue 49 w Fu(r)o(o)-6 b(w)46
b(play)o(er)p OliveGreen 46 w Fs($)p Blue 46 w Fu(booster)p
Red -208 869 a Fs(\017)p Blue 49 w Fu(column)g(play)o(er)p
OliveGreen 46 w Fs($)p Blue 46 w Fu(w)o(eak)g(lear)r(ner)p
Red -208 1185 a Fs(\017)p Blue 49 w Fu(matr)r(ix)p OliveGreen
47 w Fv(M)p Blue -1 w Fu(:)p YellowOrange 38 1475 a Fp(\017)p
Blue 48 w Fu(r)o(o)-6 b(w)p OliveGreen 47 w Fs($)p Blue
46 w Fu(example)p OliveGreen 46 w Fm(\()p Fn(x)1838 1517
y Fi(i)1900 1475 y Fn(;)34 b(y)2089 1517 y Fi(i)2150
1475 y Fm(\))p Blue YellowOrange 38 1724 a Fp(\017)p
Blue 48 w Fu(column)p OliveGreen 47 w Fs($)p Blue 46
w Fu(w)o(eak)46 b(classi\002er)p OliveGreen 2575 1571
117 4 v 48 w Fn(h)p Blue OliveGreen YellowOrange 38 2036
a Fp(\017)p OliveGreen 48 w Fv(M)p Fm(\()p Fn(i;)34 b(j)12
b Fm(\))58 b(=)1013 1735 y Fg(8)1013 1810 y(>)1013 1835
y(>)1013 1860 y(>)1013 1885 y(>)1013 1909 y(<)1013 2059
y(>)1013 2084 y(>)1013 2109 y(>)1013 2134 y(>)1013 2159
y(:)1128 1909 y Fm(1)p Blue 83 w Fu(if)p OliveGreen 46
w Fn(y)1577 1951 y Fi(i)1696 1909 y Fm(=)p 1902 1756
V 57 w Fn(h)2018 1951 y Fi(j)2102 1909 y Fm(\()p Fn(x)2290
1951 y Fi(i)2352 1909 y Fm(\))p Blue OliveGreen 1128
2159 a(0)p Blue 83 w Fu(else)p OliveGreen Blue 872 2317
a
 30785574 15392785 0 0 25983795 13222133 startTexFig
 872 2317 a
%%BeginDocument: PS/matrix.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: matrix.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Fri May 20 10:28:19 2005
%%For: schapire@bolle (Robert Schapire,FAC,Computer Science,NONE)
%%BoundingBox: 0 0 395 201
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 201 moveto 0 0 lineto 395 0 lineto 395 201 lineto closepath clip newpath
-70.1 261.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
 [15 45] 45 sd
n 2925 1650 m
 4500 1650 l gs col18 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 4875 1650 m
 7275 1650 l gs col18 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 2100 2325 m
 2100 3150 l gs col18 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 2100 3525 m
 2100 3975 l gs col18 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 4650 1875 m
 4650 4350 l gs col18 s gr  [] 0 sd
/Times-Roman ff 360.00 scf sf
3825 1275 m
gs 1 -1 sc (weak learner) col1 sh gr
/Times-Roman ff 360.00 scf sf
1425 3900 m
gs 1 -1 sc  90.0 rot (booster) col1 sh gr
% Polyline
 [15 45] 45 sd
n 2475 3225 m
 7725 3225 l gs col18 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 4125 3000 m 5175 3000 l 5175 3525 l 4125 3525 l
 cp gs col7 1.00 shd ef gr gs col7 s gr  [] 0 sd
/Times-Roman ff 300.00 scf sf
2250 2250 m
gs 1 -1 sc (1) col12 sh gr
/Times-Roman ff 300.00 scf sf
2775 1950 m
gs 1 -1 sc (1) col12 sh gr
/Times-Italic ff 360.00 scf sf
1725 4200 m
gs 1 -1 sc (x  y) col12 sh gr
/Times-Italic ff 360.00 scf sf
1800 2100 m
gs 1 -1 sc (x  y) col12 sh gr
/Times-Italic ff 300.00 scf sf
1875 3525 m
gs 1 -1 sc (i) col12 sh gr
/Times-Italic ff 300.00 scf sf
2175 3525 m
gs 1 -1 sc (i) col12 sh gr
/Times-Italic ff 360.00 scf sf
1725 3375 m
gs 1 -1 sc (x  y) col12 sh gr
/Times-Italic ff 360.00 scf sf
4275 3375 m
gs 1 -1 sc (M\(i,j\)) col12 sh gr
/Times-Italic ff 300.00 scf sf
4725 1950 m
gs 1 -1 sc (j) col12 sh gr
/Times-Roman ff 300.00 scf sf
1950 2250 m
gs 1 -1 sc (1) col12 sh gr
% Polyline
n 2625 1500 m
 2775 1500 l gs col12 s gr 
/Times-Italic ff 360.00 scf sf
2625 1800 m
gs 1 -1 sc (h) col12 sh gr
% Polyline
n 4575 1500 m
 4725 1500 l gs col12 s gr 
/Times-Italic ff 360.00 scf sf
4575 1800 m
gs 1 -1 sc (h) col12 sh gr
% Polyline
n 7350 1500 m
 7500 1500 l gs col12 s gr 
/Times-Italic ff 360.00 scf sf
7350 1800 m
gs 1 -1 sc (h) col12 sh gr
/Times-Italic ff 300.00 scf sf
1875 4350 m
gs 1 -1 sc (m) col12 sh gr
/Times-Italic ff 300.00 scf sf
2175 4350 m
gs 1 -1 sc (m) col12 sh gr
% Polyline
n 2475 1875 m 7725 1875 l 7725 4350 l 2475 4350 l
 cp gs col0 s gr 
/Times-Italic ff 300.00 scf sf
7500 1950 m
gs 1 -1 sc (N) col12 sh gr
$F2psEnd
rs

%%EndDocument

 endTexFig
 eop end
%%Page: 33 33
TeXDict begin @landscape 33 32 bop Blue Red -300 210
3392 34 v Blue White -304 168 a Fv(B)o(oosting)43 b(and)h(the)g(M)n
(inmax)f(Theor)l(em)p Blue White -3383 w(B)o(oosting)h(and)f(the)i(M)n
(inmax)d(Theor)l(em)p Blue White -300 164 a(B)o(oosting)i(and)f(the)h
(M)n(inmax)f(Theor)l(em)p Blue White -300 172 a(B)o(oosting)h(and)f
(the)h(M)n(inmax)f(Theor)l(em)p Blue -300 168 a(B)o(oosting)h(and)f
(the)h(M)n(inmax)f(Theor)l(em)p Red -208 615 a Fs(\017)p
Blue Red -56 640 126 17 v Blue White 45 w Fu(if)p Blue
White -118 w(if)p Blue White -56 611 a(if)p Blue White
-56 619 a(if)p Blue -56 615 a(if:)p OliveGreen YellowOrange
38 906 a Fp(\017)p OliveGreen 48 w Fs(8)p Blue 47 w Fu(distr)r
(ibutions)j(o)-6 b(v)o(er)47 b(examples)p OliveGreen
158 1155 a Fs(9)p Fn(h)p Blue 47 w Fu(with)g(accur)n(acy)p
OliveGreen 48 w Fs(\025)2004 1073 y Fl(1)p 2004 1105
79 4 v 2004 1226 a(2)2138 1155 y Fs(\000)f Fn(\015)p
Blue Red -208 1487 a Fs(\017)p Blue Red -56 1512 431
17 v Blue White 45 w Fu(then)p Blue White -422 w(then)p
Blue White -56 1483 a(then)p Blue White -56 1491 a(then)p
Blue -56 1487 a(then:)p OliveGreen YellowOrange 38 1777
a Fp(\017)p OliveGreen 48 w Fm(min)270 1891 y Fd(P)509
1777 y Fm(max)638 1911 y Fi(h)898 1777 y Fv(M)p Fm(\()p
Fv(P)p Fn(;)34 b(h)p Fm(\))59 b Fs(\025)1861 1696 y Fl(1)p
1861 1727 79 4 v 1861 1849 a(2)1996 1777 y Fs(\000)45
b Fn(\015)p Blue Red -208 2168 a Fs(\017)p Blue 49 w
Fu(b)-5 b(y)p Red 213 2193 1619 17 v Blue White 41 w(minmax)46
b(theor)l(em)p Blue White -1610 w(minmax)h(theor)l(em)p
Blue White 213 2164 a(minmax)f(theor)l(em)p Blue White
213 2172 a(minmax)g(theor)l(em)p Blue 213 2168 a(minmax)g(theor)l(em)q
(:)p OliveGreen YellowOrange 38 2459 a Fp(\017)p OliveGreen
48 w Fm(max)281 2575 y Fd(Q)547 2459 y Fm(min)677 2586
y Fi(i)898 2459 y Fv(M)p Fm(\()p Fn(i;)34 b Fv(Q)p Fm(\))58
b Fs(\025)1838 2378 y Fl(1)p 1838 2409 79 4 v 1838 2530
a(2)1973 2459 y Fs(\000)45 b Fn(\015)69 b(>)2577 2378
y Fl(1)p 2577 2409 V 2577 2530 a(2)p Blue Red -208 2860
a Fs(\017)p Blue Red -56 2885 1242 17 v Blue White 45
w Fu(which)47 b(means)p Blue White -1233 w(which)g(means)p
Blue White -56 2856 a(which)g(means)p Blue White -56
2864 a(which)g(means)p Blue -56 2860 a(which)g(means:)p
OliveGreen YellowOrange 38 3151 a Fp(\017)p OliveGreen
48 w Fs(9)p Blue 47 w Fu(w)o(eighted)f(major)r(ity)g(of)h
(classi\002ers)g(which)h(corr)l(ectly)f(classi\002es)p
Red 158 3425 224 17 v Blue White 154 3400 a(all)p Blue
White -215 w(all)p Blue White 158 3396 a(all)p Blue White
158 3404 a(all)p Blue 158 3400 a(all)f(examples)g(with)p
Red 1821 3425 1455 17 v Blue White 43 w(positiv)o(e)h(mar)o(gin)p
Blue White -1447 w(positiv)o(e)g(mar)o(gin)p Blue White
1821 3396 a(positiv)o(e)g(mar)o(gin)p Blue White 1821
3404 a(positiv)o(e)g(mar)o(gin)p Blue 1821 3400 a(positiv)o(e)g(mar)o
(gin)g(\()p OliveGreen Fm(2)p Fn(\015)p Blue 11 w Fu(\))p
Red -208 3732 a Fs(\017)p Blue 49 w Fu(optimal)f(mar)o(gin)g
Fs($)g Fu(\223)l(v)o(alue)-12 b(\224)45 b(of)i(game)p
eop end
%%Page: 34 34
TeXDict begin @landscape 34 33 bop Blue Red -300 451
2671 34 v Blue White -304 410 a Fv(A)n(daB)o(oost)43
b(and)h(G)n(ame)f(Theor)t(y)p Blue White -2662 w(A)n(daB)o(oost)g(and)h
(G)n(ame)f(Theor)t(y)p Blue White -300 406 a(A)n(daB)o(oost)g(and)h(G)n
(ame)f(Theor)t(y)p Blue White -300 414 a(A)n(daB)o(oost)g(and)h(G)n
(ame)f(Theor)t(y)p Blue -300 410 a(A)n(daB)o(oost)g(and)h(G)n(ame)f
(Theor)t(y)p Black 4145 608 a Fr([F)m(r)m(eund)37 b(&)h(Schapir)m(e])p
Blue Red -208 1016 a Fs(\017)p Blue 49 w Fu(A)n(daB)o(oost)46
b(is)h(special)f(case)i(of)e(gener)n(al)h(algor)r(ithm)g(for)g(solving)
-56 1265 y(games)g(thr)o(ough)h(r)l(epeated)e(play)p
Red -208 1597 a Fs(\017)p Blue 49 w Fu(can)h(sho)-6 b(w)p
YellowOrange 38 1913 a Fp(\017)p Blue 48 w Fu(distr)r(ibution)47
b(o)-6 b(v)o(er)47 b(examples)f(conv)o(er)o(ges)i(to)f(\(appr)o(o)l
(ximate\))158 2162 y(minmax)g(str)n(ategy)g(for)g(boosting)f(game)p
YellowOrange 38 2411 a Fp(\017)p Blue 48 w Fu(w)o(eights)i(on)e(w)o
(eak)g(classi\002ers)i(conv)o(er)o(ge)g(to)e(\(appr)o(o)l(ximate\))158
2660 y(maxmin)h(str)n(ategy)p Red -208 2992 a Fs(\017)p
Blue 49 w Fu(differ)l(ent)f(instantiation)h(of)g(game-playing)e(algor)r
(ithm)i(giv)o(es)p Red -56 3266 2562 17 v Blue White
-60 3241 a(on-line)f(lear)r(ning)h(algor)r(ithms)p Blue
White -2553 w(on-line)f(lear)r(ning)h(algor)r(ithms)p
Blue White -56 3237 a(on-line)f(lear)r(ning)h(algor)r(ithms)p
Blue White -56 3245 a(on-line)f(lear)r(ning)h(algor)r(ithms)p
Blue -56 3241 a(on-line)f(lear)r(ning)h(algor)r(ithms)g(\(such)g(as)g
(w)o(eighted)g(major)r(ity)-56 3490 y(algor)r(ithm\))p
eop end
%%Page: 35 35
TeXDict begin @landscape 35 34 bop Blue Red -300 -101
3018 34 v Blue White -304 -142 a Fv(A)n(daB)o(oost)43
b(and)h(Exponential)f(Loss)p Blue White -3009 w(A)n(daB)o(oost)g(and)h
(Exponential)g(Loss)p Blue White -300 -146 a(A)n(daB)o(oost)f(and)h
(Exponential)f(Loss)p Blue White -300 -138 a(A)n(daB)o(oost)g(and)h
(Exponential)f(Loss)p Blue -300 -142 a(A)n(daB)o(oost)g(and)h
(Exponential)f(Loss)p Red -208 238 a Fs(\017)p Blue 49
w Fu(many)i(\(most?\))59 b(lear)r(ning)46 b(algor)r(ithms)h(minimiz)o
(e)f(a)h(\223loss)-8 b(\224)45 b(function)p YellowOrange
38 521 a Fp(\017)p Blue 48 w Fu(e)l(.g.)58 b(least)46
b(squar)l(es)i(r)l(egr)l(ession)p Red -208 836 a Fs(\017)p
Blue 49 w Fu(tr)n(aining)f(err)o(or)h(pr)o(oof)e(sho)-6
b(ws)47 b(A)n(daB)o(oost)f(actually)g(minimiz)o(es)p
OliveGreen 1725 1099 a Fg(Y)1747 1343 y Fi(t)1865 1209
y Fn(Z)2003 1244 y Fi(t)2126 1209 y Fm(=)2383 1069 y(1)p
2342 1159 177 4 v 2342 1351 a Fn(m)2563 1099 y Fg(X)2595
1350 y Fi(i)2718 1209 y Fm(exp)o(\()p Fs(\000)p Fn(y)3340
1251 y Fi(i)3401 1209 y Fn(f)22 b Fm(\()p Fn(x)3711 1251
y Fi(i)3773 1209 y Fm(\)\))p Blue -10 1563 a Fu(wher)l(e)p
OliveGreen 47 w Fn(f)g Fm(\()p Fn(x)p Fm(\))58 b(=)1256
1453 y Fg(X)1285 1698 y Fi(t)1410 1563 y Fn(\013)1539
1598 y Fi(t)1604 1563 y Fn(h)1720 1598 y Fi(t)1785 1563
y Fm(\()p Fn(x)p Fm(\))p Blue Red -208 1939 a Fs(\017)p
Blue 49 w Fu(on)46 b(each)i(r)o(ound,)e(A)n(daB)o(oost)p
Red 2340 1964 742 17 v Blue White 42 w(gr)l(eedily)p
Blue White -734 w(gr)l(eedily)p Blue White 2340 1935
a(gr)l(eedily)p Blue White 2340 1943 a(gr)l(eedily)p
Blue 2340 1939 a(gr)l(eedily)h(chooses)p OliveGreen 48
w Fn(\013)4057 1973 y Fi(t)p Blue 4168 1939 a Fu(and)p
OliveGreen 46 w Fn(h)4690 1973 y Fi(t)p Blue 4801 1939
a Fu(to)-56 2188 y(minimiz)o(e)f(loss)p Red -208 2518
a Fs(\017)p Blue 49 w Fu(exponential)g(loss)h(is)f(an)h(upper)-56
2767 y(bound)f(on)g(0-1)i(\(classi\002cation\))-56 3016
y(loss)p Red -208 3348 a Fs(\017)p Blue 49 w Fu(A)n(daB)o(oost)p
Red 882 3373 815 17 v Blue White 42 w(pr)o(o)-6 b(v)o(ably)p
Blue White -808 w(pr)o(o)g(v)o(ably)p Blue White 882
3344 a(pr)o(o)g(v)o(ably)p Blue White 882 3352 a(pr)o(o)g(v)o(ably)p
Blue 882 3348 a(pr)o(o)g(v)o(ably)-56 3597 y(minimiz)o(es)46
b(exponential)g(loss)2700 1520 y
 23681433 23444613 0 0 23878778 23812997 startTexFig
 2700 1520 a
%%BeginDocument: PS/exploss.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: exploss.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Fri May 20 11:14:00 2005
%%For: schapire@bolle (Robert Schapire,FAC,Computer Science,NONE)
%%BoundingBox: 0 0 363 362
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 362 moveto 0 0 lineto 363 0 lineto 363 362 lineto closepath clip newpath
-202.5 460.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
gs  clippath
8865 7080 m 8865 7020 l 8713 7020 l 8833 7050 l 8713 7080 l cp
4185 7020 m 4185 7080 l 4337 7080 l 4217 7050 l 4337 7020 l cp
eoclip
n 4200 7050 m
 8850 7050 l gs col0 s gr gr

% arrowhead
n 4337 7020 m 4217 7050 l 4337 7080 l  col0 s
% arrowhead
n 8713 7080 m 8833 7050 l 8713 7020 l  col0 s
% Polyline
gs  clippath
6630 3585 m 6570 3585 l 6570 3737 l 6600 3617 l 6630 3737 l cp
eoclip
n 6600 7050 m
 6600 3600 l gs col0 s gr gr

% arrowhead
n 6630 3737 m 6600 3617 l 6570 3737 l  col0 s
% Polyline
15.000 slw
n 4515 6360 m 6600 6375 l 6600 7050 l
 8550 7050 l gs col1 s gr 
% Polyline
2 slj
n 4545 3690 m 4546 3694 l 4549 3702 l 4555 3715 l 4562 3735 l 4571 3759 l
 4582 3787 l 4593 3817 l 4605 3847 l 4616 3876 l 4626 3903 l
 4636 3929 l 4645 3952 l 4654 3974 l 4662 3994 l 4670 4013 l
 4677 4032 l 4685 4050 l 4693 4068 l 4701 4087 l 4709 4106 l
 4717 4125 l 4726 4145 l 4735 4166 l 4744 4186 l 4753 4207 l
 4763 4228 l 4772 4249 l 4782 4270 l 4791 4290 l 4800 4309 l
 4809 4328 l 4818 4346 l 4826 4364 l 4834 4381 l 4843 4398 l
 4851 4414 l 4859 4430 l 4867 4447 l 4875 4464 l 4884 4481 l
 4893 4498 l 4902 4515 l 4911 4533 l 4920 4551 l 4930 4568 l
 4939 4586 l 4948 4603 l 4957 4619 l 4966 4635 l 4975 4651 l
 4983 4666 l 4992 4680 l 5000 4695 l 5010 4711 l 5019 4728 l
 5029 4745 l 5040 4763 l 5051 4780 l 5062 4799 l 5073 4817 l
 5084 4836 l 5096 4855 l 5107 4873 l 5117 4891 l 5128 4908 l
 5138 4924 l 5147 4940 l 5156 4955 l 5165 4970 l 5174 4985 l
 5182 4999 l 5191 5014 l 5199 5029 l 5208 5045 l 5218 5061 l
 5227 5077 l 5237 5094 l 5247 5110 l 5256 5127 l 5266 5143 l
 5277 5159 l 5287 5175 l 5297 5191 l 5307 5207 l 5318 5223 l
 5327 5237 l 5337 5252 l 5348 5267 l 5360 5283 l 5372 5299 l
 5384 5317 l 5397 5334 l 5411 5352 l 5425 5370 l 5438 5389 l
 5452 5407 l 5466 5424 l 5480 5442 l 5493 5458 l 5506 5475 l
 5518 5490 l 5531 5505 l 5543 5520 l 5554 5534 l 5566 5549 l
 5578 5563 l 5591 5578 l 5603 5593 l 5616 5608 l 5629 5623 l
 5643 5639 l 5656 5654 l 5670 5669 l 5684 5684 l 5698 5699 l
 5711 5714 l 5725 5728 l 5738 5742 l 5751 5756 l 5764 5769 l
 5778 5783 l 5791 5796 l 5805 5810 l 5820 5824 l 5835 5838 l
 5851 5853 l 5867 5869 l 5884 5885 l 5902 5901 l 5920 5917 l
 5938 5933 l 5955 5949 l 5973 5965 l 5991 5980 l 6008 5995 l
 6025 6010 l 6041 6023 l 6057 6037 l 6073 6050 l 6088 6063 l
 6104 6076 l 6120 6089 l 6137 6102 l 6153 6115 l 6170 6128 l
 6188 6142 l 6205 6155 l 6223 6168 l 6240 6181 l 6257 6193 l
 6274 6205 l 6290 6216 l 6306 6226 l 6321 6236 l 6335 6246 l
 6349 6254 l 6363 6263 l 6377 6271 l 6392 6280 l 6408 6288 l
 6423 6296 l 6439 6304 l 6455 6313 l 6471 6320 l 6488 6328 l
 6504 6336 l 6520 6343 l 6536 6351 l 6552 6358 l 6567 6365 l
 6583 6371 l 6598 6378 l 6613 6385 l 6628 6392 l 6643 6399 l
 6660 6407 l 6677 6415 l 6695 6424 l 6714 6432 l 6733 6442 l
 6752 6451 l 6772 6461 l 6792 6470 l 6812 6479 l 6831 6488 l
 6850 6497 l 6869 6506 l 6887 6514 l 6905 6523 l 6921 6530 l
 6938 6537 l 6954 6544 l 6972 6552 l 6990 6560 l 7009 6568 l
 7028 6576 l 7048 6584 l 7069 6592 l 7089 6600 l 7110 6608 l
 7131 6616 l 7152 6624 l 7172 6632 l 7192 6639 l 7212 6646 l
 7232 6653 l 7253 6660 l 7271 6666 l 7290 6672 l 7309 6679 l
 7329 6685 l 7350 6692 l 7372 6699 l 7394 6705 l 7417 6712 l
 7440 6719 l 7464 6726 l 7487 6733 l 7511 6740 l 7534 6746 l
 7557 6752 l 7579 6758 l 7601 6764 l 7622 6770 l 7643 6775 l
 7663 6780 l 7683 6785 l 7702 6790 l 7722 6794 l 7741 6799 l
 7762 6804 l 7782 6808 l 7803 6813 l 7825 6818 l 7846 6822 l
 7869 6827 l 7891 6831 l 7913 6836 l 7935 6840 l 7957 6844 l
 7979 6848 l 8000 6852 l 8021 6856 l 8042 6859 l 8062 6863 l
 8082 6867 l 8103 6870 l 8123 6873 l 8144 6877 l 8166 6880 l
 8189 6884 l 8213 6888 l 8239 6892 l 8268 6897 l 8299 6902 l
 8332 6907 l 8367 6912 l 8404 6918 l 8440 6924 l 8475 6929 l
 8507 6934 l 8533 6938 l 8554 6941 l 8568 6943 l 8576 6944 l

 8580 6945 l gs col4 s gr 
/Times-Italic ff 360.00 scf sf
8175 7425 m
gs 1 -1 sc (yf\(x\)) col12 sh gr
$F2psEnd
rs

%%EndDocument

 endTexFig
 eop end
%%Page: 36 36
TeXDict begin @landscape 36 35 bop Blue Red -300 44 1906
34 v Blue White -304 3 a Fv(C)n(oor)l(dinate)44 b(D)o(escent)p
Blue White -1897 w(C)n(oor)l(dinate)g(D)o(escent)p Blue
White -300 -1 a(C)n(oor)l(dinate)g(D)o(escent)p Blue
White -300 7 a(C)n(oor)l(dinate)g(D)o(escent)p Blue -300
3 a(C)n(oor)l(dinate)g(D)o(escent)p Black 4919 206 a
Fr([B)n(r)m(eiman])p Blue OliveGreen Red -208 609 a Fs(\017)p
OliveGreen 49 w(f)p 47 456 117 4 v Fn(h)164 649 y Fl(1)247
609 y Fn(;)34 b(:)g(:)g(:)i(;)p 699 456 V 34 w(h)816
655 y Fi(N)973 609 y Fs(g)58 b Fm(=)p Blue 46 w Fu(space)47
b(of)p Red 2139 634 224 17 v Blue White 42 w(all)p Blue
White -215 w(all)p Blue White 2139 605 a(all)p Blue White
2139 613 a(all)p Blue 2139 609 a(all)f(w)o(eak)h(classi\002ers)p
Red -208 941 a Fs(\017)p Blue 49 w Fu(want)f(to)h(\002nd)p
OliveGreen 45 w Fn(\025)1234 981 y Fl(1)1318 941 y Fn(;)34
b(:)g(:)g(:)i(;)e(\025)1888 988 y Fi(N)p Blue 2092 941
a Fu(to)47 b(minimiz)o(e)p OliveGreen 1155 1371 a Fn(L)p
Fm(\()p Fn(\025)1484 1411 y Fl(1)1567 1371 y Fn(;)34
b(:)g(:)g(:)i(;)e(\025)2137 1418 y Fi(N)2295 1371 y Fm(\))57
b(=)2631 1262 y Fg(X)2663 1513 y Fi(i)2786 1371 y Fm(exp)3110
1099 y Fg(0)3110 1245 y(B)3110 1295 y(B)3110 1345 y(B)3110
1398 y(@)3182 1371 y Fs(\000)p Fn(y)3442 1413 y Fi(i)3538
1262 y Fg(X)3558 1513 y Fi(j)3692 1371 y Fn(\025)3810
1413 y Fi(j)p 3894 1218 117 4 v 3894 1371 a Fn(h)4010
1413 y Fi(j)4094 1371 y Fm(\()p Fn(x)4282 1413 y Fi(i)4343
1371 y Fm(\))4416 1099 y Fg(1)4416 1245 y(C)4416 1295
y(C)4416 1345 y(C)4416 1398 y(A)p Blue Red -208 2052
a Fs(\017)p Blue 49 w Fu(A)n(daB)o(oost)46 b(is)h(actually)f(doing)p
Red 2444 2077 1788 17 v Blue White 42 w(coor)l(dinate)i(descent)p
Blue White -1779 w(coor)l(dinate)f(descent)p Blue White
2444 2048 a(coor)l(dinate)h(descent)p Blue White 2444
2056 a(coor)l(dinate)g(descent)p Blue 2444 2052 a(coor)l(dinate)g
(descent)e(on)h(this)-56 2301 y(optimization)f(pr)o(oblem:)p
YellowOrange 38 2617 a Fp(\017)p Blue 48 w Fu(initially)-18
b(,)46 b(all)p OliveGreen 46 w Fn(\025)1337 2658 y Fi(j)1478
2617 y Fm(=)57 b(0)p Blue YellowOrange 38 2866 a Fp(\017)p
Blue 48 w Fu(each)48 b(r)o(ound:)57 b(choose)48 b(one)f(coor)l(dinate)p
OliveGreen 47 w Fn(\025)3621 2907 y Fi(j)p Blue 3751
2866 a Fu(\(corr)l(esponding)h(to)p OliveGreen 158 3115
a Fn(h)274 3149 y Fi(t)p Blue 340 3115 a Fu(\))f(and)f(update)g(\(incr)
l(ement)h(b)-5 b(y)p OliveGreen 45 w Fn(\013)3056 3149
y Fi(t)p Blue 3121 3115 a Fu(\))p YellowOrange 38 3364
a Fp(\017)p Blue 48 w Fu(choose)48 b(update)e(causing)i(biggest)f(decr)
l(ease)g(in)g(loss)p Red -208 3696 a Fs(\017)p Blue 49
w Fu(po)-6 b(w)o(er)r(ful)45 b(technique)j(for)f(minimizing)f(o)-6
b(v)o(er)48 b(huge)f(space)g(of)-56 3945 y(functions)p
eop end
%%Page: 37 37
TeXDict begin @landscape 37 36 bop Blue Red -300 162
2773 34 v Blue White -304 121 a Fv(F)n(unctional)43 b(G)l(radient)i(D)o
(escent)p Blue White -2763 w(F)n(unctional)f(G)l(radient)g(D)o(escent)p
Blue White -300 117 a(F)n(unctional)g(G)l(radient)g(D)o(escent)p
Blue White -300 125 a(F)n(unctional)g(G)l(radient)g(D)o(escent)p
Blue -300 121 a(F)n(unctional)g(G)l(radient)g(D)o(escent)p
Black 3770 327 a Fr([F)m(r)q(iedman])p Blue Black([M)n(ason)37
b(et)h(al.])p Blue Red -208 727 a Fs(\017)p Blue 49 w
Fu(want)46 b(to)h(minimiz)o(e)p OliveGreen 809 1075 a
Fn(L)p Fm(\()p Fn(f)22 b Fm(\))57 b(=)g Fn(L)p Fm(\()p
Fn(f)22 b Fm(\()p Fn(x)1999 1115 y Fl(1)2082 1075 y Fm(\))p
Fn(;)34 b(:)g(:)g(:)i(;)e(f)22 b Fm(\()p Fn(x)2917 1106
y Fi(m)3069 1075 y Fm(\)\))58 b(=)3479 966 y Fg(X)3510
1217 y Fi(i)3633 1075 y Fm(exp\()p Fs(\000)p Fn(y)4256
1117 y Fi(i)4317 1075 y Fn(f)22 b Fm(\()p Fn(x)4627 1117
y Fi(i)4689 1075 y Fm(\)\))p Blue Red -208 1756 a Fs(\017)p
Blue 49 w Fu(say)46 b(hav)o(e)h(curr)l(ent)h(estimate)p
OliveGreen 2368 1603 122 4 v 47 w Fn(f)p Blue 68 w Fu(and)e(want)g(to)g
(impr)o(o)-6 b(v)o(e)p Red -208 2088 a Fs(\017)p Blue
49 w Fu(to)47 b(do)f(gr)n(adient)h(descent,)f(would)g(like)g(update)p
OliveGreen 2018 2283 V 2018 2437 a Fn(f)79 b Fs( )p 2461
2283 V 57 w Fn(f)68 b Fs(\000)45 b Fn(\021)7 b Fs(r)3114
2485 y Fi(f)3220 2437 y Fn(L)p Fm(\()p 3431 2283 V Fn(f)22
b Fm(\))p Blue Red -208 3118 a Fs(\017)p Blue 49 w Fu(but)46
b(update)g(r)l(estr)r(icted)h(in)g(class)g(of)f(w)o(eak)g
(classi\002ers)p Red -208 3450 a Fs(\017)p Blue 49 w
Fu(so)h(choose)p OliveGreen 47 w Fn(h)1024 3485 y Fi(t)p
Blue 1136 3450 a Fu(\223)-17 b(closest)l(\224)47 b(to)p
OliveGreen 47 w Fs(r)2397 3498 y Fi(f)2503 3450 y Fn(L)p
Fm(\()p 2714 3296 V Fn(f)21 b Fm(\))p Blue Red -208 3782
a Fs(\017)p Blue 49 w Fu(equiv)o(alent)46 b(to)h(A)n(daB)o(oost)p
eop end
%%Page: 38 38
TeXDict begin @landscape 38 37 bop Blue Red -300 285
2865 34 v Blue White -304 244 a Fv(B)o(ene\002ts)44 b(of)f(M)-6
b(odel)42 b(F)-5 b(itting)46 b(V)t(iew)p Blue White -2856
w(B)o(ene\002ts)e(of)f(M)-6 b(odel)43 b(F)-5 b(itting)45
b(V)t(iew)p Blue White -300 240 a(B)o(ene\002ts)f(of)f(M)-6
b(odel)42 b(F)-5 b(itting)46 b(V)t(iew)p Blue White -300
248 a(B)o(ene\002ts)e(of)f(M)-6 b(odel)42 b(F)-5 b(itting)46
b(V)t(iew)p Blue -300 244 a(B)o(ene\002ts)e(of)f(M)-6
b(odel)42 b(F)-5 b(itting)46 b(V)t(iew)p Red -208 691
a Fs(\017)p Blue 49 w Fu(immediate)g(gener)n(alization)h(to)g(other)h
(loss)e(functions)p YellowOrange 38 1006 a Fp(\017)p
Blue 48 w Fu(e)l(.g.)58 b(squar)l(ed)47 b(err)o(or)g(for)p
Red 2156 1031 960 17 v Blue White 43 w(r)l(egr)l(ession)p
Blue White -950 w(r)l(egr)l(ession)p Blue White 2156
1002 a(r)l(egr)l(ession)p Blue White 2156 1010 a(r)l(egr)l(ession)p
Blue 2156 1006 a(r)l(egr)l(ession)p YellowOrange 38 1255
a Fp(\017)p Blue 48 w Fu(e)l(.g.)58 b(logistic)48 b(r)l(egr)l(ession)f
(\(b)-5 b(y)46 b(only)g(changing)i(one)e(line)h(of)158
1504 y(A)n(daB)o(oost\))p Red -208 1836 a Fs(\017)p Blue
49 w Fu(sensible)f(appr)o(oach)h(for)g(conv)o(er)r(ting)g(output)g(of)g
(boosting)f(into)p Red -56 2110 3096 17 v Blue White
-60 2085 a(conditional)g(pr)o(obability)f(estimates)p
Blue White -3087 w(conditional)h(pr)o(obability)f(estimates)p
Blue White -56 2081 a(conditional)h(pr)o(obability)f(estimates)p
Blue White -56 2089 a(conditional)h(pr)o(obability)f(estimates)p
Blue -56 2085 a(conditional)h(pr)o(obability)f(estimates)p
Red -208 2417 a Fs(\017)p Blue Red -56 2442 599 17 v
Blue White 45 w Fu(cav)o(eat)p Blue White -590 w(cav)o(eat)p
Blue White -56 2413 a(cav)o(eat)p Blue White -56 2421
a(cav)o(eat)p Blue -56 2417 a(cav)o(eat)q(:)57 b(wr)o(ong)47
b(to)f(view)h(A)n(daB)o(oost)f(as)p Red 3189 2442 345
17 v Blue White 43 w(just)p Blue White -336 w(just)p
Blue White 3189 2413 a(just)p Blue White 3189 2421 a(just)p
Blue 3189 2417 a(just)g(an)h(algor)r(ithm)g(for)-56 2666
y(minimizing)f(exponential)h(loss)p YellowOrange 38 2957
a Fp(\017)p Blue 48 w Fu(other)h(algor)r(ithms)f(for)g(minimizing)f
(same)h(loss)f(will)g(\(pr)o(o)-6 b(v)o(ably\))158 3206
y(giv)o(e)48 b(v)o(er)t(y)e(poor)h(per)r(for)r(mance)p
YellowOrange 38 3455 a Fp(\017)p Blue 48 w Fu(thus)n(,)g(this)g(loss)g
(function)g(cannot)g(explain)f(why)g(A)n(daB)o(oost)158
3704 y(\223)l(wor)o(ks)-8 b(\224)p eop end
%%Page: 39 39
TeXDict begin @landscape 39 38 bop Blue Red -300 3 3533
34 v Blue White -304 -39 a Fv(E)n(stimating)44 b(C)n(onditional)g(P)n
(r)o(obabilities)p Blue White -3524 w(E)n(stimating)h(C)n(onditional)e
(P)n(r)o(obabilities)p Blue White -300 -43 a(E)n(stimating)h(C)n
(onditional)g(P)n(r)o(obabilities)p Blue White -300 -35
a(E)n(stimating)g(C)n(onditional)g(P)n(r)o(obabilities)p
Blue -300 -39 a(E)n(stimating)g(C)n(onditional)g(P)n(r)o(obabilities)p
Black 3249 166 a Fr([F)m(r)q(iedman,)37 b(H)l(astie)i(&)f(T)-6
b(ibshir)n(ani])p Blue Red -208 567 a Fs(\017)p Blue
49 w Fu(often)47 b(want)f(to)g(estimate)p Red 2079 592
1033 17 v Blue White 43 w(pr)o(obability)p Blue White
-1026 w(pr)o(obability)p Blue White 2079 563 a(pr)o(obability)p
Blue White 2079 571 a(pr)o(obability)p Blue 2079 567
a(pr)o(obability)f(that)p OliveGreen 47 w Fn(y)64 b Fm(=)57
b(+1)p Blue 46 w Fu(giv)o(en)p OliveGreen 47 w Fn(x)p
Blue Red -208 899 a Fs(\017)p Blue 49 w Fu(A)n(daB)o(oost)46
b(minimiz)o(es)g(\(empir)r(ical)h(v)o(ersion)g(of)21
b(\):)p OliveGreen 164 1269 a Fm(E)294 1300 y Fi(x;y)563
1071 y Fg(2)563 1221 y(4)619 1269 y Fn(e)713 1184 y Fj(\000)p
Fi(y)6 b(f)18 b Fl(\()p Fi(x)p Fl(\))1258 1071 y Fg(3)1258
1221 y(5)1371 1269 y Fm(=)57 b(E)1707 1300 y Fi(x)1841
1071 y Fg(2)1841 1221 y(4)1896 1269 y Fm(P)34 b([)p Fn(y)64
b Fm(=)57 b(+1)p Fs(j)p Fn(x)p Fm(])34 b Fn(e)3077 1184
y Fj(\000)p Fi(f)18 b Fl(\()p Fi(x)p Fl(\))3580 1269
y Fm(+)46 b(P)34 b([)p Fn(y)64 b Fm(=)57 b Fs(\000)p
Fm(1)o Fs(j)p Fn(x)p Fm(])35 b Fn(e)4968 1184 y Fj(\000)p
Fi(f)18 b Fl(\()p Fi(x)p Fl(\))5425 1071 y Fg(3)5425
1221 y(5)p Blue -10 1628 a Fu(wher)l(e)p OliveGreen 47
w Fn(x;)34 b(y)p Blue 54 w Fu(r)n(andom)46 b(fr)o(om)h(tr)r(ue)g(distr)
r(ibution)p Red -208 1960 a Fs(\017)p Blue 49 w Fu(o)-6
b(v)o(er)p Red 393 1985 224 17 v Blue White 43 w(all)p
Blue White -216 w(all)p Blue White 393 1956 a(all)p Blue
White 393 1964 a(all)p Blue 393 1960 a(all)p OliveGreen
46 w Fn(f)p Blue 22 w Fu(,)46 b(minimiz)o(ed)f(when)p
OliveGreen 1656 2409 a Fn(f)22 b Fm(\()p Fn(x)p Fm(\))58
b(=)2313 2270 y(1)p 2313 2359 95 4 v 2313 2551 a(2)2463
2409 y Fs(\001)46 b Fm(ln)2758 2112 y Fg(0)2758 2258
y(B)2758 2308 y(B)2758 2358 y(B)2758 2407 y(B)2758 2461
y(@)2847 2270 y Fm(P)34 b([)o Fn(y)65 b Fm(=)57 b(+1)o
Fs(j)p Fn(x)p Fm(])p 2841 2359 1065 4 v 2841 2551 a(P)34
b([)o Fn(y)65 b Fm(=)57 b Fs(\000)p Fm(1)o Fs(j)p Fn(x)p
Fm(])3915 2112 y Fg(1)3915 2258 y(C)3915 2308 y(C)3915
2358 y(C)3915 2407 y(C)3915 2461 y(A)p Blue -10 2819
a Fu(or)p OliveGreen 1671 3103 a Fm(P)34 b([)p Fn(y)65
b Fm(=)57 b(+1)o Fs(j)p Fn(x)p Fm(])g(=)3433 2963 y(1)p
2997 3053 966 4 v 2997 3257 a(1)46 b(+)g Fn(e)3427 3192
y Fj(\000)p Fl(2)p Fi(f)18 b Fl(\()p Fi(x)p Fl(\))p Blue
Red -208 3738 a Fs(\017)p Blue 49 w Fu(so)-8 b(,)46 b(to)h(conv)o(er)r
(t)p OliveGreen 47 w Fn(f)p Blue 68 w Fu(output)g(b)-5
b(y)45 b(A)n(daB)o(oost)i(to)f(pr)o(obability)f(estimate)l(,)-56
3987 y(use)i(same)f(for)r(mula)p eop end
%%Page: 40 40
TeXDict begin @landscape 40 39 bop Blue Red -300 -101
1724 34 v Blue White -304 -142 a Fv(C)m(alibration)44
b(C)l(ur)6 b(v)m(e)p Blue White -1714 w(C)m(alibration)45
b(C)l(ur)6 b(v)m(e)p Blue White -300 -146 a(C)m(alibration)44
b(C)l(ur)6 b(v)m(e)p Blue White -300 -138 a(C)m(alibration)44
b(C)l(ur)6 b(v)m(e)p Blue -300 -142 a(C)m(alibration)44
b(C)l(ur)6 b(v)m(e)996 16 y
 26902104 18945146 3289088 3289088 26970521 19866091 startTexFig
 996 16 a
%%BeginDocument: PS/calibration.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot
%%DocumentFonts: Helvetica
%%BoundingBox: 50 50 410 302
%%EndComments
/gnudict 40 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/vshift -80 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 240 scalefont setfont
newpath
LTa
1152 361 M
5697 0 V
-5697 0 R
0 4558 V
LTb
1152 361 M
63 0 V
5634 0 R
-63 0 V
-5778 0 R
(0) Rshow
1152 1273 M
63 0 V
5634 0 R
-63 0 V
-5778 0 R
(0.2) Rshow
1152 2184 M
63 0 V
5634 0 R
-63 0 V
-5778 0 R
(0.4) Rshow
1152 3096 M
63 0 V
5634 0 R
-63 0 V
-5778 0 R
(0.6) Rshow
1152 4007 M
63 0 V
5634 0 R
-63 0 V
-5778 0 R
(0.8) Rshow
1152 4919 M
63 0 V
5634 0 R
-63 0 V
-5778 0 R
(1) Rshow
1152 361 M
0 63 V
0 4495 R
0 -63 V
0 -4735 R
(0) Cshow
2291 361 M
0 63 V
0 4495 R
0 -63 V
0 -4735 R
(0.2) Cshow
3431 361 M
0 63 V
0 4495 R
0 -63 V
0 -4735 R
(0.4) Cshow
4570 361 M
0 63 V
0 4495 R
0 -63 V
0 -4735 R
(0.6) Cshow
5710 361 M
0 63 V
0 4495 R
0 -63 V
0 -4735 R
(0.8) Cshow
6849 361 M
0 63 V
0 4495 R
0 -63 V
0 -4735 R
(1) Cshow
1152 361 M
5697 0 V
0 4558 V
-5697 0 V
0 -4558 V
LT0
2291 4007 M
(x) Rshow
2435 4007 M
432 0 V
1152 361 M
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
58 46 V
57 47 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 47 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 47 V
57 46 V
58 46 V
57 46 V
58 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 47 V
58 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
57 46 V
58 46 V
LT1
2291 3767 M
('test') Rshow
2579 3767 D
1158 363 D
1155 367 D
1154 367 D
1156 363 D
1155 364 D
1157 364 D
1154 367 D
1154 364 D
1154 364 D
1156 366 D
1157 367 D
1155 367 D
1155 365 D
1154 366 D
1152 365 D
1153 363 D
1155 366 D
1157 367 D
1156 366 D
1157 364 D
1157 367 D
1154 364 D
1156 366 D
1155 363 D
1156 364 D
1156 366 D
1152 364 D
1154 366 D
1156 366 D
1153 367 D
1153 365 D
1157 366 D
1152 367 D
1155 366 D
1154 366 D
1157 364 D
1154 364 D
1154 364 D
1157 367 D
1153 366 D
1152 367 D
1153 364 D
1153 365 D
1156 367 D
1153 367 D
1156 364 D
1153 366 D
1157 364 D
1154 365 D
1157 367 D
1152 366 D
1152 365 D
1157 365 D
1155 366 D
1154 366 D
1154 365 D
1155 365 D
1155 367 D
1157 363 D
1156 368 D
1157 365 D
1153 367 D
1158 364 D
1153 365 D
1156 363 D
1153 366 D
1156 364 D
1153 366 D
1156 367 D
1154 363 D
1155 366 D
1154 363 D
1158 367 D
1157 367 D
1157 365 D
1157 367 D
1157 363 D
1156 367 D
1153 367 D
1153 367 D
1157 365 D
1155 366 D
1156 366 D
1153 365 D
1155 365 D
1155 367 D
1152 375 D
1158 379 D
1156 378 D
1157 377 D
1153 377 D
1154 375 D
1156 375 D
1157 378 D
1158 375 D
1156 378 D
1155 375 D
1154 375 D
1156 377 D
1156 375 D
1152 383 D
1153 385 D
1153 385 D
1152 389 D
1157 389 D
1155 386 D
1155 389 D
1153 382 D
1153 362 D
1153 362 D
1154 364 D
1158 365 D
1157 363 D
1153 364 D
1152 361 D
1157 361 D
1153 361 D
1153 363 D
1153 362 D
1153 361 D
1153 365 D
1153 364 D
1157 363 D
1158 365 D
1155 362 D
1152 365 D
1157 361 D
1157 364 D
1155 361 D
1154 363 D
1152 362 D
1155 362 D
1154 364 D
1156 363 D
1158 365 D
1155 361 D
1156 364 D
1157 363 D
1157 365 D
1155 363 D
1158 363 D
1154 365 D
1155 362 D
1155 365 D
1153 365 D
1155 362 D
1154 365 D
1155 364 D
1156 362 D
1158 546 D
1153 363 D
1157 365 D
1158 364 D
1155 529 D
1155 565 D
1154 363 D
1154 546 D
1154 365 D
1157 364 D
1157 365 D
1157 362 D
1154 366 D
1154 365 D
1156 365 D
1153 363 D
1156 362 D
1158 362 D
1153 365 D
1158 545 D
1157 362 D
1155 361 D
1157 546 D
1157 365 D
1156 545 D
1157 544 D
1156 362 D
1156 364 D
1155 364 D
1156 365 D
1156 545 D
1156 548 D
1157 362 D
1156 364 D
1155 361 D
1155 365 D
1157 363 D
1160 365 D
1155 364 D
1160 363 D
1156 545 D
1160 364 D
1160 362 D
1157 365 D
1161 364 D
1161 362 D
1157 362 D
1158 546 D
1160 363 D
1159 364 D
1161 362 D
1161 547 D
1163 363 D
1164 547 D
1160 364 D
1161 362 D
1167 365 D
1165 364 D
1162 547 D
1167 547 D
1166 363 D
1165 546 D
1169 363 D
1167 544 D
1172 545 D
1172 363 D
1173 362 D
1172 545 D
1175 544 D
1174 728 D
1179 362 D
1181 364 D
1181 545 D
1185 362 D
1186 544 D
1189 364 D
1193 544 D
1194 362 D
1201 362 D
1203 545 D
1208 726 D
1214 362 D
1215 543 D
1222 546 D
1225 546 D
1232 547 D
1243 546 D
1249 361 D
1259 365 D
1265 544 D
1276 545 D
1293 546 D
1308 729 D
1326 545 D
1346 544 D
1364 727 D
1381 545 D
1412 362 D
1446 726 D
1483 546 D
1517 912 D
1558 546 D
1611 1277 D
1656 1275 D
1719 912 D
1787 730 D
1878 362 D
1957 1095 D
2044 1274 D
2115 1094 D
2221 1095 D
2358 1457 D
2496 1459 D
2637 1459 D
2827 1276 D
3006 2004 D
3201 2006 D
3345 2550 D
3568 2187 D
3768 2370 D
4015 2551 D
4290 2735 D
4673 2914 D
4988 3281 D
5387 3100 D
5779 3463 D
6105 3100 D
6309 4191 D
6482 3647 D
6621 4193 D
6778 4738 D
6794 4739 D
6825 4374 D
6849 4919 D
LT2
2291 3527 M
('train') Rshow
2579 3527 A
1158 361 A
1155 365 A
1154 365 A
1156 361 A
1155 362 A
1157 362 A
1154 365 A
1154 362 A
1154 362 A
1156 364 A
1157 365 A
1155 364 A
1155 363 A
1154 364 A
1152 363 A
1153 361 A
1155 364 A
1157 365 A
1156 364 A
1157 362 A
1157 365 A
1154 362 A
1156 364 A
1155 361 A
1156 362 A
1156 364 A
1152 362 A
1154 363 A
1156 364 A
1153 365 A
1153 363 A
1157 364 A
1152 365 A
1155 364 A
1154 363 A
1157 362 A
1154 362 A
1154 361 A
1157 365 A
1153 364 A
1152 365 A
1153 361 A
1153 363 A
1156 365 A
1153 364 A
1156 362 A
1153 364 A
1157 362 A
1154 363 A
1157 365 A
1152 364 A
1152 363 A
1157 363 A
1155 364 A
1154 364 A
1154 363 A
1155 363 A
1155 364 A
1157 361 A
1156 365 A
1157 363 A
1153 365 A
1158 362 A
1153 363 A
1156 361 A
1153 364 A
1156 362 A
1153 364 A
1156 365 A
1154 361 A
1155 364 A
1154 361 A
1158 365 A
1157 365 A
1157 363 A
1157 364 A
1157 361 A
1156 365 A
1153 365 A
1153 365 A
1157 363 A
1155 364 A
1156 364 A
1153 363 A
1155 363 A
1155 365 A
1152 365 A
1158 365 A
1156 365 A
1157 364 A
1153 364 A
1154 361 A
1156 362 A
1157 365 A
1158 362 A
1156 365 A
1155 362 A
1154 362 A
1156 364 A
1156 362 A
1152 362 A
1153 361 A
1153 361 A
1152 365 A
1157 365 A
1155 362 A
1155 365 A
1153 362 A
1153 362 A
1153 362 A
1154 364 A
1158 365 A
1157 363 A
1153 364 A
1152 361 A
1157 361 A
1153 361 A
1153 363 A
1153 362 A
1153 361 A
1153 365 A
1153 364 A
1157 363 A
1158 365 A
1155 362 A
1152 365 A
1157 361 A
1157 364 A
1155 361 A
1154 363 A
1152 362 A
1155 362 A
1154 364 A
1156 363 A
1157 365 A
1154 361 A
1156 364 A
1157 363 A
1157 365 A
1155 363 A
1157 363 A
1154 365 A
1155 362 A
1155 365 A
1153 365 A
1154 362 A
1153 365 A
1155 364 A
1156 362 A
1158 364 A
1153 363 A
1156 365 A
1157 364 A
1154 365 A
1154 365 A
1154 363 A
1154 364 A
1153 365 A
1156 364 A
1156 365 A
1156 362 A
1153 366 A
1153 365 A
1155 365 A
1152 363 A
1155 362 A
1157 362 A
1152 365 A
1157 363 A
1156 362 A
1154 361 A
1156 364 A
1156 365 A
1155 363 A
1155 362 A
1154 362 A
1155 364 A
1154 364 A
1154 365 A
1155 363 A
1154 365 A
1155 362 A
1153 364 A
1153 361 A
1152 365 A
1154 363 A
1157 365 A
1152 364 A
1156 363 A
1153 363 A
1156 364 A
1156 362 A
1153 365 A
1156 364 A
1157 362 A
1152 362 A
1153 364 A
1155 363 A
1153 364 A
1155 362 A
1154 365 A
1156 363 A
1157 364 A
1152 364 A
1153 362 A
1158 365 A
1156 364 A
1152 365 A
1156 365 A
1155 363 A
1153 363 A
1156 363 A
1153 362 A
1157 363 A
1156 363 A
1156 362 A
1153 363 A
1155 361 A
1152 363 A
1156 362 A
1155 364 A
1153 362 A
1154 362 A
1153 361 A
1153 364 A
1155 362 A
1152 362 A
1155 362 A
1154 363 A
1155 361 A
1156 362 A
1153 361 A
1155 364 A
1153 364 A
1152 365 A
1157 364 A
1155 361 A
1157 365 A
1154 361 A
1152 363 A
1156 364 A
1156 364 A
1156 362 A
1157 362 A
1156 363 A
1153 363 A
1155 362 A
1155 361 A
1157 364 A
1156 365 A
1154 363 A
1156 365 A
1155 364 A
1157 365 A
1156 365 A
1154 362 A
1155 365 A
1158 362 A
1153 365 A
1154 365 A
1154 363 A
1154 365 A
1156 365 A
1157 364 A
1155 364 A
1155 365 A
1152 362 A
1157 364 A
1157 364 A
1155 363 A
1155 364 A
1156 361 A
1156 364 A
1154 365 A
1155 364 A
1157 365 A
1153 362 A
1156 365 A
1153 364 A
1155 364 A
1153 362 A
1155 362 A
1154 363 A
1157 362 A
1153 363 A
1155 364 A
1153 362 A
1156 365 A
1152 361 A
1156 364 A
1156 364 A
1155 365 A
1157 362 A
1156 362 A
1157 362 A
1157 366 A
1154 363 A
1153 365 A
1157 362 A
1157 361 A
1155 363 A
1156 364 A
1157 363 A
1155 365 A
1155 362 A
1154 362 A
1157 365 A
1153 365 A
1152 365 A
1152 365 A
1153 365 A
1157 364 A
1154 362 A
1154 363 A
1154 362 A
1154 365 A
1157 362 A
1155 364 A
1156 365 A
1155 362 A
1153 365 A
1155 361 A
1157 364 A
1157 365 A
1155 365 A
1156 364 A
1156 364 A
1153 362 A
1157 363 A
1155 362 A
1157 365 A
1157 364 A
1152 363 A
1154 364 A
1154 364 A
1157 363 A
1156 363 A
1155 363 A
1152 363 A
1154 363 A
1153 362 A
1153 365 A
1157 363 A
1153 364 A
1157 364 A
1156 364 A
1156 364 A
1154 364 A
1153 364 A
1154 363 A
1154 362 A
1152 361 A
1155 364 A
1155 364 A
1158 365 A
1153 362 A
1152 362 A
1153 365 A
1155 362 A
1155 363 A
1152 362 A
1153 364 A
1152 363 A
1154 362 A
1152 364 A
1156 363 A
1157 365 A
1155 363 A
1154 365 A
1152 363 A
1157 362 A
1155 365 A
1154 364 A
1156 365 A
1158 362 A
1154 361 A
1155 363 A
1156 364 A
1157 365 A
1157 365 A
1156 363 A
1154 363 A
1154 365 A
1157 364 A
1157 365 A
1153 364 A
1153 364 A
1155 363 A
1154 363 A
1154 362 A
1156 364 A
1154 362 A
1153 366 A
1157 362 A
1158 364 A
1153 364 A
1153 363 A
1152 363 A
1154 365 A
1153 362 A
1157 363 A
1157 361 A
1158 363 A
1155 362 A
1156 365 A
1156 363 A
1156 365 A
1155 365 A
1158 363 A
1153 365 A
1152 362 A
1155 362 A
1156 364 A
1156 361 A
1155 365 A
1154 363 A
1154 362 A
1155 362 A
1155 362 A
1156 362 A
1152 362 A
1156 365 A
1154 362 A
1156 362 A
1156 365 A
1153 364 A
1152 364 A
1158 365 A
1154 364 A
1157 365 A
1156 362 A
1154 361 A
1154 365 A
1154 365 A
1152 361 A
1153 362 A
1154 365 A
1157 364 A
1153 364 A
1157 365 A
1155 366 A
1156 363 A
1156 364 A
1154 361 A
1154 362 A
1157 361 A
1154 362 A
1153 364 A
1153 363 A
1156 362 A
1155 365 A
1154 365 A
1156 362 A
1154 365 A
1157 362 A
1157 363 A
1153 363 A
1157 365 A
1153 362 A
1157 364 A
1154 365 A
1156 365 A
1152 365 A
1155 362 A
1154 362 A
1154 365 A
1153 365 A
1156 365 A
1152 362 A
1157 365 A
1154 364 A
1154 363 A
1153 362 A
1154 363 A
1155 363 A
1158 365 A
1153 364 A
1156 362 A
1155 363 A
1154 365 A
1155 364 A
1156 364 A
1155 363 A
1155 364 A
1155 363 A
1155 365 A
1153 365 A
1154 362 A
1153 365 A
1156 364 A
1153 364 A
1156 362 A
1154 363 A
1154 365 A
1157 364 A
1156 363 A
1154 363 A
1152 365 A
1156 364 A
1155 362 A
1158 362 A
1153 361 A
1153 364 A
1154 363 A
1154 362 A
1153 363 A
1157 365 A
1156 362 A
1154 361 A
1152 362 A
1157 364 A
1155 362 A
1152 364 A
1153 365 A
1153 364 A
1153 362 A
1157 362 A
1154 365 A
1157 364 A
1154 362 A
1157 363 A
1156 364 A
1154 363 A
1157 364 A
1155 365 A
1156 363 A
1156 362 A
1155 364 A
1157 364 A
1155 361 A
1155 364 A
1153 363 A
1157 363 A
1154 364 A
1154 364 A
1158 362 A
1153 364 A
1157 363 A
1153 365 A
1152 364 A
1157 364 A
1158 363 A
1158 363 A
1153 365 A
1154 363 A
1157 365 A
1153 362 A
1153 361 A
1156 363 A
1157 365 A
1153 364 A
1153 362 A
1155 365 A
1156 364 A
1157 364 A
1153 364 A
1155 362 A
1152 363 A
1156 361 A
1154 361 A
1156 362 A
1157 365 A
1154 365 A
1157 361 A
1155 364 A
1158 364 A
1154 361 A
1157 365 A
1152 364 A
1154 365 A
1155 364 A
1155 365 A
1157 363 A
1154 363 A
1155 364 A
1155 362 A
1157 362 A
1158 362 A
1153 364 A
1153 364 A
1154 362 A
1154 364 A
1153 362 A
1155 362 A
1157 365 A
1153 362 A
1155 364 A
1153 362 A
1152 364 A
1156 364 A
1153 362 A
1156 361 A
1155 364 A
1154 365 A
1155 363 A
1155 365 A
1156 364 A
1155 365 A
1158 361 A
1153 365 A
1157 362 A
1153 363 A
1157 363 A
1155 365 A
1158 362 A
1155 362 A
1155 362 A
1154 361 A
1157 363 A
1157 362 A
1152 362 A
1153 364 A
1152 364 A
1155 365 A
1156 364 A
1157 363 A
1152 365 A
1157 365 A
1154 363 A
1156 362 A
1156 361 A
1154 362 A
1154 364 A
1154 361 A
1153 361 A
1154 362 A
1154 363 A
1157 363 A
1152 363 A
1154 364 A
1153 362 A
1153 362 A
1153 365 A
1158 363 A
1154 364 A
1156 365 A
1157 365 A
1153 361 A
1156 362 A
1153 364 A
1155 363 A
1157 364 A
1158 364 A
1153 365 A
1153 363 A
1156 362 A
1156 364 A
1154 364 A
1155 362 A
1158 365 A
1158 363 A
1156 364 A
1155 364 A
1157 361 A
1153 365 A
1157 363 A
1155 364 A
1153 363 A
1155 362 A
1155 363 A
1157 365 A
1156 362 A
1156 365 A
1158 362 A
1154 365 A
1158 362 A
1155 364 A
1158 365 A
1154 364 A
1158 363 A
1156 365 A
1157 361 A
1155 365 A
1156 365 A
1154 365 A
1154 365 A
1157 365 A
1154 363 A
1157 361 A
1156 361 A
1158 363 A
1154 363 A
1153 362 A
1154 363 A
1158 362 A
1157 364 A
1153 363 A
1157 363 A
1155 362 A
1155 363 A
1154 364 A
1155 365 A
1156 364 A
1155 362 A
1157 365 A
1155 364 A
1156 364 A
1153 364 A
1158 363 A
1158 365 A
1157 364 A
1156 364 A
1154 362 A
1155 364 A
1156 364 A
1154 364 A
1154 363 A
1156 364 A
1154 365 A
1153 365 A
1158 363 A
1156 363 A
1154 364 A
1158 365 A
1154 365 A
1158 364 A
1157 362 A
1156 365 A
1156 364 A
1155 365 A
1155 363 A
1156 364 A
1159 365 A
1155 361 A
1158 363 A
1159 365 A
1158 363 A
1154 365 A
1154 361 A
1158 362 A
1159 364 A
1159 363 A
1158 363 A
1155 362 A
1154 364 A
1154 363 A
1154 364 A
1154 365 A
1157 363 A
1154 363 A
1158 366 A
1155 364 A
1157 362 A
1156 364 A
1156 362 A
1159 362 A
1159 365 A
1158 364 A
1156 365 A
1160 363 A
1157 361 A
1159 363 A
1158 365 A
1157 362 A
1156 363 A
1158 361 A
1157 365 A
1158 361 A
1155 361 A
1158 363 A
1157 364 A
1158 362 A
1157 363 A
1155 365 A
1156 365 A
1156 364 A
1155 361 A
1156 364 A
1155 364 A
1160 363 A
1156 363 A
1157 364 A
1156 361 A
1159 363 A
1155 363 A
1159 363 A
1161 363 A
1159 363 A
1160 365 A
1156 361 A
1160 363 A
1160 365 A
1158 365 A
1158 363 A
1159 363 A
1161 365 A
1160 362 A
1158 361 A
1157 362 A
1158 363 A
1159 362 A
1161 363 A
1159 364 A
1161 363 A
1158 362 A
1158 362 A
1159 362 A
1162 361 A
1157 363 A
1160 365 A
1161 363 A
1160 364 A
1161 361 A
1161 361 A
1158 361 A
1159 364 A
1158 362 A
1158 364 A
1162 361 A
1158 362 A
1159 363 A
1160 365 A
1161 363 A
1162 364 A
1163 363 A
1161 364 A
1163 362 A
1160 364 A
1159 361 A
1163 363 A
1159 362 A
1159 362 A
1162 363 A
1159 363 A
1161 362 A
1163 364 A
1162 362 A
1162 362 A
1162 363 A
1159 363 A
1164 364 A
1161 365 A
1163 364 A
1163 365 A
1164 363 A
1162 365 A
1163 363 A
1161 362 A
1165 362 A
1164 362 A
1163 363 A
1166 366 A
1164 363 A
1162 362 A
1166 362 A
1165 364 A
1166 365 A
1164 363 A
1165 365 A
1165 362 A
1164 365 A
1168 365 A
1165 362 A
1163 362 A
1165 364 A
1166 364 A
1169 364 A
1167 363 A
1164 365 A
1168 365 A
1165 362 A
1167 361 A
1166 365 A
1168 364 A
1170 361 A
1170 361 A
1171 365 A
1171 362 A
1172 365 A
1169 362 A
1170 362 A
1172 363 A
1171 364 A
1167 365 A
1171 364 A
1172 364 A
1168 362 A
1173 362 A
1169 363 A
1174 365 A
1172 364 A
1170 362 A
1173 365 A
1174 364 A
1176 362 A
1176 363 A
1173 365 A
1172 361 A
1174 361 A
1177 365 A
1177 363 A
1177 365 A
1177 363 A
1174 364 A
1179 365 A
1178 362 A
1179 364 A
1179 362 A
1180 362 A
1181 364 A
1179 364 A
1178 364 A
1181 361 A
1182 365 A
1180 363 A
1185 365 A
1180 364 A
1185 364 A
1182 410 A
1184 365 A
1186 361 A
1184 362 A
1188 387 A
1187 386 A
1184 363 A
1190 363 A
1186 361 A
1186 364 A
1187 364 A
1191 362 A
1190 363 A
1190 362 A
1190 365 A
1196 362 A
1195 408 A
1193 408 A
1195 363 A
1197 362 A
1195 408 A
1198 362 A
1199 363 A
1200 364 A
1200 364 A
1200 364 A
1201 410 A
1205 409 A
1202 366 A
1206 362 A
1208 364 A
1206 363 A
1205 364 A
1210 409 A
1212 363 A
1211 407 A
1212 407 A
1212 362 A
1215 365 A
1217 362 A
1216 362 A
1219 456 A
1221 455 A
1220 362 A
1222 408 A
1223 454 A
1227 411 A
1223 498 A
1228 365 A
1229 363 A
1229 499 A
1233 361 A
1232 361 A
1234 361 A
1239 362 A
1237 363 A
1240 361 A
1241 408 A
1245 410 A
1246 362 A
1250 361 A
1251 411 A
1249 410 A
1257 409 A
1257 454 A
1257 457 A
1263 456 A
1267 361 A
1269 362 A
1268 365 A
1273 681 A
1276 639 A
1279 455 A
1282 411 A
1286 456 A
1287 408 A
1289 411 A
1294 498 A
1300 453 A
1303 499 A
1306 365 A
1308 499 A
1314 499 A
1316 501 A
1322 545 A
1326 544 A
1331 365 A
1336 544 A
1338 499 A
1341 411 A
1345 408 A
1351 681 A
1355 454 A
1360 452 A
1367 593 A
1371 453 A
1379 592 A
1383 455 A
1383 407 A
1390 546 A
1398 501 A
1405 635 A
1413 500 A
1419 589 A
1430 682 A
1437 639 A
1443 692 A
1446 627 A
1457 818 A
1467 499 A
1472 636 A
1483 680 A
1495 681 A
1503 548 A
1511 791 A
1522 757 A
1531 863 A
1545 776 A
1554 589 A
1566 819 A
1574 1003 A
1585 589 A
1595 911 A
1611 683 A
1623 820 A
1638 590 A
1652 728 A
1660 1095 A
1677 1003 A
1695 1048 A
1709 1001 A
1724 726 A
1744 909 A
1757 1000 A
1777 999 A
1795 1321 A
1816 955 A
1834 954 A
1857 728 A
1876 776 A
1896 1367 A
1915 1046 A
1938 1252 A
1957 1071 A
1979 1000 A
2006 1273 A
2028 1459 A
2047 1228 A
2072 1046 A
2105 1365 A
2134 1031 A
2163 1562 A
2193 1310 A
2218 1469 A
2254 1820 A
2286 1595 A
2322 1687 A
2355 1455 A
2395 1867 A
2439 1368 A
2481 1365 A
2527 1912 A
2563 1684 A
2603 1821 A
2642 1774 A
2688 1732 A
2730 2005 A
2783 2116 A
2821 1707 A
2869 2325 A
2915 2186 A
2966 2459 A
3016 2188 A
3074 2506 A
3131 2275 A
3190 2370 A
3248 2551 A
3313 2551 A
3366 2414 A
3412 2686 A
3468 2278 A
3525 2553 A
3584 2871 A
3661 2689 A
3725 2962 A
3801 3280 A
3869 2778 A
3942 2778 A
4001 3191 A
4071 2869 A
4143 2779 A
4218 3082 A
4304 2906 A
4393 3531 A
4477 3236 A
4555 3237 A
4644 3326 A
4738 3281 A
4813 2872 A
4902 3598 A
4978 2959 A
5054 3281 A
5126 3554 A
5206 3828 A
5304 3370 A
5392 3736 A
5466 4103 A
5545 3736 A
5622 4192 A
5694 3964 A
5764 3828 A
5836 4329 A
5906 4009 A
5955 4237 A
6021 4283 A
6087 4102 A
6146 4419 A
6210 4285 A
6268 4010 A
6305 4555 A
6352 4328 A
6405 4464 A
6449 4556 A
6494 4509 A
6527 4831 A
6565 4693 A
6595 4787 A
6628 4738 A
6651 4878 A
6673 4693 A
6690 4646 A
6702 4650 A
6716 4786 A
6724 4829 A
6731 4875 A
6744 4874 A
6755 4875 A
6763 4877 A
6783 4876 A
6784 4831 A
6790 4878 A
6801 4877 A
6811 4875 A
6810 4875 A
6849 4919 A
stroke
grestore
end
showpage

%%EndDocument

 endTexFig
 Red -208 2773 a Fs(\017)p Blue 49 w Fu(or)l(der)47 b(examples)f(b)-5
b(y)p OliveGreen 45 w Fn(f)p Blue 69 w Fu(v)o(alue)46
b(output)h(b)-5 b(y)45 b(A)n(daB)o(oost)p Red -208 3105
a Fs(\017)p Blue 49 w Fu(br)l(eak)i(into)f(bins)g(of)h(siz)o(e)p
OliveGreen 46 w Fn(r)p Blue Red -208 3437 a Fs(\017)p
Blue 49 w Fu(for)g(each)g(bin,)f(plot)g(a)g(point:)p
OliveGreen YellowOrange 38 3727 a Fp(\017)p OliveGreen
48 w Fn(x)p Blue Fu(-v)o(alue:)58 b(av)o(er)n(age)47
b(estimated)g(pr)o(obability)d(of)j(examples)f(in)h(bin)p
OliveGreen YellowOrange 38 3976 a Fp(\017)p OliveGreen
48 w Fn(y)p Blue 7 w Fu(-v)o(alue:)58 b(actual)47 b(fr)n(action)g(of)f
(positiv)o(e)h(examples)f(in)h(bin)p eop end
%%Page: 41 41
TeXDict begin @landscape 41 40 bop Blue Red -300 1436
3526 34 v Blue White -304 1394 a Fv(O)o(ther)43 b(W)-15
b(ays)44 b(to)f(Think)h(about)g(A)n(daB)o(oost)p Blue
White -3517 w(O)o(ther)g(W)-15 b(ays)43 b(to)h(Think)g(about)g(A)n(daB)
o(oost)p Blue White -300 1390 a(O)o(ther)g(W)-15 b(ays)43
b(to)h(Think)f(about)h(A)n(daB)o(oost)p Blue White -300
1398 a(O)o(ther)g(W)-15 b(ays)43 b(to)h(Think)f(about)h(A)n(daB)o(oost)
p Blue -300 1394 a(O)o(ther)g(W)-15 b(ays)43 b(to)h(Think)f(about)h(A)n
(daB)o(oost)p Red -208 1841 a Fs(\017)p Blue 49 w Fu(dynamical)h
(systems)p Red -208 2173 a Fs(\017)p Blue 49 w Fu(statistical)i
(consistency)p Red -208 2506 a Fs(\017)p Blue 49 w Fu(maximum)f(entr)o
(op)-5 b(y)p eop end
%%Page: 42 42
TeXDict begin @landscape 42 41 bop Blue Red 671 1000
4059 34 v Blue White 666 958 a Fv(Exper)r(iments,)44
b(A)l(pplications)g(and)g(Extensions)p Blue White -4050
w(Exper)r(iments,)f(A)l(pplications)i(and)e(Extensions)p
Blue White 671 954 a(Exper)r(iments,)g(A)l(pplications)i(and)e
(Extensions)p Blue White 671 962 a(Exper)r(iments,)g(A)l(pplications)i
(and)e(Extensions)p Blue 671 958 a(Exper)r(iments,)g(A)l(pplications)i
(and)e(Extensions)p Red 2209 1586 a Fj(\017)p Blue 49
w Fr(basic)c(exper)q(iments)p Red 2209 1876 a Fj(\017)p
Blue 49 w Fr(multiclass)h(classi\002cation)p Red 2209
2167 a Fj(\017)p Blue 49 w Fr(con\002dence-r)n(ated)e(pr)m(edictions)p
Red 2209 2457 a Fj(\017)p Blue 49 w Fr(text)g(categor)q(ization)h(/)g
(spoken-dialogue)2344 2665 y(systems)p Red 2209 2955
a Fj(\017)p Blue 49 w Fr(incorpor)n(ating)g(pr)q(ior)g(kno)-5
b(wledge)p Red 2209 3246 a Fj(\017)p Blue 49 w Fr(activ)o(e)39
b(lear)q(ning)p Red 2209 3537 a Fj(\017)p Blue 49 w Fr(face)f
(detection)p eop end
%%Page: 43 43
TeXDict begin @landscape 43 42 bop Blue Red -300 -17
3199 34 v Blue White -304 -59 a Fv(P)n(ractical)44 b(A)n(dv)m(antages)h
(of)e(A)n(daB)o(oost)p Blue White -3191 w(P)n(ractical)i(A)n(dv)m
(antages)f(of)f(A)n(daB)o(oost)p Blue White -300 -63
a(P)n(ractical)h(A)n(dv)m(antages)h(of)e(A)n(daB)o(oost)p
Blue White -300 -55 a(P)n(ractical)h(A)n(dv)m(antages)h(of)e(A)n(daB)o
(oost)p Blue -300 -59 a(P)n(ractical)h(A)n(dv)m(antages)h(of)e(A)n(daB)
o(oost)p Red -208 388 a Fs(\017)p Blue Red -56 413 336
17 v Blue White 45 w Fu(fast)p Blue White -327 w(fast)p
Blue White -56 384 a(fast)p Blue White -56 392 a(fast)p
Blue -56 388 a(fast)p Red -208 721 a Fs(\017)p Blue Red
-56 745 631 17 v Blue White 45 w Fu(simple)p Blue White
-623 w(simple)p Blue White -56 717 a(simple)p Blue White
-56 725 a(simple)p Blue -56 721 a(simple)j(and)f(easy)i(to)f(pr)o(ogr)n
(am)p Red -208 1053 a Fs(\017)p Blue Red -56 1078 1358
17 v Blue White 45 w Fu(no)g(par)n(ameters)p Blue White
-1349 w(no)h(par)n(ameters)p Blue White -56 1049 a(no)f(par)n(ameters)p
Blue White -56 1057 a(no)g(par)n(ameters)p Blue -56 1053
a(no)g(par)n(ameters)h(to)g(tune)g(\(ex)n(cept)p OliveGreen
47 w Fn(T)p Blue 28 w Fu(\))p Red -208 1385 a Fs(\017)p
Blue Red -56 1410 680 17 v Blue White 45 w Fu(\003exible)p
Blue White -672 w(\003exible)p Blue White -56 1381 a(\003exible)p
Blue White -56 1389 a(\003exible)p Blue -56 1385 a(\003exible)f(\227)g
(can)h(combine)g(with)p Red 2646 1410 341 17 v Blue White
42 w(any)p Blue White -333 w(any)p Blue White 2646 1381
a(any)p Blue White 2646 1389 a(any)p Blue 2646 1385 a(any)f(lear)r
(ning)h(algor)r(ithm)p Red -208 1717 a Fs(\017)p Blue
Red -56 1742 1816 17 v Blue White 45 w Fu(no)f(pr)r(ior)h(kno)-6
b(wledge)p Blue White -1808 w(no)47 b(pr)r(ior)f(kno)-6
b(wledge)p Blue White -56 1713 a(no)46 b(pr)r(ior)h(kno)-6
b(wledge)p Blue White -56 1721 a(no)46 b(pr)r(ior)h(kno)-6
b(wledge)p Blue -56 1717 a(no)46 b(pr)r(ior)h(kno)-6
b(wledge)46 b(needed)g(about)h(w)o(eak)f(lear)r(ner)p
Red -208 2049 a Fs(\017)p Blue Red -56 2074 1648 17 v
Blue White 45 w Fu(pr)o(o)-6 b(v)o(ably)44 b(effectiv)o(e)p
Blue White -1638 w(pr)o(o)-6 b(v)o(ably)45 b(effectiv)o(e)p
Blue White -56 2045 a(pr)o(o)-6 b(v)o(ably)45 b(effectiv)o(e)p
Blue White -56 2053 a(pr)o(o)-6 b(v)o(ably)45 b(effectiv)o(e)p
Blue -56 2049 a(pr)o(o)-6 b(v)o(ably)45 b(effectiv)o(e)q(,)h(pr)o(o)-6
b(vided)45 b(can)i(consistently)g(\002nd)f(r)o(ough)h(r)r(ules)-56
2298 y(of)f(thumb)p YellowOrange -97 2589 a Fs(!)p Blue
48 w Fu(shift)h(in)g(mind)f(set)g(\227)g(goal)h(no)-6
b(w)46 b(is)h(mer)l(ely)e(to)i(\002nd)f(classi\002ers)158
2838 y(bar)l(ely)g(better)h(than)g(r)n(andom)f(guessing)p
Red -208 3170 a Fs(\017)p Blue Red -56 3195 783 17 v
Blue White 45 w Fu(v)o(ersatile)p Blue White -774 w(v)o(ersatile)p
Blue White -56 3166 a(v)o(ersatile)p Blue White -56 3174
a(v)o(ersatile)p Blue -56 3170 a(v)o(ersatile)p YellowOrange
38 3460 a Fp(\017)p Blue 48 w Fu(can)h(use)g(with)g(data)f(that)h(is)g
(textual,)f(numer)r(ic,)h(discr)l(ete)l(,)g(etc)n(.)p
YellowOrange 38 3709 a Fp(\017)p Blue 48 w Fu(has)g(been)g(extended)f
(to)h(lear)r(ning)f(pr)o(oblems)g(w)o(ell)f(bey)o(ond)158
3958 y(binar)t(y)h(classi\002cation)p eop end
%%Page: 44 44
TeXDict begin @landscape 44 43 bop Blue Red -300 647
744 34 v Blue White -304 605 a Fv(C)m(av)m(eats)p Blue
White -734 w(C)m(av)m(eats)p Blue White -300 601 a(C)m(av)m(eats)p
Blue White -300 609 a(C)m(av)m(eats)p Blue -300 605 a(C)m(av)m(eats)p
Red -208 1052 a Fs(\017)p Blue 49 w Fu(per)r(for)r(mance)46
b(of)h(A)n(daB)o(oost)f(depends)g(on)p Red 3519 1077
411 17 v Blue White 42 w(data)p Blue White -403 w(data)p
Blue White 3519 1048 a(data)p Blue White 3519 1056 a(data)p
Blue 3519 1052 a(data)g(and)p Red 4382 1077 1195 17 v
Blue White 42 w(w)o(eak)g(lear)r(ner)p Blue White -1186
w(w)o(eak)h(lear)r(ner)p Blue White 4382 1048 a(w)o(eak)f(lear)r(ner)p
Blue White 4382 1056 a(w)o(eak)g(lear)r(ner)p Blue 4382
1052 a(w)o(eak)g(lear)r(ner)p Red -208 1385 a Fs(\017)p
Blue 49 w Fu(consistent)h(with)g(theor)t(y)-18 b(,)47
b(A)n(daB)o(oost)f(can)p Red 3435 1409 292 17 v Blue
White 43 w(fail)p Blue White -284 w(fail)p Blue White
3435 1381 a(fail)p Blue White 3435 1389 a(fail)p Blue
3435 1385 a(fail)g(if)p YellowOrange 38 1675 a Fp(\017)p
Blue 48 w Fu(w)o(eak)h(classi\002ers)g(too)g(complex)p
Red 86 1945 a Fs(!)p Blue 48 w Fu(o)-6 b(v)o(er)r(\002tting)p
YellowOrange 38 2215 a Fp(\017)p Blue 48 w Fu(w)o(eak)47
b(classi\002ers)g(too)g(w)o(eak)f(\()p OliveGreen Fn(\015)2701
2250 y Fi(t)2824 2215 y Fs(!)57 b Fm(0)p Blue 46 w Fu(too)47
b(quickly\))p Red 86 2485 a Fs(!)p Blue 48 w Fu(under)r(\002tting)p
Red 86 2754 a Fs(!)p Blue 48 w Fu(lo)-6 b(w)46 b(mar)o(gins)p
Red 46 w Fs(!)p Blue 46 w Fu(o)-6 b(v)o(er)r(\002tting)p
Red -208 3086 a Fs(\017)p Blue 49 w Fu(empir)r(ically)-18
b(,)45 b(A)n(daB)o(oost)i(seems)f(especially)g(susceptible)h(to)-56
3336 y(unifor)r(m)f(noise)p eop end
%%Page: 45 45
TeXDict begin @landscape 45 44 bop Blue Red -300 338
1661 34 v Blue White -304 297 a Fv(UCI)44 b(Exper)r(iments)p
Blue White -1652 w(UCI)h(Exper)r(iments)p Blue White
-300 293 a(UCI)f(Exper)r(iments)p Blue White -300 301
a(UCI)g(Exper)r(iments)p Blue -300 297 a(UCI)g(Exper)r(iments)p
Black 4639 503 a Fr([with)39 b(F)m(r)m(eund])p Blue Red
-208 903 a Fs(\017)p Blue 49 w Fu(tested)46 b(A)n(daB)o(oost)h(on)f
(UCI)i(benchmar)o(ks)p Red -208 1235 a Fs(\017)p Blue
49 w Fu(used:)p YellowOrange 38 1526 a Fp(\017)p Blue
Red 158 1551 415 17 v Blue White 44 w Fu(C4.5)p Blue
White -405 w(C4.5)p Blue White 158 1522 a(C4.5)p Blue
White 158 1530 a(C4.5)p Blue 158 1526 a(C4.5)g(\(Q)o(uinlan)-17
b(')-23 b(s)48 b(decision)f(tr)l(ee)g(algor)r(ithm\))p
YellowOrange 38 1775 a Fp(\017)p Blue 48 w Fu(\223)p
Red 253 1800 1529 17 v Blue White -4 w(decision)g(stumps)p
Blue White -1521 w(decision)g(stumps)p Blue White 253
1771 a(decision)g(stumps)p Blue White 253 1779 a(decision)g(stumps)p
Blue 253 1775 a(decision)g(stumps\224:)57 b(v)o(er)t(y)46
b(simple)g(r)r(ules)g(of)h(thumb)f(that)h(test)g(on)158
2024 y(single)g(attr)r(ibutes)600 2598 y
 33153862 8288462 0 0 32430407 8420065 startTexFig
 600 2598 a
%%BeginDocument: ../msu/stump.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: unnamed.fig
%%Creator: fig2dev Version 3.1 Patchlevel 2
%%CreationDate: Mon Apr 14 17:00:20 1997
%%For: schapire@radish (Robert Schapire)
%Magnification: 1.00
%%Orientation: Portrait
%%BoundingBox: 0 0 493 128
%%Pages: 0
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-48.0 235.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n 0 792 m 0 0 l 612 0 l 612 792 l cp clip
 0.06000 0.06000 sc
/Times-Roman ff 360.00 scf sf
5775 3825 m
gs 1 -1 sc (-1) col2 sh gr
/Times-Roman ff 360.00 scf sf
5475 3300 m
gs 1 -1 sc (predict) col1 sh gr
7.500 slw
% Polyline
n 5505 3000 m 5400 3000 5400 3795 105 arcto 4 {pop} repeat
  5400 3900 6495 3900 105 arcto 4 {pop} repeat
  6600 3900 6600 3105 105 arcto 4 {pop} repeat
  6600 3000 5505 3000 105 arcto 4 {pop} repeat
 cp gs col24 s gr 
/Times-Roman ff 360.00 scf sf
8175 3825 m
gs 1 -1 sc (+1) col2 sh gr
/Times-Roman ff 360.00 scf sf
7875 3300 m
gs 1 -1 sc (predict) col1 sh gr
% Polyline
n 5955 1800 m 5850 1800 5850 2295 105 arcto 4 {pop} repeat
  5850 2400 8370 2400 105 arcto 4 {pop} repeat
  8475 2400 8475 1905 105 arcto 4 {pop} repeat
  8475 1800 5955 1800 105 arcto 4 {pop} repeat
 cp gs col24 s gr 
/Times-Roman ff 360.00 scf sf
7725 2925 m
gs 1 -1 sc (no) col23 sh gr
/Times-Roman ff 360.00 scf sf
6375 2925 m
gs 1 -1 sc (yes) col23 sh gr
/Times-Roman ff 360.00 scf sf
6000 2250 m
gs 1 -1 sc (height > 5 feet ?) col1 sh gr
% Polyline
gs  clippath
8294 2893 m 8377 2985 l 8261 2943 l 8396 3033 l 8429 2983 l  cp clip
n 7500 2400 m 8400 3000 l gs col0 s gr gr

% arrowhead
n 8294 2893 m 8377 2985 l 8261 2943 l 8278 2918 l 8294 2893 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
6064 2943 m 5947 2985 l 6031 2893 l 5896 2983 l 5929 3033 l  cp clip
n 6825 2400 m 5925 3000 l gs col0 s gr gr

% arrowhead
n 6064 2943 m 5947 2985 l 6031 2893 l 6047 2918 l 6064 2943 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 7905 3000 m 7800 3000 7800 3795 105 arcto 4 {pop} repeat
  7800 3900 8895 3900 105 arcto 4 {pop} repeat
  9000 3900 9000 3105 105 arcto 4 {pop} repeat
  9000 3000 7905 3000 105 arcto 4 {pop} repeat
 cp gs col24 s gr 
/Times-Roman ff 360.00 scf sf
900 3300 m
gs 1 -1 sc (predict) col1 sh gr
% Polyline
n 930 3000 m 825 3000 825 3795 105 arcto 4 {pop} repeat
  825 3900 1920 3900 105 arcto 4 {pop} repeat
  2025 3900 2025 3105 105 arcto 4 {pop} repeat
  2025 3000 930 3000 105 arcto 4 {pop} repeat
 cp gs col24 s gr 
/Times-Roman ff 360.00 scf sf
4125 3825 m
gs 1 -1 sc (-1) col2 sh gr
/Times-Roman ff 360.00 scf sf
3825 3300 m
gs 1 -1 sc (predict) col1 sh gr
% Polyline
n 3855 3000 m 3750 3000 3750 3795 105 arcto 4 {pop} repeat
  3750 3900 4845 3900 105 arcto 4 {pop} repeat
  4950 3900 4950 3105 105 arcto 4 {pop} repeat
  4950 3000 3855 3000 105 arcto 4 {pop} repeat
 cp gs col24 s gr 
/Times-Roman ff 360.00 scf sf
1200 3825 m
gs 1 -1 sc (+1) col2 sh gr
/Times-Roman ff 360.00 scf sf
3450 2925 m
gs 1 -1 sc (no) col23 sh gr
/Times-Roman ff 360.00 scf sf
2025 2925 m
gs 1 -1 sc (yes) col23 sh gr
/Times-Roman ff 360.00 scf sf
1500 2250 m
gs 1 -1 sc (eye color = brown ?) col1 sh gr
% Polyline
gs  clippath
1567 2952 m 1448 2986 l 1537 2900 l 1397 2982 l 1427 3033 l  cp clip
n 2325 2475 m 1425 3000 l gs col0 s gr gr

% arrowhead
n 1567 2952 m 1448 2986 l 1537 2900 l 1552 2926 l 1567 2952 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
4232 2907 m 4325 2987 l 4205 2961 l 4350 3034 l 4377 2980 l  cp clip
n 3300 2475 m 4350 3000 l gs col0 s gr gr

% arrowhead
n 4232 2907 m 4325 2987 l 4205 2961 l 4219 2934 l 4232 2907 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 1380 1800 m 1275 1800 1275 2370 105 arcto 4 {pop} repeat
  1275 2475 4470 2475 105 arcto 4 {pop} repeat
  4575 2475 4575 1905 105 arcto 4 {pop} repeat
  4575 1800 1380 1800 105 arcto 4 {pop} repeat
 cp gs col24 s gr 
$F2psEnd
rs

%%EndDocument

 endTexFig
 eop end
%%Page: 46 46
TeXDict begin @landscape 46 45 bop Blue Red -300 34 1127
34 v Blue White -304 -7 a Fv(UCI)44 b(R)l(esults)p Blue
White -1117 w(UCI)h(R)l(esults)p Blue White -300 -11
a(UCI)f(R)l(esults)p Blue White -300 -3 a(UCI)g(R)l(esults)p
Blue -300 -7 a(UCI)g(R)l(esults)-225 132 y
 22497289 31046249 4736286 4736286 35522150 47362867 startTexFig
 -225 132 a
%%BeginDocument: /u/schapire/dotloss/adaboost/runs/math/talk/c4-vs-booststump.ps
%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 72 72 540 720
%%Creator: Mathematica
%%CreationDate: Tue Apr 23 13:27:55 EDT 1996
%%EndComments

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

%%AspectRatio: 1 
MathPictureStart
%% Graphics
/Helvetica findfont 24  scalefont  setfont
% Scaling calculations
0.0238095 0.0279291 0.0238095 0.0279291 [
[(0)] .02381 0 0 2 0 Minner Mrotsboxa
[(5)] .16345 0 0 2 0 Minner Mrotsboxa
[(10)] .3031 0 0 2 0 Minner Mrotsboxa
[(15)] .44275 0 0 2 0 Minner Mrotsboxa
[(20)] .58239 0 0 2 0 Minner Mrotsboxa
[(25)] .72204 0 0 2 0 Minner Mrotsboxa
[(30)] .86168 0 0 2 0 Minner Mrotsboxa
p
/Helvetica findfont 36 scalefont setfont
[(boosting Stumps)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
P
[(0)] -0.0125 .02381 1 0 0 Minner Mrotsboxa
[(5)] -0.0125 .16345 1 0 0 Minner Mrotsboxa
[(10)] -0.0125 .3031 1 0 0 Minner Mrotsboxa
[(15)] -0.0125 .44275 1 0 0 Minner Mrotsboxa
[(20)] -0.0125 .58239 1 0 0 Minner Mrotsboxa
[(25)] -0.0125 .72204 1 0 0 Minner Mrotsboxa
[(30)] -0.0125 .86168 1 0 0 Minner Mrotsboxa
p
/Helvetica findfont 36 scalefont setfont
[(C4.5)] -0.0125 .5 1 0 90 -1 0 Mouter Mrotsboxa
P
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(0)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.16345 0 m
.16345 .00625 L
s
P
[(5)] .16345 0 0 2 0 Minner Mrotshowa
p
.002 w
.3031 0 m
.3031 .00625 L
s
P
[(10)] .3031 0 0 2 0 Minner Mrotshowa
p
.002 w
.44275 0 m
.44275 .00625 L
s
P
[(15)] .44275 0 0 2 0 Minner Mrotshowa
p
.002 w
.58239 0 m
.58239 .00625 L
s
P
[(20)] .58239 0 0 2 0 Minner Mrotshowa
p
.002 w
.72204 0 m
.72204 .00625 L
s
P
[(25)] .72204 0 0 2 0 Minner Mrotshowa
p
.002 w
.86168 0 m
.86168 .00625 L
s
P
[(30)] .86168 0 0 2 0 Minner Mrotshowa
p
.001 w
.05174 0 m
.05174 .00375 L
s
P
p
.001 w
.07967 0 m
.07967 .00375 L
s
P
p
.001 w
.1076 0 m
.1076 .00375 L
s
P
p
.001 w
.13553 0 m
.13553 .00375 L
s
P
p
.001 w
.19138 0 m
.19138 .00375 L
s
P
p
.001 w
.21931 0 m
.21931 .00375 L
s
P
p
.001 w
.24724 0 m
.24724 .00375 L
s
P
p
.001 w
.27517 0 m
.27517 .00375 L
s
P
p
.001 w
.33103 0 m
.33103 .00375 L
s
P
p
.001 w
.35896 0 m
.35896 .00375 L
s
P
p
.001 w
.38689 0 m
.38689 .00375 L
s
P
p
.001 w
.41482 0 m
.41482 .00375 L
s
P
p
.001 w
.47067 0 m
.47067 .00375 L
s
P
p
.001 w
.4986 0 m
.4986 .00375 L
s
P
p
.001 w
.52653 0 m
.52653 .00375 L
s
P
p
.001 w
.55446 0 m
.55446 .00375 L
s
P
p
.001 w
.61032 0 m
.61032 .00375 L
s
P
p
.001 w
.63825 0 m
.63825 .00375 L
s
P
p
.001 w
.66618 0 m
.66618 .00375 L
s
P
p
.001 w
.69411 0 m
.69411 .00375 L
s
P
p
.001 w
.74997 0 m
.74997 .00375 L
s
P
p
.001 w
.77789 0 m
.77789 .00375 L
s
P
p
.001 w
.80582 0 m
.80582 .00375 L
s
P
p
.001 w
.83375 0 m
.83375 .00375 L
s
P
p
.001 w
.88961 0 m
.88961 .00375 L
s
P
p
.001 w
.91754 0 m
.91754 .00375 L
s
P
p
.001 w
.94547 0 m
.94547 .00375 L
s
P
p
.001 w
.9734 0 m
.9734 .00375 L
s
P
p
/Helvetica findfont 36 scalefont setfont
[(boosting Stumps)] .5 0 0 2 0 0 -1 Mouter Mrotshowa
P
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .02381 m
.00625 .02381 L
s
P
[(0)] -0.0125 .02381 1 0 0 Minner Mrotshowa
p
.002 w
0 .16345 m
.00625 .16345 L
s
P
[(5)] -0.0125 .16345 1 0 0 Minner Mrotshowa
p
.002 w
0 .3031 m
.00625 .3031 L
s
P
[(10)] -0.0125 .3031 1 0 0 Minner Mrotshowa
p
.002 w
0 .44275 m
.00625 .44275 L
s
P
[(15)] -0.0125 .44275 1 0 0 Minner Mrotshowa
p
.002 w
0 .58239 m
.00625 .58239 L
s
P
[(20)] -0.0125 .58239 1 0 0 Minner Mrotshowa
p
.002 w
0 .72204 m
.00625 .72204 L
s
P
[(25)] -0.0125 .72204 1 0 0 Minner Mrotshowa
p
.002 w
0 .86168 m
.00625 .86168 L
s
P
[(30)] -0.0125 .86168 1 0 0 Minner Mrotshowa
p
.001 w
0 .05174 m
.00375 .05174 L
s
P
p
.001 w
0 .07967 m
.00375 .07967 L
s
P
p
.001 w
0 .1076 m
.00375 .1076 L
s
P
p
.001 w
0 .13553 m
.00375 .13553 L
s
P
p
.001 w
0 .19138 m
.00375 .19138 L
s
P
p
.001 w
0 .21931 m
.00375 .21931 L
s
P
p
.001 w
0 .24724 m
.00375 .24724 L
s
P
p
.001 w
0 .27517 m
.00375 .27517 L
s
P
p
.001 w
0 .33103 m
.00375 .33103 L
s
P
p
.001 w
0 .35896 m
.00375 .35896 L
s
P
p
.001 w
0 .38689 m
.00375 .38689 L
s
P
p
.001 w
0 .41482 m
.00375 .41482 L
s
P
p
.001 w
0 .47067 m
.00375 .47067 L
s
P
p
.001 w
0 .4986 m
.00375 .4986 L
s
P
p
.001 w
0 .52653 m
.00375 .52653 L
s
P
p
.001 w
0 .55446 m
.00375 .55446 L
s
P
p
.001 w
0 .61032 m
.00375 .61032 L
s
P
p
.001 w
0 .63825 m
.00375 .63825 L
s
P
p
.001 w
0 .66618 m
.00375 .66618 L
s
P
p
.001 w
0 .69411 m
.00375 .69411 L
s
P
p
.001 w
0 .74997 m
.00375 .74997 L
s
P
p
.001 w
0 .77789 m
.00375 .77789 L
s
P
p
.001 w
0 .80582 m
.00375 .80582 L
s
P
p
.001 w
0 .83375 m
.00375 .83375 L
s
P
p
.001 w
0 .88961 m
.00375 .88961 L
s
P
p
.001 w
0 .91754 m
.00375 .91754 L
s
P
p
.001 w
0 .94547 m
.00375 .94547 L
s
P
p
.001 w
0 .9734 m
.00375 .9734 L
s
P
p
/Helvetica findfont 36 scalefont setfont
[(C4.5)] -0.0125 .5 1 0 90 -1 0 Mouter Mrotshowa
P
p
.002 w
0 0 m
0 1 L
s
P
P
p
p
.002 w
0 1 m
1 1 L
s
P
p
.002 w
1 0 m
1 1 L
s
P
P
p
P
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
p
p
p
.001 w
.02381 .02381 m
.06349 .06349 L
.10317 .10317 L
.14286 .14286 L
.18254 .18254 L
.22222 .22222 L
.2619 .2619 L
.30159 .30159 L
.34127 .34127 L
.38095 .38095 L
.42063 .42063 L
.46032 .46032 L
.5 .5 L
.53968 .53968 L
.57937 .57937 L
.61905 .61905 L
.65873 .65873 L
.69841 .69841 L
.7381 .7381 L
.77778 .77778 L
.81746 .81746 L
.85714 .85714 L
.89683 .89683 L
.93651 .93651 L
.97619 .97619 L
s
P
P
p
p
.03 w
.0294 .08525 Mdot
.27052 .46602 Mdot
.27314 .63749 Mdot
.1588 .18859 Mdot
.54306 .61649 Mdot
.48351 .8299 Mdot
.84427 .90926 Mdot
.68378 .66943 Mdot
.54903 .76723 Mdot
.29864 .39521 Mdot
.26172 .27291 Mdot
.1282 .12053 Mdot
.27226 .31032 Mdot
.42563 .46446 Mdot
.14771 .16291 Mdot
.70631 .8157 Mdot
.75244 .85769 Mdot
.53161 .08426 Mdot
.71797 .84432 Mdot
.14138 .1236 Mdot
.05277 .04721 Mdot
.1069 .08403 Mdot
.14704 .18593 Mdot
.14703 .03892 Mdot
.44135 .43716 Mdot
.02381 .02381 Mdot
.97549 .40993 Mdot
P
P
P
% End of Graphics
MathPictureEnd
end
showpage

%%EndDocument

 endTexFig
 2775 132 a
 22497289 31046249 4736286 4736286 35522150 47362867 startTexFig
 2775 132 a
%%BeginDocument: /u/schapire/dotloss/adaboost/runs/math/talk/c4-vs-boostc4.ps
%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 72 72 540 720
%%Creator: Mathematica
%%CreationDate: Tue Apr 23 13:27:57 EDT 1996
%%EndComments

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

%%AspectRatio: 1 
MathPictureStart
%% Graphics
/Helvetica findfont 24  scalefont  setfont
% Scaling calculations
0.0238095 0.0279291 0.0238095 0.0279291 [
[(0)] .02381 0 0 2 0 Minner Mrotsboxa
[(5)] .16345 0 0 2 0 Minner Mrotsboxa
[(10)] .3031 0 0 2 0 Minner Mrotsboxa
[(15)] .44275 0 0 2 0 Minner Mrotsboxa
[(20)] .58239 0 0 2 0 Minner Mrotsboxa
[(25)] .72204 0 0 2 0 Minner Mrotsboxa
[(30)] .86168 0 0 2 0 Minner Mrotsboxa
p
/Helvetica findfont 36 scalefont setfont
[(boosting C4.5)] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
P
[(0)] -0.0125 .02381 1 0 0 Minner Mrotsboxa
[(5)] -0.0125 .16345 1 0 0 Minner Mrotsboxa
[(10)] -0.0125 .3031 1 0 0 Minner Mrotsboxa
[(15)] -0.0125 .44275 1 0 0 Minner Mrotsboxa
[(20)] -0.0125 .58239 1 0 0 Minner Mrotsboxa
[(25)] -0.0125 .72204 1 0 0 Minner Mrotsboxa
[(30)] -0.0125 .86168 1 0 0 Minner Mrotsboxa
p
/Helvetica findfont 36 scalefont setfont
[(C4.5)] -0.0125 .5 1 0 90 -1 0 Mouter Mrotsboxa
P
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(0)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.16345 0 m
.16345 .00625 L
s
P
[(5)] .16345 0 0 2 0 Minner Mrotshowa
p
.002 w
.3031 0 m
.3031 .00625 L
s
P
[(10)] .3031 0 0 2 0 Minner Mrotshowa
p
.002 w
.44275 0 m
.44275 .00625 L
s
P
[(15)] .44275 0 0 2 0 Minner Mrotshowa
p
.002 w
.58239 0 m
.58239 .00625 L
s
P
[(20)] .58239 0 0 2 0 Minner Mrotshowa
p
.002 w
.72204 0 m
.72204 .00625 L
s
P
[(25)] .72204 0 0 2 0 Minner Mrotshowa
p
.002 w
.86168 0 m
.86168 .00625 L
s
P
[(30)] .86168 0 0 2 0 Minner Mrotshowa
p
.001 w
.05174 0 m
.05174 .00375 L
s
P
p
.001 w
.07967 0 m
.07967 .00375 L
s
P
p
.001 w
.1076 0 m
.1076 .00375 L
s
P
p
.001 w
.13553 0 m
.13553 .00375 L
s
P
p
.001 w
.19138 0 m
.19138 .00375 L
s
P
p
.001 w
.21931 0 m
.21931 .00375 L
s
P
p
.001 w
.24724 0 m
.24724 .00375 L
s
P
p
.001 w
.27517 0 m
.27517 .00375 L
s
P
p
.001 w
.33103 0 m
.33103 .00375 L
s
P
p
.001 w
.35896 0 m
.35896 .00375 L
s
P
p
.001 w
.38689 0 m
.38689 .00375 L
s
P
p
.001 w
.41482 0 m
.41482 .00375 L
s
P
p
.001 w
.47067 0 m
.47067 .00375 L
s
P
p
.001 w
.4986 0 m
.4986 .00375 L
s
P
p
.001 w
.52653 0 m
.52653 .00375 L
s
P
p
.001 w
.55446 0 m
.55446 .00375 L
s
P
p
.001 w
.61032 0 m
.61032 .00375 L
s
P
p
.001 w
.63825 0 m
.63825 .00375 L
s
P
p
.001 w
.66618 0 m
.66618 .00375 L
s
P
p
.001 w
.69411 0 m
.69411 .00375 L
s
P
p
.001 w
.74997 0 m
.74997 .00375 L
s
P
p
.001 w
.77789 0 m
.77789 .00375 L
s
P
p
.001 w
.80582 0 m
.80582 .00375 L
s
P
p
.001 w
.83375 0 m
.83375 .00375 L
s
P
p
.001 w
.88961 0 m
.88961 .00375 L
s
P
p
.001 w
.91754 0 m
.91754 .00375 L
s
P
p
.001 w
.94547 0 m
.94547 .00375 L
s
P
p
.001 w
.9734 0 m
.9734 .00375 L
s
P
p
/Helvetica findfont 36 scalefont setfont
[(boosting C4.5)] .5 0 0 2 0 0 -1 Mouter Mrotshowa
P
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .02381 m
.00625 .02381 L
s
P
[(0)] -0.0125 .02381 1 0 0 Minner Mrotshowa
p
.002 w
0 .16345 m
.00625 .16345 L
s
P
[(5)] -0.0125 .16345 1 0 0 Minner Mrotshowa
p
.002 w
0 .3031 m
.00625 .3031 L
s
P
[(10)] -0.0125 .3031 1 0 0 Minner Mrotshowa
p
.002 w
0 .44275 m
.00625 .44275 L
s
P
[(15)] -0.0125 .44275 1 0 0 Minner Mrotshowa
p
.002 w
0 .58239 m
.00625 .58239 L
s
P
[(20)] -0.0125 .58239 1 0 0 Minner Mrotshowa
p
.002 w
0 .72204 m
.00625 .72204 L
s
P
[(25)] -0.0125 .72204 1 0 0 Minner Mrotshowa
p
.002 w
0 .86168 m
.00625 .86168 L
s
P
[(30)] -0.0125 .86168 1 0 0 Minner Mrotshowa
p
.001 w
0 .05174 m
.00375 .05174 L
s
P
p
.001 w
0 .07967 m
.00375 .07967 L
s
P
p
.001 w
0 .1076 m
.00375 .1076 L
s
P
p
.001 w
0 .13553 m
.00375 .13553 L
s
P
p
.001 w
0 .19138 m
.00375 .19138 L
s
P
p
.001 w
0 .21931 m
.00375 .21931 L
s
P
p
.001 w
0 .24724 m
.00375 .24724 L
s
P
p
.001 w
0 .27517 m
.00375 .27517 L
s
P
p
.001 w
0 .33103 m
.00375 .33103 L
s
P
p
.001 w
0 .35896 m
.00375 .35896 L
s
P
p
.001 w
0 .38689 m
.00375 .38689 L
s
P
p
.001 w
0 .41482 m
.00375 .41482 L
s
P
p
.001 w
0 .47067 m
.00375 .47067 L
s
P
p
.001 w
0 .4986 m
.00375 .4986 L
s
P
p
.001 w
0 .52653 m
.00375 .52653 L
s
P
p
.001 w
0 .55446 m
.00375 .55446 L
s
P
p
.001 w
0 .61032 m
.00375 .61032 L
s
P
p
.001 w
0 .63825 m
.00375 .63825 L
s
P
p
.001 w
0 .66618 m
.00375 .66618 L
s
P
p
.001 w
0 .69411 m
.00375 .69411 L
s
P
p
.001 w
0 .74997 m
.00375 .74997 L
s
P
p
.001 w
0 .77789 m
.00375 .77789 L
s
P
p
.001 w
0 .80582 m
.00375 .80582 L
s
P
p
.001 w
0 .83375 m
.00375 .83375 L
s
P
p
.001 w
0 .88961 m
.00375 .88961 L
s
P
p
.001 w
0 .91754 m
.00375 .91754 L
s
P
p
.001 w
0 .94547 m
.00375 .94547 L
s
P
p
.001 w
0 .9734 m
.00375 .9734 L
s
P
p
/Helvetica findfont 36 scalefont setfont
[(C4.5)] -0.0125 .5 1 0 90 -1 0 Mouter Mrotshowa
P
p
.002 w
0 0 m
0 1 L
s
P
P
p
p
.002 w
0 1 m
1 1 L
s
P
p
.002 w
1 0 m
1 1 L
s
P
P
p
P
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
p
p
p
.001 w
.02381 .02381 m
.06349 .06349 L
.10317 .10317 L
.14286 .14286 L
.18254 .18254 L
.22222 .22222 L
.2619 .2619 L
.30159 .30159 L
.34127 .34127 L
.38095 .38095 L
.42063 .42063 L
.46032 .46032 L
.5 .5 L
.53968 .53968 L
.57937 .57937 L
.61905 .61905 L
.65873 .65873 L
.69841 .69841 L
.7381 .7381 L
.77778 .77778 L
.81746 .81746 L
.85714 .85714 L
.89683 .89683 L
.93651 .93651 L
.97619 .97619 L
s
P
P
p
p
.03 w
.11737 .08525 Mdot
.38875 .46602 Mdot
.16473 .63749 Mdot
.16438 .18859 Mdot
.48033 .61649 Mdot
.55333 .8299 Mdot
.65765 .90926 Mdot
.47608 .66943 Mdot
.62915 .76723 Mdot
.21434 .39521 Mdot
.18693 .27291 Mdot
.16495 .12053 Mdot
.31486 .31032 Mdot
.40991 .46446 Mdot
.11615 .16291 Mdot
.74111 .8157 Mdot
.6547 .85769 Mdot
.02381 .08426 Mdot
.72276 .84432 Mdot
.06276 .1236 Mdot
.05127 .04721 Mdot
.0812 .08403 Mdot
.15927 .18593 Mdot
.03255 .03892 Mdot
.27259 .43716 Mdot
.02381 .02381 Mdot
.11716 .40993 Mdot
P
P
P
% End of Graphics
MathPictureEnd
end
showpage

%%EndDocument

 endTexFig
 eop end
%%Page: 47 47
TeXDict begin @landscape 47 46 bop Blue Red -300 -101
1950 34 v Blue White -304 -142 a Fv(M)-7 b(ulticlass)43
b(P)n(r)o(oblems)p Blue White -1942 w(M)-7 b(ulticlass)44
b(P)n(r)o(oblems)p Blue White -300 -146 a(M)-7 b(ulticlass)43
b(P)n(r)o(oblems)p Blue White -300 -138 a(M)-7 b(ulticlass)43
b(P)n(r)o(oblems)p Blue -300 -142 a(M)-7 b(ulticlass)43
b(P)n(r)o(oblems)p Black 4639 64 a Fr([with)c(F)m(r)m(eund])p
Blue Red -208 397 a Fs(\017)p Blue 49 w Fu(say)p OliveGreen
46 w Fn(y)64 b Fs(2)57 b Fn(Y)103 b Fm(=)57 b Fs(f)p
Fm(1)p Fn(;)34 b(:)g(:)g(:)j(;)d(k)7 b Fs(g)p Blue Red
-208 713 a(\017)p Blue 49 w Fu(dir)l(ect)47 b(appr)o(oach)g(\(A)n(daB)o
(oost.M1\):)p OliveGreen 2314 1084 a Fn(h)2430 1119 y
Fi(t)2553 1084 y Fm(:)57 b Fn(X)73 b Fs(!)57 b Fn(Y)p
Blue OliveGreen 1184 1684 a(D)1352 1724 y Fi(t)p Fl(+1)1620
1684 y Fm(\()p Fn(i)p Fm(\))g(=)2108 1545 y Fn(D)2276
1579 y Fi(t)2341 1545 y Fm(\()p Fn(i)p Fm(\))p 2108 1634
449 4 v 2231 1826 a Fn(Z)2369 1861 y Fi(t)2613 1684 y
Fs(\001)2716 1384 y Fg(8)2716 1458 y(>)2716 1483 y(>)2716
1508 y(>)2716 1533 y(>)2716 1558 y(<)2716 1707 y(>)2716
1732 y(>)2716 1757 y(>)2716 1782 y(>)2716 1807 y(:)2831
1559 y Fn(e)2925 1484 y Fj(\000)p Fi(\013)3166 1513 y
Fh(t)p Blue 3308 1559 a Fu(if)p OliveGreen 47 w Fn(y)3580
1600 y Fi(i)3698 1559 y Fm(=)g Fn(h)4020 1593 y Fi(t)4086
1559 y Fm(\()p Fn(x)4274 1600 y Fi(i)4335 1559 y Fm(\))p
Blue OliveGreen 2831 1808 a Fn(e)2925 1733 y Fi(\013)3032
1762 y Fh(t)p Blue 3308 1808 a Fu(if)p OliveGreen 47
w Fn(y)3580 1849 y Fi(i)3698 1808 y Fs(6)p Fm(=)g Fn(h)4020
1842 y Fi(t)4086 1808 y Fm(\()p Fn(x)4274 1849 y Fi(i)4335
1808 y Fm(\))p Blue OliveGreen Blue OliveGreen 1525 2212
a Fn(H)1693 2260 y Fl(\014nal)1992 2212 y Fm(\()p Fn(x)p
Fm(\))h(=)f(arg)37 b(max)2825 2343 y Fi(y)6 b Fj(2)p
Fi(Y)3488 2102 y Fg(X)3205 2369 y Fi(t)p Fl(:)p Fi(h)3406
2398 y Fh(t)3461 2369 y Fl(\()p Fi(x)p Fl(\)=)p Fi(y)3926
2212 y Fn(\013)4055 2246 y Fi(t)p Blue Red -208 2805
a Fs(\017)p Blue 49 w Fu(can)47 b(pr)o(o)-6 b(v)o(e)46
b(same)g(bound)g(on)h(err)o(or)p Red 2914 2830 126 17
v Blue White 43 w(if)p Blue White -117 w(if)p Blue White
2914 2801 a(if)p Blue White 2914 2809 a(if)p Blue 2914
2805 a(if)p OliveGreen 47 w Fs(8)p Fn(t)57 b Fm(:)g Fn(\017)3523
2840 y Fi(t)3645 2805 y Fs(\024)g Fm(1)p Fn(=)p Fm(2)p
Blue YellowOrange 38 3096 a Fp(\017)p Blue 48 w Fu(in)47
b(pr)n(actice)l(,)g(not)g(usually)e(a)i(pr)o(oblem)e(for)i(\223)-10
b(str)o(ong)l(\224)46 b(w)o(eak)158 3345 y(lear)r(ners)h(\(e)l(.g.,)g
(C4.5\))p YellowOrange 38 3594 a Fp(\017)p Blue 48 w
Fu(signi\002cant)h(pr)o(oblem)d(for)i(\223)l(w)o(eak)-8
b(\224)45 b(w)o(eak)i(lear)r(ners)f(\(e)l(.g.,)h(decision)158
3843 y(stumps\))p Red -208 4158 a Fs(\017)p Blue 49 w
Fu(instead,)f(r)l(educe)h(to)g(binar)t(y)p eop end
%%Page: 48 48
TeXDict begin @landscape 48 47 bop Blue Red -300 550
2868 34 v Blue White -304 509 a Fv(R)l(educing)44 b(M)-7
b(ulticlass)44 b(to)f(B)n(inar)t(y)p Blue White -2859
w(R)l(educing)h(M)-7 b(ulticlass)44 b(to)g(B)n(inar)t(y)p
Blue White -300 505 a(R)l(educing)g(M)-7 b(ulticlass)44
b(to)f(B)n(inar)t(y)p Blue White -300 513 a(R)l(educing)h(M)-7
b(ulticlass)44 b(to)f(B)n(inar)t(y)p Blue -300 509 a(R)l(educing)h(M)-7
b(ulticlass)44 b(to)f(B)n(inar)t(y)p Black 4710 705 a
Fr([with)c(S)m(inger])p Blue Red -208 1115 a Fs(\017)p
Blue 49 w Fu(say)46 b(possible)g(labels)f(ar)l(e)p OliveGreen
47 w Fs(f)p OliveGreen Fn(a)p OliveGreen(;)p OliveGreen
34 w(b)p OliveGreen(;)p OliveGreen 34 w(c)p OliveGreen(;)p
OliveGreen 34 w(d)p OliveGreen(;)p OliveGreen 34 w(e)p
OliveGreen Fs(g)p Blue Red -208 1447 a(\017)p Blue 49
w Fu(each)i(tr)n(aining)h(example)e(r)l(eplaced)g(b)-5
b(y)45 b(\002v)o(e)p OliveGreen 47 w Fs(f\000)p Fm(1)p
Fn(;)34 b Fm(+1)p Fs(g)p Blue Fu(-labeled)-56 1696 y(examples:)p
OliveGreen 1898 2424 a Fn(x)83 b(;)p OliveGreen 83 w(c)p
OliveGreen Black 2421 2426 a Fs(!)2685 1752 y Fg(8)2685
1826 y(>)2685 1851 y(>)2685 1876 y(>)2685 1901 y(>)2685
1926 y(>)2685 1951 y(>)2685 1976 y(>)2685 2001 y(>)2685
2026 y(>)2685 2051 y(>)2685 2075 y(>)2685 2100 y(>)2685
2125 y(>)2685 2150 y(>)2685 2175 y(>)2685 2200 y(>)2685
2225 y(>)2685 2250 y(>)2685 2275 y(>)2685 2300 y(<)2685
2449 y(>)2685 2474 y(>)2685 2499 y(>)2685 2524 y(>)2685
2549 y(>)2685 2574 y(>)2685 2598 y(>)2685 2623 y(>)2685
2648 y(>)2685 2673 y(>)2685 2698 y(>)2685 2723 y(>)2685
2748 y(>)2685 2773 y(>)2685 2798 y(>)2685 2823 y(>)2685
2848 y(>)2685 2872 y(>)2685 2897 y(>)2685 2922 y(:)p
OliveGreen 2800 1926 a Fm(\()p Fn(x;)p OliveGreen 34
w(a)p OliveGreen Fm(\))h Fn(;)g Fs(\000)p Fm(1)2810 2175
y(\()p Fn(x;)p OliveGreen 34 w(b)p OliveGreen Fm(\))94
b Fn(;)84 b Fs(\000)p Fm(1)2810 2424 y(\()p Fn(x;)p OliveGreen
34 w(c)p OliveGreen Fm(\))93 b Fn(;)d Fm(+1)2801 2673
y(\()p Fn(x;)p OliveGreen 34 w(d)p OliveGreen Fm(\))84
b Fn(;)g Fs(\000)p Fm(1)2807 2922 y(\()p Fn(x;)p OliveGreen
34 w(e)p OliveGreen Fm(\))89 b Fn(;)84 b Fs(\000)p Fm(1)p
Black OliveGreen Blue Red -208 3391 a Fs(\017)p Blue
49 w Fu(pr)l(edict)46 b(with)h(label)f(r)l(eceiving)i(most)e(\(w)o
(eighted\))h(v)o(otes)p eop end
%%Page: 49 49
TeXDict begin @landscape 49 48 bop Blue Red -300 888
1336 34 v Blue White -304 846 a Fv(A)n(daB)o(oost)s(.MH)p
Blue White -1328 w(A)n(daB)o(oost)s(.MH)p Blue White
-300 842 a(A)n(daB)o(oost)s(.MH)p Blue White -300 850
a(A)n(daB)o(oost)s(.MH)p Blue -300 846 a(A)n(daB)o(oost)s(.MH)p
Red -208 1293 a Fs(\017)p Blue 49 w Fu(can)47 b(pr)o(o)-6
b(v)o(e:)p OliveGreen 1516 1632 a Fm(training)47 b(error\()p
Fn(H)2854 1681 y Fl(\014nal)3154 1632 y Fm(\))58 b Fs(\024)3513
1493 y Fn(k)p 3513 1582 113 4 v 3522 1774 a Fm(2)3681
1632 y Fs(\001)3784 1523 y Fg(Y)3924 1632 y Fn(Z)4062
1667 y Fi(t)p Blue YellowOrange 38 2226 a Fp(\017)p Blue
48 w Fu(r)l(e\003ects)48 b(fact)f(that)g(small)e(number)i(of)f(err)o
(ors)i(in)e(binar)t(y)158 2475 y(pr)l(edictors)i(can)e(cause)i(o)-6
b(v)o(er)n(all)46 b(pr)l(ediction)h(to)g(be)f(incorr)l(ect)p
Red -208 2807 a Fs(\017)p Blue 49 w Fu(extends)h(immediately)e(to)p
Red 2177 2832 1039 17 v Blue White 42 w(multi-label)p
Blue White -1031 w(multi-label)p Blue White 2177 2803
a(multi-label)p Blue White 2177 2811 a(multi-label)p
Blue 2177 2807 a(multi-label)g(case)-56 3056 y(\(mor)l(e)i(than)g(one)f
(corr)l(ect)j(label)c(per)i(example\))p eop end
%%Page: 50 50
TeXDict begin @landscape 50 49 bop Blue Red -300 -101
1922 34 v Blue White -304 -142 a Fv(U)-9 b(sing)44 b(O)o(utput)f(C)n
(odes)p Blue White -1913 w(U)-9 b(sing)44 b(O)o(utput)f(C)n(odes)p
Blue White -300 -146 a(U)-9 b(sing)44 b(O)o(utput)f(C)n(odes)p
Blue White -300 -138 a(U)-9 b(sing)44 b(O)o(utput)f(C)n(odes)p
Blue -300 -142 a(U)-9 b(sing)44 b(O)o(utput)f(C)n(odes)p
Black 3929 55 a Fr([with)c(Allw)o(ein)f(&)h(S)m(inger])p
Blue Red -208 397 a Fs(\017)p Blue 49 w Fu(alter)r(nativ)o(e:)57
b(choose)48 b(\223)-17 b(code)47 b(wor)l(d)-5 b(\224)46
b(for)h(each)g(label)p Black 2303 732 4 250 v OliveGreen
2355 657 a Fn(\031)2470 697 y Fl(1)p Black OliveGreen
2652 657 a Fn(\031)2767 697 y Fl(2)p Black OliveGreen
2950 657 a Fn(\031)3065 697 y Fl(3)p Black OliveGreen
3247 657 a Fn(\031)3362 697 y Fl(4)p Black 2102 735 1393
4 v OliveGreen 2159 909 a Fr(a)p Black 2303 984 4 250
v OliveGreen 124 w Fs(\000)p Black OliveGreen 143 w Fm(+)p
Black OliveGreen 142 w Fs(\000)p Black OliveGreen 143
w Fm(+)p Black OliveGreen 2152 1158 a Fr(b)p Black 2303
1233 V OliveGreen 118 w Fs(\000)p Black OliveGreen 143
w Fm(+)p Black OliveGreen 148 w(+)p Black OliveGreen
143 w Fs(\000)p Black OliveGreen 2161 1407 a Fr(c)p Black
2303 1482 V OliveGreen 133 w Fm(+)p Black OliveGreen
143 w Fs(\000)p Black OliveGreen 136 w(\000)p Black OliveGreen
143 w Fm(+)p Black OliveGreen 2152 1656 a Fr(d)p Black
2303 1731 V OliveGreen 124 w Fm(+)p Black OliveGreen
143 w Fs(\000)p Black OliveGreen 142 w Fm(+)p Black OliveGreen
149 w(+)p Black OliveGreen 2159 1906 a Fr(e)p Black 2303
1980 V OliveGreen 125 w Fs(\000)p Black OliveGreen 143
w Fm(+)p Black OliveGreen 142 w Fs(\000)p Black OliveGreen
137 w(\000)p Black Blue Red -208 2217 a(\017)p Blue 49
w Fu(each)g(tr)n(aining)h(example)e(mapped)f(to)h(one)h(example)f(per)h
(column)p OliveGreen 1852 2865 a Fn(x)83 b(;)p OliveGreen
83 w(c)p OliveGreen Black 2375 2867 a Fs(!)2639 2317
y Fg(8)2639 2392 y(>)2639 2417 y(>)2639 2441 y(>)2639
2466 y(>)2639 2491 y(>)2639 2516 y(>)2639 2541 y(>)2639
2566 y(>)2639 2591 y(>)2639 2616 y(>)2639 2641 y(>)2639
2666 y(>)2639 2690 y(>)2639 2715 y(>)2639 2740 y(<)2639
2890 y(>)2639 2915 y(>)2639 2940 y(>)2639 2964 y(>)2639
2989 y(>)2639 3014 y(>)2639 3039 y(>)2639 3064 y(>)2639
3089 y(>)2639 3114 y(>)2639 3139 y(>)2639 3164 y(>)2639
3189 y(>)2639 3214 y(>)2639 3238 y(:)p OliveGreen 2754
2491 a Fm(\()p Fn(x;)34 b(\031)3147 2531 y Fl(1)3231
2491 y Fm(\))83 b Fn(;)89 b Fm(+1)2754 2740 y(\()p Fn(x;)34
b(\031)3147 2780 y Fl(2)3231 2740 y Fm(\))83 b Fn(;)g
Fs(\000)p Fm(1)2754 2989 y(\()p Fn(x;)34 b(\031)3147
3029 y Fl(3)3231 2989 y Fm(\))83 b Fn(;)g Fs(\000)p Fm(1)2754
3238 y(\()p Fn(x;)34 b(\031)3147 3278 y Fl(4)3231 3238
y Fm(\))83 b Fn(;)89 b Fm(+1)p Black OliveGreen Blue
Red -208 3678 a Fs(\017)p Blue 49 w Fu(to)47 b(classify)f(new)g
(example)p OliveGreen 46 w Fn(x)p Blue Fu(:)p YellowOrange
38 3961 a Fp(\017)p Blue 48 w Fu(ev)o(aluate)h(classi\002er)g(on)p
OliveGreen 47 w Fm(\()p Fn(x;)34 b(\031)2544 4001 y Fl(1)2627
3961 y Fm(\))p Fn(;)g(:)g(:)g(:)j(;)d Fm(\()p Fn(x;)g(\031)3546
4001 y Fl(4)3630 3961 y Fm(\))p Blue YellowOrange 38
4210 a Fp(\017)p Blue 48 w Fu(choose)48 b(label)e(\223)-10
b(most)46 b(consistent)l(\224)h(with)f(r)l(esults)p eop
end
%%Page: 51 51
TeXDict begin @landscape 51 50 bop Blue Red -300 1311
2012 34 v Blue White -304 1270 a Fv(O)o(utput)43 b(C)n(odes)h(\(cont)s
(.\))p Blue White -2003 w(O)o(utput)g(C)n(odes)f(\(cont)s(.\))p
Blue White -300 1266 a(O)o(utput)h(C)n(odes)f(\(cont)s(.\))p
Blue White -300 1274 a(O)o(utput)h(C)n(odes)f(\(cont)s(.\))p
Blue -300 1270 a(O)o(utput)h(C)n(odes)f(\(cont)s(.\))p
Red -208 1717 a Fs(\017)p Blue 49 w Fu(tr)n(aining)k(err)o(or)h(bounds)
p Red 1998 1742 1206 17 v Blue White 41 w(independent)p
Blue White -1198 w(independent)p Blue White 1998 1713
a(independent)p Blue White 1998 1721 a(independent)p
Blue 1998 1717 a(independent)e(of)g(#)h(of)g(classes)p
Red -208 2049 a Fs(\017)p Blue 49 w Fu(o)-6 b(v)o(er)n(all)46
b(pr)l(ediction)h(r)o(obust)f(to)h(lar)o(ge)g(number)f(of)h(err)o(ors)g
(in)g(binar)t(y)-56 2298 y(pr)l(edictors)p Red -208 2630
a Fs(\017)p Blue Red -56 2655 320 17 v Blue White 45
w Fu(but)p Blue White -312 w(but)p Blue White -56 2626
a(but)p Blue White -56 2634 a(but)p Blue -56 2630 a(but:)57
b(binar)t(y)46 b(pr)o(oblems)f(may)h(be)g(har)l(der)p
eop end
%%Page: 52 52
TeXDict begin @landscape 52 51 bop Blue Red -300 1066
1782 34 v Blue White -304 1024 a Fv(R)o(anking)44 b(P)n(r)o(oblems)p
Blue White -1774 w(R)o(anking)g(P)n(r)o(oblems)p Blue
White -300 1020 a(R)o(anking)g(P)n(r)o(oblems)p Blue
White -300 1028 a(R)o(anking)g(P)n(r)o(oblems)p Blue
-300 1024 a(R)o(anking)g(P)n(r)o(oblems)p Black 3564
1221 a Fr([with)38 b(F)m(r)m(eund,)f(I)o(y)o(er)h(&)h(S)m(inger])p
Blue Red -208 1630 a Fs(\017)p Blue 49 w Fu(other)47
b(pr)o(oblems)f(can)h(also)f(be)g(handled)g(b)-5 b(y)45
b(r)l(educing)j(to)e(binar)t(y)p Red -208 1962 a Fs(\017)p
Blue 49 w Fu(e)l(.g.:)57 b(want)46 b(to)g(lear)r(n)g(to)p
Red 1888 1987 423 17 v Blue White 43 w(r)n(ank)p Blue
White -414 w(r)n(ank)p Blue White 1888 1958 a(r)n(ank)p
Blue White 1888 1966 a(r)n(ank)p Blue 1888 1962 a(r)n(ank)h(objects)f
(\(say)-18 b(,)47 b(mo)-6 b(vies\))46 b(fr)o(om)g(examples)p
Red -208 2294 a Fs(\017)p Blue 49 w Fu(can)h(r)l(educe)g(to)g(multiple)
e(binar)t(y)h(questions)h(of)f(for)r(m:)-56 2544 y Fe(\223is)h(or)g(is)
g(not)f(object)h(A)g(pr)-5 b(eferr)g(ed)44 b(to)j(object)g(B?\224)p
Red -208 2876 a Fs(\017)p Blue 49 w Fu(no)-6 b(w)46 b(apply)f(\(binar)t
(y\))h(A)n(daB)o(oost)p eop end
%%Page: 53 53
TeXDict begin @landscape 53 52 bop Blue Red -300 -101
3177 34 v Blue White -304 -142 a Fv(P)n(r)o(oblem)42
b(with)j(\223H)-5 b(ar)l(d)g(\224)42 b(P)n(r)l(edictions)p
Blue White -3168 w(P)n(r)o(oblem)h(with)h(\223H)-5 b(ar)l(d)g(\224)42
b(P)n(r)l(edictions)p Blue White -300 -146 a(P)n(r)o(oblem)g(with)j
(\223H)-5 b(ar)l(d)g(\224)42 b(P)n(r)l(edictions)p Blue
White -300 -138 a(P)n(r)o(oblem)g(with)j(\223H)-5 b(ar)l(d)g(\224)42
b(P)n(r)l(edictions)p Blue -300 -142 a(P)n(r)o(oblem)g(with)j(\223H)-5
b(ar)l(d)g(\224)42 b(P)n(r)l(edictions)1431 39 y
 20034492 14208860 0 0 28417720 20129218 startTexFig
 1431
39 a
%%BeginDocument: PS/confpred.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: confpred.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Fri May 20 14:30:36 2005
%%For: schapire@bolle (Robert Schapire,FAC,Computer Science,NONE)
%%BoundingBox: 0 0 432 306
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.761 0.894 1.000 srgb} bind def

end
save
newpath 0 306 moveto 0 0 lineto 432 0 lineto 432 306 lineto closepath clip newpath
-232.0 393.5 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
/Times-BoldItalic ff 450.00 scf sf
6600 2250 m
gs 1 -1 sc (R) col12 sh gr
% Polyline
7.500 slw
n 9600 2325 m 5250 2325 l 5250 5250 l 9600 5250 l
 cp gs col12 s gr 
% Polyline
30.000 slw
n 8025 2850 m
 8025 2550 l gs col1 s gr 
% Polyline
n 7875 2700 m
 8175 2700 l gs col1 s gr 
% Polyline
n 8325 4125 m
 8625 4125 l gs col4 s gr 
% Polyline
n 10050 5100 m
 10350 5100 l gs col4 s gr 
% Polyline
n 10725 3750 m
 11025 3750 l gs col4 s gr 
% Polyline
n 10200 4650 m
 10200 4350 l gs col1 s gr 
% Polyline
n 10050 4500 m
 10350 4500 l gs col1 s gr 
% Polyline
n 9975 1875 m
 9975 1575 l gs col1 s gr 
% Polyline
n 9825 1725 m
 10125 1725 l gs col1 s gr 
% Polyline
n 7200 3150 m
 7200 2850 l gs col1 s gr 
% Polyline
n 7050 3000 m
 7350 3000 l gs col1 s gr 
% Polyline
n 10650 5775 m
 10650 5475 l gs col1 s gr 
% Polyline
n 10500 5625 m
 10800 5625 l gs col1 s gr 
% Polyline
n 8175 1575 m
 8475 1575 l gs col4 s gr 
% Polyline
n 7350 1875 m
 7350 1575 l gs col1 s gr 
% Polyline
n 7200 1725 m
 7500 1725 l gs col1 s gr 
% Polyline
n 9300 4275 m
 9300 3975 l gs col1 s gr 
% Polyline
n 9150 4125 m
 9450 4125 l gs col1 s gr 
% Polyline
n 9900 3600 m
 10200 3600 l gs col4 s gr 
% Polyline
n 5850 4800 m
 5850 4500 l gs col1 s gr 
% Polyline
n 5700 4650 m
 6000 4650 l gs col1 s gr 
% Polyline
n 6300 3975 m
 6300 3675 l gs col1 s gr 
% Polyline
n 6150 3825 m
 6450 3825 l gs col1 s gr 
% Polyline
n 5925 2925 m
 5925 2625 l gs col1 s gr 
% Polyline
n 5775 2775 m
 6075 2775 l gs col1 s gr 
% Polyline
n 7725 3900 m
 7725 3600 l gs col1 s gr 
% Polyline
n 7575 3750 m
 7875 3750 l gs col1 s gr 
% Polyline
n 9150 5850 m
 9150 5550 l gs col1 s gr 
% Polyline
n 9000 5700 m
 9300 5700 l gs col1 s gr 
% Polyline
n 7800 6150 m
 8100 6150 l gs col4 s gr 
% Polyline
n 9300 6525 m
 9300 6225 l gs col1 s gr 
% Polyline
n 9150 6375 m
 9450 6375 l gs col1 s gr 
% Polyline
n 9975 5850 m
 10275 5850 l gs col4 s gr 
% Polyline
n 7275 6075 m
 7275 5775 l gs col1 s gr 
% Polyline
n 7125 5925 m
 7425 5925 l gs col1 s gr 
% Polyline
n 4575 6075 m
 4875 6075 l gs col4 s gr 
% Polyline
n 4050 1650 m
 4350 1650 l gs col4 s gr 
% Polyline
n 5400 1875 m
 5400 1575 l gs col1 s gr 
% Polyline
n 5250 1725 m
 5550 1725 l gs col1 s gr 
% Polyline
n 6075 1500 m
 6375 1500 l gs col4 s gr 
% Polyline
n 10500 3150 m
 10500 2850 l gs col1 s gr 
% Polyline
n 10350 3000 m
 10650 3000 l gs col1 s gr 
% Polyline
n 7950 5400 m
 8250 5400 l gs col4 s gr 
% Polyline
n 6375 5475 m
 6675 5475 l gs col4 s gr 
% Polyline
n 5700 6075 m
 5700 5775 l gs col1 s gr 
% Polyline
n 5550 5925 m
 5850 5925 l gs col1 s gr 
% Polyline
n 8400 5025 m
 8400 4725 l gs col1 s gr 
% Polyline
n 8250 4875 m
 8550 4875 l gs col1 s gr 
% Polyline
n 6975 4950 m
 6975 4650 l gs col1 s gr 
% Polyline
n 6825 4800 m
 7125 4800 l gs col1 s gr 
% Polyline
n 6600 6300 m
 6600 6000 l gs col1 s gr 
% Polyline
n 6450 6150 m
 6750 6150 l gs col1 s gr 
% Polyline
n 4200 4650 m
 4200 4350 l gs col1 s gr 
% Polyline
n 4050 4500 m
 4350 4500 l gs col1 s gr 
% Polyline
n 4650 5700 m
 4650 5400 l gs col1 s gr 
% Polyline
n 4500 5550 m
 4800 5550 l gs col1 s gr 
% Polyline
n 4425 2325 m
 4725 2325 l gs col4 s gr 
% Polyline
n 4650 3975 m
 4950 3975 l gs col4 s gr 
% Polyline
n 4275 3525 m
 4275 3225 l gs col1 s gr 
% Polyline
n 4125 3375 m
 4425 3375 l gs col1 s gr 
% Polyline
n 4875 3225 m
 4875 2925 l gs col1 s gr 
% Polyline
n 4725 3075 m
 5025 3075 l gs col1 s gr 
% Polyline
n 3975 4050 m
 4275 4050 l gs col4 s gr 
% Polyline
n 9000 2175 m
 9000 1875 l gs col1 s gr 
% Polyline
n 8850 2025 m
 9150 2025 l gs col1 s gr 
% Polyline
n 9975 2475 m
 10275 2475 l gs col4 s gr 
% Polyline
n 10425 4050 m
 10425 3750 l gs col1 s gr 
% Polyline
n 10275 3900 m
 10575 3900 l gs col1 s gr 
% Polyline
n 4725 4950 m
 5025 4950 l gs col4 s gr 
% Polyline
n 9075 3075 m
 9075 2775 l gs col1 s gr 
% Polyline
n 8925 2925 m
 9225 2925 l gs col1 s gr 
% Polyline
n 3900 2625 m
 4200 2625 l gs col4 s gr 
$F2psEnd
rs

%%EndDocument

 endTexFig
 Red -208 2130 a Fs(\017)p Blue 49 w Fu(ideally)-18 b(,)45
b(want)h(w)o(eak)g(classi\002er)i(that)f(says:)p OliveGreen
1432 2530 a Fn(h)p Fm(\()p Fn(x)p Fm(\))58 b(=)2073 2230
y Fg(8)2073 2304 y(>)2073 2329 y(>)2073 2354 y(>)2073
2379 y(>)2073 2404 y(<)2073 2553 y(>)2073 2578 y(>)2073
2603 y(>)2073 2628 y(>)2073 2653 y(:)2188 2404 y Fm(+1)p
Blue 1033 w Fu(if)p OliveGreen OliveGreen 47 w Fn(x)f
Fs(2)g Fn(R)p OliveGreen Blue 2188 2653 a Fu(\223)p Fe(don)-17
b(')-7 b(t)46 b(kno)-6 b(w)p Fu(\224)p OliveGreen Blue
82 w(else)p OliveGreen Blue Red -208 3136 a Fs(\017)p
Blue Red -56 3161 802 17 v Blue White 45 w Fu(pr)o(oblem)p
Blue White -795 w(pr)o(oblem)p Blue White -56 3132 a(pr)o(oblem)p
Blue White -56 3140 a(pr)o(oblem)p Blue -56 3136 a(pr)o(oblem)o(:)57
b(cannot)47 b(expr)l(ess)g(using)g(\223har)l(d)-5 b(\224)46
b(pr)l(edictions)p Red -208 3452 a Fs(\017)p Blue 49
w Fu(if)g(must)h(pr)l(edict)p OliveGreen 46 w Fs(\006)p
Fm(1)p Blue 46 w Fu(outside)p OliveGreen 47 w Fn(R)p
Blue 2 w Fu(,)f(will)f(intr)o(oduce)i(many)f(\223bad)-5
b(\224)-56 3701 y(pr)l(edictions)p YellowOrange 38 3983
a Fp(\017)p Blue 48 w Fu(need)47 b(to)f(\223)-17 b(clean)47
b(up)-14 b(\224)45 b(on)i(later)g(r)o(ounds)p Red -208
4299 a Fs(\017)p Blue 49 w Fu(dr)n(amatically)e(incr)l(eases)j(time)e
(to)h(conv)o(er)o(gence)p eop end
%%Page: 54 54
TeXDict begin @landscape 54 53 bop Blue Red -300 135
2839 34 v Blue White -304 94 a Fv(C)n(on\002dence-rated)44
b(P)n(r)l(edictions)p Blue White -2830 w(C)n(on\002dence-rated)g(P)n(r)
l(edictions)p Blue White -300 90 a(C)n(on\002dence-rated)g(P)n(r)l
(edictions)p Blue White -300 98 a(C)n(on\002dence-rated)g(P)n(r)l
(edictions)p Blue -300 94 a(C)n(on\002dence-rated)g(P)n(r)l(edictions)p
Black 4710 290 a Fr([with)39 b(S)m(inger])p Blue Red
-208 700 a Fs(\017)p Blue 49 w Fu(useful)46 b(to)h(allo)-6
b(w)46 b(w)o(eak)g(classi\002ers)h(to)g(assign)p Red
3689 725 1132 17 v Blue White 43 w(con\002dences)p Blue
White -1123 w(con\002dences)p Blue White 3689 696 a(con\002dences)p
Blue White 3689 704 a(con\002dences)p Blue 3689 700 a(con\002dences)g
(to)-56 949 y(pr)l(edictions)p Red -208 1281 a Fs(\017)p
Blue 49 w Fu(for)r(mally)-18 b(,)45 b(allo)-6 b(w)p OliveGreen
45 w Fn(h)1470 1316 y Fi(t)1593 1281 y Fm(:)57 b Fn(X)74
b Fs(!)57 b Fc(R)p Blue OliveGreen 1606 1630 a Fm(sign)o(\()p
Fn(h)2121 1664 y Fi(t)2187 1630 y Fm(\()p Fn(x)p Fm(\)\))83
b(=)p Blue 83 w Fu(pr)l(ediction)p OliveGreen 1964 1904
a Fs(j)p Fn(h)2137 1938 y Fi(t)2203 1904 y Fm(\()p Fn(x)p
Fm(\))p Fs(j)g Fm(=)p Blue 83 w Fu(\223)-17 b(con\002dence)-12
b(\224)p OliveGreen Blue Red -208 2584 a Fs(\017)p Blue
49 w Fu(use)47 b(identical)f(update:)p OliveGreen 1271
3034 a Fn(D)1439 3074 y Fi(t)p Fl(+1)1707 3034 y Fm(\()p
Fn(i)p Fm(\))58 b(=)2196 2895 y Fn(D)2364 2929 y Fi(t)2429
2895 y Fm(\()p Fn(i)p Fm(\))p 2196 2984 449 4 v 2318
3176 a Fn(Z)2456 3211 y Fi(t)2700 3034 y Fs(\001)46 b
Fm(exp\()p Fs(\000)p Fn(\013)3456 3069 y Fi(t)3578 3034
y Fn(y)3677 3076 y Fi(i)3795 3034 y Fn(h)3911 3069 y
Fi(t)3977 3034 y Fm(\()p Fn(x)4165 3076 y Fi(i)4226 3034
y Fm(\)\))p Blue -10 3472 a Fu(and)g(identical)h(r)r(ule)f(for)h
(combining)g(w)o(eak)f(classi\002ers)p Red -208 3805
a Fs(\017)p Blue Red -56 3829 822 17 v Blue White 45
w Fu(question)p Blue White -813 w(question)p Blue White
-56 3801 a(question)p Blue White -56 3809 a(question)p
Blue -56 3805 a(question)q(:)57 b(ho)-6 b(w)46 b(to)h(choose)p
OliveGreen 48 w Fn(\013)2396 3839 y Fi(t)p Blue 2507
3805 a Fu(and)p OliveGreen 46 w Fn(h)3029 3839 y Fi(t)p
Blue 3141 3805 a Fu(on)g(each)g(r)o(ound)p eop end
%%Page: 55 55
TeXDict begin @landscape 55 54 bop Blue Red -300 596
3525 34 v Blue White -304 555 a Fv(C)n(on\002dence-rated)44
b(P)n(r)l(edictions)g(\(cont)s(.\))p Blue White -3516
w(C)n(on\002dence-rated)g(P)n(r)l(edictions)g(\(cont)s(.\))p
Blue White -300 551 a(C)n(on\002dence-rated)g(P)n(r)l(edictions)g
(\(cont)s(.\))p Blue White -300 559 a(C)n(on\002dence-rated)g(P)n(r)l
(edictions)g(\(cont)s(.\))p Blue -300 555 a(C)n(on\002dence-rated)g(P)n
(r)l(edictions)g(\(cont)s(.\))p Red -208 1002 a Fs(\017)p
Blue Red -56 1027 1003 17 v Blue White 45 w Fu(saw)i(earlier)p
Blue White -993 w(saw)g(earlier)p Blue White -56 998
a(saw)g(earlier)p Blue White -56 1006 a(saw)g(earlier)p
Blue -56 1002 a(saw)g(earlier)q(:)p OliveGreen 609 1386
a Fm(training)h(error\()p Fn(H)1947 1434 y Fl(\014nal)2247
1386 y Fm(\))58 b Fs(\024)2596 1276 y Fg(Y)2618 1520
y Fi(t)2736 1386 y Fn(Z)2874 1420 y Fi(t)2997 1386 y
Fm(=)3203 1276 y Fg(X)3234 1527 y Fi(i)3358 1386 y Fm(exp)3682
1138 y Fg(0)3682 1284 y(B)3682 1334 y(B)3682 1387 y(@)3754
1386 y Fs(\000)p Fn(y)4014 1427 y Fi(i)4110 1276 y Fg(X)4139
1520 y Fi(t)4264 1386 y Fn(\013)4393 1420 y Fi(t)4458
1386 y Fn(h)4574 1420 y Fi(t)4639 1386 y Fm(\()p Fn(x)4827
1427 y Fi(i)4889 1386 y Fm(\))4962 1138 y Fg(1)4962 1284
y(C)4962 1334 y(C)4962 1387 y(A)p Blue Red -208 2066
a Fs(\017)p Blue 49 w Fu(ther)l(efor)l(e)l(,)47 b(on)g(each)g(r)o(ound)
p OliveGreen 47 w Fn(t)p Blue Fu(,)f(should)g(choose)p
OliveGreen 48 w Fn(\013)3996 2101 y Fi(t)4061 2066 y
Fn(h)4177 2101 y Fi(t)p Blue 4289 2066 a Fu(to)h(minimiz)o(e:)p
OliveGreen 1485 2415 a Fn(Z)1623 2450 y Fi(t)1746 2415
y Fm(=)1952 2305 y Fg(X)1983 2557 y Fi(i)2106 2415 y
Fn(D)2274 2450 y Fi(t)2339 2415 y Fm(\()p Fn(i)p Fm(\))34
b(exp)q(\()p Fs(\000)p Fn(\013)3242 2450 y Fi(t)3364
2415 y Fn(y)3463 2457 y Fi(i)3581 2415 y Fn(h)3697 2450
y Fi(t)3763 2415 y Fm(\()p Fn(x)3951 2457 y Fi(i)4012
2415 y Fm(\)\))p Blue Red -208 3096 a Fs(\017)p Blue
49 w Fu(in)46 b(many)g(cases)h(\(e)l(.g.,)g(decision)f(stumps\),)h
(best)f(con\002dence-r)n(ated)-56 3345 y(w)o(eak)g(classi\002er)i(has)e
(simple)g(for)r(m)g(that)h(can)g(be)f(found)g(ef\002ciently)p
eop end
%%Page: 56 56
TeXDict begin @landscape 56 55 bop Blue Red -300 -101
3858 34 v Blue White -304 -142 a Fv(C)n(on\002dence-rated)44
b(P)n(r)l(edictions)g(H)-6 b(elp)42 b(a)i(Lot)p Blue
White -3849 w(C)n(on\002dence-rated)g(P)n(r)l(edictions)g(H)-6
b(elp)43 b(a)g(Lot)p Blue White -300 -146 a(C)n(on\002dence-rated)h(P)n
(r)l(edictions)g(H)-6 b(elp)43 b(a)g(Lot)p Blue White
-300 -138 a(C)n(on\002dence-rated)h(P)n(r)l(edictions)g(H)-6
b(elp)43 b(a)g(Lot)p Blue -300 -142 a(C)n(on\002dence-rated)h(P)n(r)l
(edictions)g(H)-6 b(elp)43 b(a)g(Lot)600 -48 y
 33153862 22876158 3289088 3289088 26970521 19866091 startTexFig
 600 -48
a
%%BeginDocument: ../eurocolt99/ap_train_test.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ap_train_test.ps
%%Creator: gnuplot
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 120 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/UL { gnulinewidth mul /userlinewidth exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 0 0 DL 0 0 1 setrgbcolor} def
/LT1 { PL [3 dl 4 dl] 0 0 0 DL 0 0 1 setrgbcolor } def
/LT2 { PL [] 0 0 0 DL 0 1 0 setrgbcolor} def
/LT3 { PL [3 dl 4 dl] 0 0 0 DL 0 1 0 setrgbcolor } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
LTb
LTa
920 1089 M
6160 0 V
LTb
920 1089 M
63 0 V
6097 0 R
-63 0 V
-6217 0 R
(10) Rshow
LTa
920 1666 M
6160 0 V
LTb
920 1666 M
63 0 V
6097 0 R
-63 0 V
-6217 0 R
(20) Rshow
LTa
920 2243 M
6160 0 V
LTb
920 2243 M
63 0 V
6097 0 R
-63 0 V
-6217 0 R
(30) Rshow
LTa
920 2820 M
6160 0 V
LTb
920 2820 M
63 0 V
6097 0 R
-63 0 V
-6217 0 R
(40) Rshow
LTa
920 3397 M
6160 0 V
LTb
920 3397 M
63 0 V
6097 0 R
-63 0 V
-6217 0 R
(50) Rshow
LTa
920 3974 M
6160 0 V
LTb
920 3974 M
63 0 V
6097 0 R
-63 0 V
-6217 0 R
(60) Rshow
LTa
920 4551 M
4057 0 V
1983 0 R
120 0 V
LTb
920 4551 M
63 0 V
6097 0 R
-63 0 V
-6217 0 R
(70) Rshow
LTa
920 800 M
0 4040 V
LTb
920 800 M
0 63 V
0 3977 R
0 -63 V
920 600 M
(1) Cshow
1296 800 M
0 31 V
0 4009 R
0 -31 V
1793 800 M
0 31 V
0 4009 R
0 -31 V
2049 800 M
0 31 V
0 4009 R
0 -31 V
LTa
2170 800 M
0 4040 V
LTb
2170 800 M
0 63 V
0 3977 R
0 -63 V
0 -4177 R
(10) Cshow
2546 800 M
0 31 V
0 4009 R
0 -31 V
3043 800 M
0 31 V
0 4009 R
0 -31 V
3298 800 M
0 31 V
0 4009 R
0 -31 V
LTa
3419 800 M
0 4040 V
LTb
3419 800 M
0 63 V
0 3977 R
0 -63 V
0 -4177 R
(100) Cshow
3795 800 M
0 31 V
0 4009 R
0 -31 V
4293 800 M
0 31 V
0 4009 R
0 -31 V
4548 800 M
0 31 V
0 4009 R
0 -31 V
LTa
4669 800 M
0 4040 V
LTb
4669 800 M
0 63 V
0 3977 R
0 -63 V
0 -4177 R
(1000) Cshow
5045 800 M
0 31 V
0 4009 R
0 -31 V
5542 800 M
0 31 V
0 4009 R
0 -31 V
5797 800 M
0 31 V
0 4009 R
0 -31 V
LTa
5919 800 M
%0 3377 V
%0 600 R
0 3150 V
0 827 R
0 63 V
LTb
5919 800 M
0 63 V
0 3977 R
0 -63 V
0 -4177 R
(10000) Cshow
6295 800 M
0 31 V
0 4009 R
0 -31 V
6792 800 M
0 31 V
0 4009 R
0 -31 V
7047 800 M
0 31 V
0 4009 R
0 -31 V
LTb
920 800 M
6160 0 V
0 4040 V
-6160 0 V
920 800 L
500 2820 M
currentpoint gsave translate 90 rotate 0 0 M
0 150 rmoveto
(% Error) Cshow
grestore
4000 300 M
(Number of rounds) Cshow
4.000 UL
LT1
6177 4477 M
(train no conf) Rshow
6297 4477 M
543 0 V
920 4362 M
376 -17 V
220 -20 V
156 -134 V
121 0 V
99 0 V
84 -22 V
73 -1 V
63 0 V
58 0 V
51 0 V
48 -41 V
43 0 V
40 1 V
38 0 V
35 0 V
33 -1 V
31 -1 V
29 0 V
28 0 V
26 0 V
26 0 V
24 -49 V
23 0 V
22 0 V
758 -134 V
373 -154 V
219 -43 V
156 -90 V
121 -48 V
99 -58 V
83 -50 V
72 -35 V
64 -35 V
57 -36 V
52 -24 V
47 -22 V
44 -22 V
40 -27 V
37 -10 V
35 -18 V
33 -6 V
31 -9 V
30 -12 V
27 -13 V
27 -14 V
25 -15 V
24 -11 V
23 -11 V
22 -2 V
22 -10 V
20 -14 V
20 -8 V
19 -15 V
18 -10 V
18 -7 V
17 -9 V
17 -12 V
16 -10 V
16 -8 V
15 -10 V
15 -6 V
15 -7 V
14 -7 V
13 -5 V
14 -7 V
13 -12 V
13 -4 V
12 -4 V
12 1 V
12 -5 V
12 -4 V
11 -6 V
12 -5 V
10 -3 V
11 -5 V
11 -6 V
10 -2 V
10 -7 V
10 0 V
10 -5 V
10 -6 V
9 -7 V
9 -3 V
9 -4 V
9 -3 V
9 -3 V
9 -3 V
8 -6 V
9 -3 V
8 -3 V
8 -2 V
8 -6 V
8 -4 V
8 -2 V
8 -3 V
7 -3 V
8 -2 V
7 -3 V
8 -3 V
7 -1 V
7 -2 V
7 1 V
7 -3 V
7 -3 V
6 -6 V
7 -3 V
7 -3 V
6 -3 V
6 -4 V
7 -2 V
6 -4 V
6 -4 V
6 -3 V
6 -4 V
6 -2 V
6 -3 V
6 -4 V
6 -2 V
6 -4 V
5 -3 V
6 -5 V
6 -3 V
5 -1 V
6 -1 V
5 -2 V
5 -1 V
6 0 V
5 -3 V
5 -3 V
5 -3 V
5 -1 V
5 -2 V
5 -2 V
5 -3 V
5 -1 V
5 -2 V
5 -2 V
5 -3 V
4 -1 V
5 -2 V
5 -3 V
4 -2 V
5 -1 V
5 0 V
4 -3 V
5 -2 V
4 -2 V
4 -3 V
5 -1 V
4 -3 V
4 -1 V
5 -2 V
4 0 V
4 -3 V
4 -3 V
4 -2 V
4 -3 V
4 -2 V
4 -2 V
4 -2 V
4 -2 V
4 -2 V
4 -2 V
4 -2 V
4 -2 V
4 0 V
4 -2 V
3 -1 V
4 -2 V
4 0 V
4 -2 V
3 -1 V
4 -1 V
4 -1 V
3 -2 V
4 -2 V
3 -2 V
4 -1 V
3 -1 V
4 -2 V
3 -1 V
4 -3 V
3 -1 V
4 -1 V
3 -1 V
3 -2 V
4 -1 V
3 -3 V
3 0 V
4 -1 V
3 -2 V
3 -1 V
3 -2 V
4 -1 V
3 -1 V
3 -1 V
3 -1 V
3 -1 V
3 -1 V
3 -1 V
3 -1 V
4 -2 V
3 -3 V
3 -2 V
3 0 V
3 0 V
3 -1 V
3 -1 V
2 -2 V
3 -1 V
3 -2 V
3 -1 V
3 -1 V
3 -1 V
3 0 V
3 -1 V
2 -2 V
3 -2 V
3 0 V
3 -1 V
3 -1 V
2 -1 V
3 -2 V
3 -2 V
2 -3 V
3 -2 V
3 -1 V
3 -1 V
2 -1 V
3 -1 V
2 -1 V
3 1 V
3 -2 V
2 -1 V
3 -1 V
2 -1 V
3 0 V
2 -1 V
3 -1 V
3 -2 V
2 -1 V
3 -2 V
2 -1 V
2 -1 V
3 -2 V
2 -1 V
3 -1 V
2 -2 V
3 0 V
2 -3 V
2 -2 V
3 -1 V
2 -2 V
3 -1 V
2 -2 V
2 -2 V
3 0 V
2 -1 V
2 -2 V
3 -1 V
2 0 V
2 -1 V
2 -1 V
3 0 V
2 -1 V
2 -1 V
2 -1 V
3 -1 V
2 -1 V
2 0 V
2 -1 V
3 -1 V
2 -2 V
2 0 V
2 -1 V
2 -2 V
2 -2 V
2 0 V
3 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
3 -1 V
2 -1 V
2 -1 V
2 0 V
2 -2 V
2 0 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 -2 V
2 -1 V
1 -2 V
2 0 V
2 0 V
2 0 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
2 0 V
2 -1 V
2 -2 V
2 0 V
1 0 V
2 -2 V
2 -1 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -2 V
1 -1 V
2 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
2 0 V
2 1 V
1 0 V
2 -3 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
2 -1 V
1 0 V
2 -2 V
2 0 V
1 0 V
2 -1 V
2 -2 V
1 1 V
2 -1 V
2 -1 V
1 0 V
2 0 V
1 -1 V
2 -1 V
2 0 V
1 0 V
2 -1 V
2 -1 V
1 0 V
2 0 V
1 0 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
1 1 V
2 -1 V
1 -1 V
2 -1 V
1 0 V
currentpoint stroke M
1 -1 V
2 0 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
1 0 V
2 -2 V
1 0 V
2 0 V
1 -1 V
1 0 V
2 1 V
1 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
1 -2 V
2 0 V
1 -1 V
1 -1 V
2 -1 V
1 0 V
1 -1 V
2 0 V
1 0 V
1 -1 V
2 0 V
1 -1 V
1 0 V
2 -1 V
1 0 V
1 0 V
2 -1 V
1 0 V
1 0 V
1 0 V
2 -1 V
1 -1 V
1 -1 V
2 0 V
1 -1 V
1 -1 V
1 0 V
2 0 V
1 -1 V
1 -1 V
1 0 V
2 -1 V
1 0 V
1 0 V
1 -1 V
2 0 V
1 0 V
1 0 V
1 -1 V
2 0 V
1 -1 V
1 0 V
1 -1 V
2 0 V
1 0 V
1 0 V
1 -1 V
1 -2 V
2 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
2 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
2 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 -1 V
2 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 -1 V
2 0 V
1 -1 V
1 -1 V
1 1 V
1 0 V
1 -1 V
1 0 V
2 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 -1 V
1 -1 V
2 -1 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 -1 V
1 -1 V
1 0 V
2 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
2 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
2 -1 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
0 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 1 V
0 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
0 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
0 -1 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
0 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 -1 V
1 0 V
1 0 V
0 -1 V
1 0 V
1 -1 V
1 0 V
0 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 -1 V
1 0 V
1 0 V
1 0 V
0 -1 V
1 0 V
1 0 V
1 0 V
0 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
0 -1 V
1 0 V
1 -1 V
0 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
4.000 UL
LT0
6177 4677 M
(test no conf) Rshow
6297 4677 M
543 0 V
920 4400 M
376 -47 V
220 -20 V
156 -88 V
121 0 V
99 0 V
84 -27 V
73 0 V
63 0 V
58 0 V
51 0 V
48 -42 V
43 0 V
40 0 V
38 0 V
35 0 V
33 0 V
31 -2 V
29 0 V
28 0 V
26 0 V
26 0 V
24 -49 V
23 0 V
22 0 V
758 -140 V
373 -141 V
219 -41 V
156 -81 V
121 -33 V
99 -61 V
83 -38 V
72 -29 V
64 -40 V
57 -31 V
52 -20 V
47 -19 V
44 -21 V
40 -26 V
37 -7 V
35 -14 V
33 -6 V
31 -13 V
30 -8 V
27 -13 V
27 -11 V
25 -19 V
24 -10 V
23 -7 V
22 -4 V
22 -12 V
20 -13 V
20 -11 V
19 -10 V
18 -9 V
18 -5 V
17 -9 V
17 -13 V
16 -9 V
16 -11 V
15 -8 V
15 -6 V
15 -4 V
14 -9 V
13 -2 V
14 -8 V
13 -12 V
13 -7 V
12 -13 V
12 -3 V
12 -1 V
12 -5 V
11 -6 V
12 -7 V
10 -4 V
11 -4 V
11 -6 V
10 -4 V
10 -6 V
10 1 V
10 -5 V
10 -4 V
9 -8 V
9 -2 V
9 -6 V
9 -3 V
9 -1 V
9 -3 V
8 -5 V
9 -2 V
8 -2 V
8 -2 V
8 -5 V
8 -3 V
8 -4 V
8 -2 V
7 -3 V
8 -5 V
7 -2 V
8 -3 V
7 -2 V
7 -2 V
7 2 V
7 -3 V
7 -3 V
6 -6 V
7 -5 V
7 -2 V
6 -4 V
6 -1 V
7 -3 V
6 -3 V
6 -5 V
6 -3 V
6 -3 V
6 -2 V
6 -4 V
6 -4 V
6 -1 V
6 -4 V
5 -3 V
6 -3 V
6 -4 V
5 -2 V
6 0 V
5 -3 V
5 -2 V
6 -2 V
5 -3 V
5 -1 V
5 -2 V
5 -2 V
5 -4 V
5 0 V
5 -2 V
5 -2 V
5 -3 V
5 -2 V
5 -2 V
4 -2 V
5 -2 V
5 0 V
4 0 V
5 -1 V
5 -1 V
4 -2 V
5 -1 V
4 -1 V
4 -5 V
5 -1 V
4 -3 V
4 -1 V
5 -1 V
4 0 V
4 -3 V
4 -1 V
4 -2 V
4 -5 V
4 -1 V
4 -1 V
4 -2 V
4 -3 V
4 -2 V
4 -2 V
4 -3 V
4 -3 V
4 1 V
4 -2 V
3 0 V
4 -2 V
4 0 V
4 -2 V
3 -2 V
4 -1 V
4 -2 V
3 1 V
4 -2 V
3 -1 V
4 -2 V
3 -1 V
4 -1 V
3 -2 V
4 -3 V
3 -2 V
4 0 V
3 -3 V
3 -1 V
4 -1 V
3 -3 V
3 0 V
4 -1 V
3 -1 V
3 -1 V
3 -2 V
4 -2 V
3 -2 V
3 -2 V
3 -1 V
3 -1 V
3 0 V
3 -1 V
3 -1 V
4 -1 V
3 -3 V
3 0 V
3 -1 V
3 -1 V
3 -1 V
3 0 V
2 -3 V
3 -1 V
3 -2 V
3 -1 V
3 0 V
3 -1 V
3 0 V
3 -1 V
2 -3 V
3 -1 V
3 0 V
3 -1 V
3 -1 V
2 -1 V
3 -1 V
3 -3 V
2 -2 V
3 0 V
3 -1 V
3 -1 V
2 -2 V
3 -1 V
2 0 V
3 1 V
3 -1 V
2 0 V
3 0 V
2 -1 V
3 -3 V
2 -1 V
3 -1 V
3 -2 V
2 -2 V
3 -2 V
2 -1 V
2 -1 V
3 -2 V
2 0 V
3 -2 V
2 -1 V
3 -1 V
2 -2 V
2 -1 V
3 -1 V
2 -5 V
3 -2 V
2 -2 V
2 -1 V
3 -2 V
2 -1 V
2 -1 V
3 -1 V
2 -1 V
2 0 V
2 0 V
3 -1 V
2 0 V
2 -1 V
2 -1 V
3 -1 V
2 -1 V
2 -1 V
2 -1 V
3 -2 V
2 0 V
2 -2 V
2 0 V
2 -1 V
2 -1 V
2 0 V
3 -2 V
2 -1 V
2 -1 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 0 V
3 -1 V
2 -2 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 0 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
2 1 V
2 0 V
2 -2 V
2 0 V
2 0 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
2 0 V
2 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
2 -2 V
2 -1 V
2 -1 V
1 -2 V
2 0 V
2 -3 V
2 0 V
2 -2 V
1 0 V
2 -3 V
2 0 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
2 0 V
1 0 V
2 -2 V
2 -1 V
1 0 V
2 1 V
2 -2 V
2 0 V
1 -1 V
2 -1 V
2 0 V
1 0 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
1 -1 V
2 0 V
1 0 V
2 -1 V
2 -1 V
1 0 V
2 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
2 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
1 -1 V
2 0 V
1 -1 V
2 -2 V
1 0 V
2 0 V
1 -1 V
2 -1 V
1 -1 V
2 -1 V
1 1 V
2 -1 V
1 -1 V
2 -1 V
1 0 V
2 -1 V
1 0 V
2 -1 V
1 0 V
currentpoint stroke M
1 0 V
2 -1 V
1 0 V
2 -1 V
1 -1 V
2 0 V
1 0 V
2 0 V
1 -1 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
1 -1 V
2 0 V
1 -1 V
2 0 V
1 -1 V
1 0 V
2 0 V
1 0 V
1 -1 V
2 0 V
1 0 V
2 -1 V
1 0 V
1 0 V
2 -1 V
1 -1 V
1 0 V
2 -1 V
1 -1 V
1 -1 V
2 1 V
1 0 V
1 0 V
2 0 V
1 -1 V
1 0 V
2 0 V
1 0 V
1 -1 V
2 -1 V
1 0 V
1 0 V
1 0 V
2 -1 V
1 0 V
1 -1 V
2 -1 V
1 -1 V
1 0 V
1 0 V
2 -1 V
1 1 V
1 -1 V
1 0 V
2 -1 V
1 0 V
1 0 V
1 -1 V
2 -1 V
1 0 V
1 -1 V
1 0 V
2 -1 V
1 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1 0 V
1 -1 V
1 -1 V
2 -1 V
1 -1 V
1 0 V
1 -1 V
1 0 V
2 -1 V
1 0 V
1 -1 V
1 -1 V
1 0 V
2 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
2 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
2 -1 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 1 V
1 0 V
2 -1 V
1 0 V
1 0 V
1 -1 V
1 -1 V
1 0 V
1 0 V
2 0 V
1 -2 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -2 V
1 0 V
1 0 V
1 0 V
2 -1 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 1 V
1 -2 V
2 1 V
1 -1 V
1 -1 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
2 -1 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 2 V
1 -1 V
1 0 V
1 -1 V
1 1 V
1 -1 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 -1 V
1 0 V
1 1 V
1 -1 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 -1 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 -1 V
1 0 V
1 -1 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 1 V
0 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -2 V
1 1 V
1 -1 V
0 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 -1 V
1 0 V
1 -1 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
0 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
0 1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 -1 V
1 0 V
1 0 V
1 0 V
0 -1 V
1 0 V
1 -1 V
1 0 V
1 0 V
0 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
0 -1 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -2 V
1 0 V
1 0 V
0 1 V
1 -1 V
1 0 V
1 -1 V
0 1 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 -1 V
1 0 V
0 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 0 V
0 -1 V
1 0 V
1 -1 V
1 0 V
1 -1 V
1 0 V
0 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 0 V
0 -1 V
1 0 V
1 0 V
1 0 V
1 0 V
1 -1 V
1 0 V
1 -1 V
0 1 V
1 0 V
1 0 V
1 -1 V
1 -1 V
1 0 V
1 0 V
1 0 V
1 -1 V
4.000 UL
LT3
6177 4077 M
(train conf) Rshow
6297 4077 M
543 0 V
920 4315 M
376 -45 V
220 -46 V
156 -40 V
121 0 V
99 -13 V
84 -36 V
73 -37 V
63 -25 V
58 -83 V
51 0 V
48 -11 V
43 -53 V
40 -30 V
38 -15 V
35 -28 V
33 -9 V
31 -24 V
29 -13 V
28 -15 V
26 -5 V
26 -18 V
24 -21 V
23 -7 V
22 -40 V
758 -576 V
373 -320 V
219 -164 V
156 -117 V
121 -77 V
99 -56 V
83 -46 V
72 -49 V
64 -42 V
57 -34 V
52 -28 V
47 -28 V
44 -18 V
40 -21 V
37 -18 V
35 -22 V
33 -15 V
31 -14 V
30 -16 V
27 -13 V
27 -15 V
25 -13 V
24 -10 V
23 -11 V
22 -13 V
22 -12 V
20 -11 V
20 -10 V
19 -9 V
18 -10 V
18 -8 V
17 -10 V
17 -8 V
16 -7 V
16 -7 V
15 -9 V
15 -8 V
15 -8 V
14 -8 V
13 -9 V
14 -7 V
13 -7 V
13 -10 V
12 -6 V
12 -8 V
12 -7 V
12 -6 V
11 -9 V
12 -5 V
10 -5 V
11 -5 V
11 -6 V
10 -7 V
10 -5 V
10 -7 V
10 -6 V
10 -7 V
9 -7 V
9 -6 V
9 -5 V
9 -7 V
9 -6 V
9 -6 V
8 -6 V
9 -5 V
8 -6 V
8 -6 V
8 -7 V
8 -6 V
8 -7 V
8 -6 V
7 -7 V
8 -6 V
7 -5 V
8 -6 V
7 -5 V
7 -5 V
7 -6 V
7 -6 V
7 -5 V
6 -5 V
7 -6 V
7 -6 V
6 -5 V
6 -6 V
7 -6 V
6 -5 V
6 -4 V
6 -5 V
6 -5 V
6 -5 V
6 -5 V
6 -5 V
6 -4 V
6 -6 V
5 -5 V
6 -4 V
6 -4 V
5 -5 V
6 -3 V
5 -5 V
5 -5 V
6 -6 V
5 -5 V
5 -4 V
5 -5 V
5 -5 V
5 -5 V
5 -5 V
5 -5 V
5 -5 V
5 -4 V
5 -4 V
5 -5 V
4 -5 V
5 -3 V
5 -5 V
4 -4 V
5 -6 V
5 -5 V
4 -6 V
5 -5 V
4 -4 V
4 -4 V
5 -4 V
4 -5 V
4 -4 V
5 -5 V
4 -5 V
4 -4 V
4 -4 V
4 -3 V
4 -5 V
4 -4 V
4 -5 V
4 -4 V
4 -4 V
4 -4 V
4 -3 V
4 -4 V
4 -4 V
4 -4 V
4 -4 V
3 -5 V
4 -3 V
4 -4 V
4 -4 V
3 -3 V
4 -4 V
4 -4 V
3 -4 V
4 -4 V
3 -4 V
4 -4 V
3 -4 V
4 -3 V
3 -4 V
4 -3 V
3 -4 V
4 -4 V
3 -4 V
3 -4 V
4 -2 V
3 -4 V
3 -5 V
4 -3 V
3 -4 V
3 -3 V
3 -4 V
4 -3 V
3 -4 V
3 -3 V
3 -4 V
3 -4 V
3 -4 V
3 -3 V
3 -5 V
4 -4 V
3 -4 V
3 -3 V
3 -3 V
3 -4 V
3 -3 V
3 -4 V
2 -4 V
3 -3 V
3 -4 V
3 -3 V
3 -3 V
3 -4 V
3 -4 V
3 -3 V
2 -4 V
3 -3 V
3 -4 V
3 -3 V
3 -4 V
2 -4 V
3 -4 V
4.000 UL
LT2
6177 4277 M
(test conf) Rshow
6297 4277 M
543 0 V
920 4367 M
376 -49 V
220 -42 V
156 -42 V
121 2 V
99 0 V
84 -36 V
73 -22 V
63 -20 V
58 -78 V
51 0 V
48 -22 V
43 -52 V
40 -35 V
38 -12 V
35 -29 V
33 -8 V
31 -22 V
29 -17 V
28 -10 V
26 -4 V
26 -20 V
24 -2 V
23 1 V
22 -48 V
758 -534 V
373 -313 V
219 -183 V
156 -93 V
121 -75 V
99 -73 V
83 -44 V
72 -35 V
64 -31 V
57 -37 V
52 -36 V
47 -23 V
44 -14 V
40 -17 V
37 -10 V
35 -13 V
33 -10 V
31 -8 V
30 -10 V
27 -11 V
27 -9 V
25 -8 V
24 -7 V
23 -6 V
22 -7 V
22 -3 V
20 -5 V
20 -3 V
19 -4 V
18 -4 V
18 -4 V
17 -2 V
17 -5 V
16 -1 V
16 -5 V
15 -3 V
15 -2 V
15 -4 V
14 -4 V
13 -2 V
14 -3 V
13 -3 V
13 0 V
12 0 V
12 1 V
12 -2 V
12 -1 V
11 -2 V
12 -1 V
10 -2 V
11 -1 V
11 2 V
10 -1 V
10 1 V
10 -1 V
10 -2 V
10 1 V
9 1 V
9 1 V
9 -1 V
9 1 V
9 0 V
9 -2 V
8 1 V
9 -2 V
8 1 V
8 -1 V
8 -1 V
8 0 V
8 0 V
8 -2 V
7 -1 V
8 0 V
7 -1 V
8 0 V
7 -1 V
7 1 V
7 -1 V
7 1 V
7 -1 V
6 -2 V
7 1 V
7 -1 V
6 1 V
6 0 V
7 0 V
6 0 V
6 -2 V
6 0 V
6 1 V
6 -1 V
6 -1 V
6 0 V
6 1 V
6 1 V
5 0 V
6 0 V
6 -1 V
5 1 V
6 0 V
5 1 V
5 -1 V
6 -2 V
5 0 V
5 1 V
5 0 V
5 1 V
5 0 V
5 1 V
5 1 V
5 0 V
5 0 V
5 0 V
5 0 V
4 -1 V
5 -2 V
5 -1 V
4 0 V
5 0 V
5 -1 V
4 -1 V
5 2 V
4 1 V
4 -1 V
5 -1 V
4 -1 V
4 1 V
5 0 V
4 0 V
4 2 V
4 -1 V
4 -1 V
4 1 V
4 0 V
4 0 V
4 1 V
4 0 V
4 1 V
4 -1 V
4 -2 V
4 -1 V
4 0 V
4 -1 V
3 -2 V
4 0 V
4 0 V
4 1 V
3 0 V
4 1 V
4 0 V
3 -2 V
4 -1 V
3 1 V
4 3 V
3 1 V
4 -1 V
3 1 V
4 -1 V
3 1 V
4 -1 V
3 0 V
3 1 V
4 0 V
3 0 V
3 0 V
4 -3 V
3 2 V
3 0 V
3 0 V
4 1 V
3 -1 V
3 1 V
3 -2 V
3 1 V
3 0 V
3 1 V
3 0 V
4 0 V
3 1 V
3 -1 V
3 0 V
3 -1 V
3 0 V
3 0 V
2 -2 V
3 0 V
3 0 V
3 0 V
3 1 V
3 -1 V
3 0 V
3 0 V
2 1 V
3 0 V
3 -1 V
3 -1 V
3 -1 V
2 -1 V
3 1 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument

 endTexFig
 Black 1675 3107 4 250 v Blue 1726 3032 a Fu(r)o(ound)k(\002rst)g(r)l
(eached)p Black 3558 3107 V Blue 942 3281 a(\045)g(err)o(or)p
Black 1675 3356 V Blue 165 w(conf.)p Black 2375 3356
V Blue 325 w(no)g(conf.)p Black 3558 3356 V Blue 259
w(speedup)p Black 892 3359 3570 4 v OliveGreen 1175 3534
a(40)p Black 1675 3608 4 250 v OliveGreen 575 w(268)p
Black 2375 3608 V OliveGreen 341 w(16,938)p Black 3558
3608 V OliveGreen 661 w(63.2)p Black OliveGreen 1175
3783 a(35)p Black 1675 3857 V OliveGreen 575 w(598)p
Black 2375 3857 V OliveGreen 341 w(65,292)p Black 3558
3857 V OliveGreen 552 w(109.2)p Black OliveGreen 1175
4032 a(30)p Black 1675 4106 V OliveGreen 411 w(1,888)p
Black 2375 4106 V OliveGreen 183 w Fn(>)p Fu(80,000)p
Black 3558 4106 V OliveGreen 942 w(\226)p Black Blue
eop end
%%Page: 57 57
TeXDict begin @landscape 57 56 bop Blue Red -300 364
4337 34 v Blue White -304 323 a Fv(A)l(pplication:)55
b(B)o(oosting)43 b(for)g(T)-17 b(ext)44 b(C)m(ategor)r(ization)p
Blue White -4327 w(A)l(pplication:)55 b(B)o(oosting)43
b(for)g(T)-17 b(ext)44 b(C)m(ategor)r(ization)p Blue
White -300 319 a(A)l(pplication:)55 b(B)o(oosting)43
b(for)g(T)-17 b(ext)44 b(C)m(ategor)r(ization)p Blue
White -300 327 a(A)l(pplication:)55 b(B)o(oosting)43
b(for)g(T)-17 b(ext)44 b(C)m(ategor)r(ization)p Blue
-300 323 a(A)l(pplication:)55 b(B)o(oosting)43 b(for)g(T)-17
b(ext)44 b(C)m(ategor)r(ization)p Black 4710 519 a Fr([with)39
b(S)m(inger])p Blue Red -208 929 a Fs(\017)p Blue 49
w Fu(w)o(eak)46 b(classi\002ers:)58 b(v)o(er)t(y)47 b(simple)e(w)o(eak)
i(classi\002ers)g(that)g(test)g(on)-56 1178 y(simple)f(patter)r(ns)n(,)
g(namely)-18 b(,)45 b(\(sparse\))i Fn(n)p Fu(-gr)n(ams)p
YellowOrange 38 1468 a Fp(\017)p Blue 48 w Fu(\002nd)f(par)n(ameter)p
OliveGreen 47 w Fn(\013)1732 1503 y Fi(t)p Blue 1843
1468 a Fu(and)g(r)r(ule)p OliveGreen 47 w Fn(h)2783 1503
y Fi(t)p Blue 2895 1468 a Fu(of)g(giv)o(en)h(for)r(m)f(which)i(minimiz)
o(e)p OliveGreen 158 1718 a Fn(Z)296 1752 y Fi(t)p Blue
YellowOrange 38 1967 a Fp(\017)p Blue 48 w Fu(use)f(ef\002ciently)g
(implemented)e(exhaustiv)o(e)j(sear)l(ch)p Red -208 2299
a Fs(\017)p Blue 49 w Fu(\223)l(H)-6 b(o)g(w)45 b(may)h(I)g(help)h(y)o
(ou)-6 b(\224)45 b(data:)p YellowOrange 38 2589 a Fp(\017)p
Blue 48 w Fu(7844)k(tr)n(aining)e(examples)p YellowOrange
38 2838 a Fp(\017)p Blue 48 w Fu(1000)i(test)e(examples)p
YellowOrange 38 3087 a Fp(\017)p Blue 48 w Fu(categor)r(ies:)p
OliveGreen 59 w Fr(Ar)m(eaC)n(ode)p Blue Fu(,)p OliveGreen
46 w Fr(A)n(ttS)n(er)s(vice)p Blue Fu(,)p OliveGreen
46 w Fr(B)n(illingC)o(r)m(edit)p Blue Fu(,)p OliveGreen
45 w Fr(C)n(allingC)n(ar)m(d)p Blue Fu(,)p OliveGreen
44 w Fr(C)n(ollect)p Blue Fu(,)p OliveGreen 158 3336
a Fr(C)n(ompetitor)p Blue Fu(,)p OliveGreen 47 w Fr(D)o(ialF)-6
b(orM)h(e)p Blue Fu(,)p OliveGreen 45 w Fr(D)o(ir)m(ector)s(y)p
Blue Fu(,)p OliveGreen 47 w Fr(H)g(o)g(wT)-17 b(oD)o(ial)p
Blue Fu(,)p OliveGreen 47 w Fr(P)-5 b(ersonT)-17 b(oP)-5
b(erson)p Blue Fu(,)p OliveGreen 46 w Fr(R)n(ate)p Blue
Fu(,)p OliveGreen 158 3585 a Fr(Thir)m(dN)g(umber)p Blue
Fu(,)p OliveGreen 46 w Fr(T)f(ime)p Blue Fu(,)p OliveGreen
45 w Fr(T)g(imeChar)o(ge)p Blue Fu(,)p OliveGreen 45
w Fr(O)o(ther)p Blue Fu(.)p eop end
%%Page: 58 58
TeXDict begin @landscape 58 57 bop Blue Red -300 -74
1554 34 v Blue White -304 -116 a Fv(W)-12 b(eak)43 b(Classi\002ers)p
Blue White -1544 w(W)-12 b(eak)44 b(Classi\002ers)p Blue
White -300 -120 a(W)-12 b(eak)43 b(Classi\002ers)p Blue
White -300 -112 a(W)-12 b(eak)43 b(Classi\002ers)p Blue
-300 -116 a(W)-12 b(eak)43 b(Classi\002ers)p Black Blue
-45 306 a Fq(r)q(nd)p Black Blue 99 w(ter)q(m)p Black
1433 381 4 250 v OliveGreen 893 w Fb(A)m(C)p Black OliveGreen
119 w(AS)p Black OliveGreen 118 w(BC)p Black OliveGreen
106 w(C)o(C)p Black OliveGreen 100 w(C)o(O)p Black OliveGreen
85 w(CM)p Black OliveGreen 67 w(DM)p Black OliveGreen
97 w(DI)p Black OliveGreen 107 w(HO)p Black OliveGreen
103 w(PP)p Black OliveGreen 119 w(RA)p Black OliveGreen
113 w(3N)p Black OliveGreen 132 w(TI)p Black OliveGreen
132 w(T)n(C)p Black OliveGreen 110 w(O)l(T)p Black -95
384 5544 4 v OliveGreen 110 559 a Fq(1)p Black Blue 100
w(collect)p Black 1433 809 4 425 v Red 1514 775 108 217
v Black Black 1496 561 145 5 v Black Red 1782 759 108
201 v Black Black 1764 561 145 5 v Black Red 2049 730
108 171 v Black Black 2031 561 145 5 v Black Red 2317
680 108 122 v Black Black 2299 561 145 5 v Black Blue
2585 559 108 90 v Black Black 2567 561 145 5 v Black
Red 2852 730 108 171 v Black Black 2834 561 145 5 v Black
Red 3120 594 108 36 v Black Black 3102 561 145 5 v Black
Red 3387 775 108 217 v Black Black 3369 561 145 5 v Black
Red 3655 730 108 171 v Black Black 3637 561 145 5 v Black
Red 3923 653 108 95 v Black Black 3905 561 145 5 v Black
Red 4190 741 108 183 v Black Black 4172 561 145 5 v Black
Red 4458 707 108 149 v Black Black 4440 561 145 5 v Black
Red 4726 809 108 251 v Black Black 4708 561 145 5 v Black
Red 4993 809 108 251 v Black Black 4975 561 145 5 v Black
Red 5261 679 108 121 v Black Black 5243 561 145 5 v Black
1433 1139 4 331 v Red 1514 1089 108 106 v Black Black
1496 986 145 5 v Black Red 1782 1099 108 116 v Black
Black 1764 986 145 5 v Black Red 2049 1058 108 74 v Black
Black 2031 986 145 5 v Black Red 2317 1013 108 30 v Black
Black 2299 986 145 5 v Black Red 2585 1116 108 133 v
Black Black 2567 986 145 5 v Black Red 2852 1139 108
156 v Black Black 2834 986 145 5 v Black Red 3120 1010
108 27 v Black Black 3102 986 145 5 v Black Red 3387
1075 108 92 v Black Black 3369 986 145 5 v Black Red
3655 1092 108 109 v Black Black 3637 986 145 5 v Black
Red 3923 1097 108 114 v Black Black 3905 986 145 5 v
Black Red 4190 1105 108 122 v Black Black 4172 986 145
5 v Black Red 4458 1046 108 63 v Black Black 4440 986
145 5 v Black Red 4726 1139 108 156 v Black Black 4708
986 145 5 v Black Red 4993 1131 108 148 v Black Black
4975 986 145 5 v Black Red 5261 1038 108 55 v Black Black
5243 986 145 5 v Black -95 1143 5544 4 v OliveGreen 110
1317 a(2)p Black Blue 100 w(car)m(d)p Black 1433 1443
4 301 v Red 1514 1443 108 126 v Black Black 1496 1319
145 5 v Black Red 1782 1339 108 22 v Black Black 1764
1319 145 5 v Black Red 2049 1365 108 49 v Black Black
2031 1319 145 5 v Black Blue 2317 1317 108 102 v Black
Black 2299 1319 145 5 v Black Red 2585 1352 108 35 v
Black Black 2567 1319 145 5 v Black Blue 2852 1317 108
12 v Black Black 2834 1319 145 5 v Black Red 3120 1327
108 11 v Black Black 3102 1319 145 5 v Black Red 3387
1367 108 50 v Black Black 3369 1319 145 5 v Black Red
3655 1325 108 8 v Black Black 3637 1319 145 5 v Black
Red 3923 1359 108 43 v Black Black 3905 1319 145 5 v
Black Red 4190 1367 108 51 v Black Black 4172 1319 145
5 v Black Red 4458 1412 108 96 v Black Black 4440 1319
145 5 v Black Red 4726 1394 108 77 v Black Black 4708
1319 145 5 v Black Red 4993 1380 108 64 v Black Black
4975 1319 145 5 v Black Red 5261 1363 108 46 v Black
Black 5243 1319 145 5 v Black 1433 1692 4 250 v Blue
1514 1617 108 10 v Black Black 1496 1619 145 5 v Black
Blue 1782 1617 108 5 v Black Black 1764 1619 145 5 v
Black Blue 2049 1617 108 9 v Black Black 2031 1619 145
5 v Black Red 2317 1687 108 71 v Black Black 2299 1619
145 5 v Black Blue 2585 1617 108 6 v Black Black 2567
1619 145 5 v Black Red 2852 1623 108 7 v Black Black
2834 1619 145 5 v Black Blue 3120 1617 108 3 v Black
Black 3102 1619 145 5 v Black Blue 3387 1617 108 9 v
Black Black 3369 1619 145 5 v Black Blue 3655 1617 108
3 v Black Black 3637 1619 145 5 v Black Blue 3923 1617
108 6 v Black Black 3905 1619 145 5 v Black Blue 4190
1617 108 8 v Black Black 4172 1619 145 5 v Black Blue
4458 1617 108 11 v Black Black 4440 1619 145 5 v Black
Blue 4726 1617 108 8 v Black Black 4708 1619 145 5 v
Black Blue 4993 1617 108 8 v Black Black 4975 1619 145
5 v Black Blue 5261 1617 108 9 v Black Black 5243 1619
145 5 v Black -95 1695 5544 4 v OliveGreen 110 1870 a(3)p
Black Blue 100 w(my)32 b(home)p Black 1433 2070 4 375
v Red 1514 2063 108 194 v Black Black 1496 1872 145 5
v Black Red 1782 2057 108 188 v Black Black 1764 1872
145 5 v Black Red 2049 1938 108 69 v Black Black 2031
1872 145 5 v Black Red 2317 1928 108 58 v Black Black
2299 1872 145 5 v Black Red 2585 1879 108 10 v Black
Black 2567 1872 145 5 v Black Red 2852 1906 108 37 v
Black Black 2834 1872 145 5 v Black Red 3120 1893 108
24 v Black Black 3102 1872 145 5 v Black Red 3387 2070
108 201 v Black Black 3369 1872 145 5 v Black Red 3655
1889 108 20 v Black Black 3637 1872 145 5 v Black Red
3923 1920 108 50 v Black Black 3905 1872 145 5 v Black
Red 4190 1942 108 73 v Black Black 4172 1872 145 5 v
Black Blue 4458 1870 108 136 v Black Black 4440 1872
145 5 v Black Red 4726 2038 108 168 v Black Black 4708
1872 145 5 v Black Red 4993 2042 108 172 v Black Black
4975 1872 145 5 v Black Red 5261 1946 108 76 v Black
Black 5243 1872 145 5 v Black 1433 2319 4 250 v Blue
1514 2245 108 3 v Black Black 1496 2247 145 5 v Black
Blue 1782 2245 108 3 v Black Black 1764 2247 145 5 v
Black Blue 2049 2245 108 3 v Black Black 2031 2247 145
5 v Black Blue 2317 2245 108 3 v Black Black 2299 2247
145 5 v Black Blue 2585 2245 108 1 v Black Black 2567
2247 145 5 v Black Blue 2852 2245 108 2 v Black Black
2834 2247 145 5 v Black Blue 3120 2245 108 2 v Black
Black 3102 2247 145 5 v Black Blue 3387 2245 108 3 v
Black Black 3369 2247 145 5 v Black Blue 3655 2245 108
1 v Black Black 3637 2247 145 5 v Black Blue 3923 2245
108 2 v Black Black 3905 2247 145 5 v Black Blue 4190
2245 108 3 v Black Black 4172 2247 145 5 v Black Red
4458 2268 108 24 v Black Black 4440 2247 145 5 v Black
Blue 4726 2245 108 3 v Black Black 4708 2247 145 5 v
Black Blue 4993 2245 108 3 v Black Black 4975 2247 145
5 v Black Blue 5261 2245 108 3 v Black Black 5243 2247
145 5 v Black -95 2323 5544 4 v OliveGreen 110 2528 a(4)p
Black Blue 100 w(person)f(?)40 b(person)p Black 1433
2692 4 370 v Red 1514 2685 108 157 v Black Black 1496
2530 145 5 v Black Red 1782 2680 108 152 v Black Black
1764 2530 145 5 v Black Red 2049 2591 108 63 v Black
Black 2031 2530 145 5 v Black Red 2317 2588 108 61 v
Black Black 2299 2530 145 5 v Black Red 2585 2544 108
16 v Black Black 2567 2530 145 5 v Black Red 2852 2660
108 132 v Black Black 2834 2530 145 5 v Black Red 3120
2571 108 44 v Black Black 3102 2530 145 5 v Black Red
3387 2692 108 164 v Black Black 3369 2530 145 5 v Black
Red 3655 2573 108 45 v Black Black 3637 2530 145 5 v
Black Blue 3923 2528 108 206 v Black Black 3905 2530
145 5 v Black Red 4190 2678 108 151 v Black Black 4172
2530 145 5 v Black Red 4458 2566 108 38 v Black Black
4440 2530 145 5 v Black Red 4726 2660 108 132 v Black
Black 4708 2530 145 5 v Black Red 4993 2538 108 11 v
Black Black 4975 2530 145 5 v Black Red 5261 2632 108
105 v Black Black 5243 2530 145 5 v Black 1433 2941 4
250 v Blue 1514 2866 108 1 v Black Black 1496 2868 145
5 v Black Blue 1782 2866 108 1 v Black Black 1764 2868
145 5 v Black Blue 2049 2866 108 1 v Black Black 2031
2868 145 5 v Black Blue 2317 2866 108 1 v Black Black
2299 2868 145 5 v Black Blue 2585 2866 108 1 v Black
Black 2567 2868 145 5 v Black Blue 2852 2866 108 1 v
Black Black 2834 2868 145 5 v Black Blue 3120 2866 108
1 v Black Black 3102 2868 145 5 v Black Blue 3387 2866
108 1 v Black Black 3369 2868 145 5 v Black Blue 3655
2866 108 1 v Black Black 3637 2868 145 5 v Black Red
3923 2902 108 37 v Black Black 3905 2868 145 5 v Black
Blue 4190 2866 108 1 v Black Black 4172 2868 145 5 v
Black Blue 4458 2866 108 1 v Black Black 4440 2868 145
5 v Black Blue 4726 2866 108 1 v Black Black 4708 2868
145 5 v Black Blue 4993 2866 108 1 v Black Black 4975
2868 145 5 v Black Blue 5261 2866 108 1 v Black Black
5243 2868 145 5 v Black -95 2944 5544 4 v OliveGreen
110 3118 a(5)p Black Blue 100 w(code)p Black 1433 3310
4 367 v Blue 1514 3118 108 64 v Black Black 1496 3120
145 5 v Black Red 1782 3140 108 22 v Black Black 1764
3120 145 5 v Black Red 2049 3128 108 10 v Black Black
2031 3120 145 5 v Black Red 2317 3127 108 9 v Black Black
2299 3120 145 5 v Black Red 2585 3119 108 2 v Black Black
2567 3120 145 5 v Black Red 2852 3171 108 53 v Black
Black 2834 3120 145 5 v Black Blue 3120 3118 108 21 v
Black Black 3102 3120 145 5 v Black Red 3387 3136 108
19 v Black Black 3369 3120 145 5 v Black Blue 3655 3118
108 11 v Black Black 3637 3120 145 5 v Black Blue 3923
3118 108 1 v Black Black 3905 3120 145 5 v Black Red
4190 3125 108 7 v Black Black 4172 3120 145 5 v Black
Red 4458 3119 108 2 v Black Black 4440 3120 145 5 v Black
Red 4726 3142 108 25 v Black Black 4708 3120 145 5 v
Black Red 4993 3310 108 192 v Black Black 4975 3120 145
5 v Black Red 5261 3141 108 24 v Black Black 5243 3120
145 5 v Black 1433 3561 4 251 v Red 1514 3561 108 77
v Black Black 1496 3486 145 5 v Black Blue 1782 3484
108 3 v Black Black 1764 3486 145 5 v Black Blue 2049
3484 108 2 v Black Black 2031 3486 145 5 v Black Blue
2317 3484 108 2 v Black Black 2299 3486 145 5 v Black
Blue 2585 3484 108 1 v Black Black 2567 3486 145 5 v
Black Blue 2852 3484 108 4 v Black Black 2834 3486 145
5 v Black Red 3120 3488 108 4 v Black Black 3102 3486
145 5 v Black Blue 3387 3484 108 3 v Black Black 3369
3486 145 5 v Black Red 3655 3486 108 2 v Black Black
3637 3486 145 5 v Black Blue 3923 3484 108 1 v Black
Black 3905 3486 145 5 v Black Blue 4190 3484 108 1 v
Black Black 4172 3486 145 5 v Black Blue 4458 3484 108
1 v Black Black 4440 3486 145 5 v Black Blue 4726 3484
108 3 v Black Black 4708 3486 145 5 v Black Blue 4993
3484 108 5 v Black Black 4975 3486 145 5 v Black Blue
5261 3484 108 3 v Black Black 5243 3486 145 5 v Black
-95 3564 5544 4 v OliveGreen 110 3739 a(6)p Black Blue
100 w(I)p Black 1433 3813 4 250 v Red 1514 3739 108 1
v Black Black 1496 3741 145 5 v Black Blue 1782 3739
108 8 v Black Black 1764 3741 145 5 v Black Blue 2049
3739 108 18 v Black Black 2031 3741 145 5 v Black Red
2317 3753 108 15 v Black Black 2299 3741 145 5 v Black
Red 2585 3748 108 9 v Black Black 2567 3741 145 5 v Black
Blue 2852 3739 108 16 v Black Black 2834 3741 145 5 v
Black Blue 3120 3739 108 2 v Black Black 3102 3741 145
5 v Black Blue 3387 3739 108 7 v Black Black 3369 3741
145 5 v Black Blue 3655 3739 108 15 v Black Black 3637
3741 145 5 v Black Red 3923 3743 108 5 v Black Black
3905 3741 145 5 v Black Blue 4190 3739 108 3 v Black
Black 4172 3741 145 5 v Black Blue Black Black 4440 3741
V Black Red 4726 3751 108 12 v Black Black 4708 3741
145 5 v Black Red 4993 3744 108 6 v Black Black 4975
3741 145 5 v Black Blue 5261 3739 108 1 v Black Black
5243 3741 145 5 v Black 1433 4062 4 250 v Blue 1514 3988
108 1 v Black Black 1496 3990 145 5 v Black Red 1782
4003 108 15 v Black Black 1764 3990 145 5 v Black Red
2049 4057 108 69 v Black Black 2031 3990 145 5 v Black
Blue 2317 3988 108 19 v Black Black 2299 3990 145 5 v
Black Blue 2585 3988 108 11 v Black Black 2567 3990 145
5 v Black Red 2852 4031 108 43 v Black Black 2834 3990
145 5 v Black Red 3120 3990 108 3 v Black Black 3102
3990 145 5 v Black Red 3387 3999 108 11 v Black Black
3369 3990 145 5 v Black Red 3655 4032 108 45 v Black
Black 3637 3990 145 5 v Black Blue 3923 3988 108 5 v
Black Black 3905 3990 145 5 v Black Red 4190 3991 108
4 v Black Black 4172 3990 145 5 v Black Blue Black Black
4440 3990 V Black Blue 4726 3988 108 12 v Black Black
4708 3990 145 5 v Black Blue 4993 3988 108 6 v Black
Black 4975 3990 145 5 v Black Red 5261 3988 108 1 v Black
Black 5243 3990 145 5 v Black -95 4066 5544 4 v Blue
eop end
%%Page: 59 59
TeXDict begin @landscape 59 58 bop Blue Red -300 -101
2096 34 v Blue White -304 -142 a Fv(M)-6 b(or)l(e)42
b(W)-12 b(eak)44 b(Classi\002ers)p Blue White -2086 w(M)-6
b(or)l(e)43 b(W)-12 b(eak)43 b(Classi\002ers)p Blue White
-300 -146 a(M)-6 b(or)l(e)43 b(W)-12 b(eak)43 b(Classi\002ers)p
Blue White -300 -138 a(M)-6 b(or)l(e)43 b(W)-12 b(eak)43
b(Classi\002ers)p Blue -300 -142 a(M)-6 b(or)l(e)43 b(W)-12
b(eak)43 b(Classi\002ers)p Black Blue -45 223 a Fq(r)q(nd)p
Black Blue 99 w(ter)q(m)p Black 1433 298 4 250 v OliveGreen
893 w Fb(A)m(C)p Black OliveGreen 119 w(AS)p Black OliveGreen
118 w(BC)p Black OliveGreen 106 w(C)o(C)p Black OliveGreen
100 w(C)o(O)p Black OliveGreen 85 w(CM)p Black OliveGreen
67 w(DM)p Black OliveGreen 97 w(DI)p Black OliveGreen
107 w(HO)p Black OliveGreen 103 w(PP)p Black OliveGreen
119 w(RA)p Black OliveGreen 113 w(3N)p Black OliveGreen
132 w(TI)p Black OliveGreen 132 w(T)n(C)p Black OliveGreen
110 w(O)l(T)p Black -95 301 5544 4 v OliveGreen 110 475
a Fq(7)p Black Blue 100 w(time)p Black 1433 583 4 282
v Red 1514 529 108 54 v Black Black 1496 477 145 5 v
Black Red 1782 488 108 13 v Black Black 1764 477 145
5 v Black Red 2049 479 108 4 v Black Black 2031 477 145
5 v Black Red 2317 556 108 81 v Black Black 2299 477
145 5 v Black Red 2585 523 108 48 v Black Black 2567
477 145 5 v Black Red 2852 491 108 16 v Black Black 2834
477 145 5 v Black Red 3120 483 108 9 v Black Black 3102
477 145 5 v Black Red 3387 516 108 41 v Black Black 3369
477 145 5 v Black Red 3655 504 108 29 v Black Black 3637
477 145 5 v Black Red 3923 583 108 108 v Black Black
3905 477 145 5 v Black Blue 4190 475 108 23 v Black Black
4172 477 145 5 v Black Red 4458 509 108 34 v Black Black
4440 477 145 5 v Black Blue 4726 475 108 104 v Black
Black 4708 477 145 5 v Black Blue 4993 475 108 103 v
Black Black 4975 477 145 5 v Black Red 5261 475 108 1
v Black Black 5243 477 145 5 v Black 1433 832 4 250 v
Blue 1514 757 108 1 v Black Black 1496 759 145 5 v Black
Blue 1782 757 108 1 v Black Black 1764 759 145 5 v Black
Blue 2049 757 108 1 v Black Black 2031 759 145 5 v Black
Blue 2317 757 108 2 v Black Black 2299 759 145 5 v Black
Blue 2585 757 108 1 v Black Black 2567 759 145 5 v Black
Blue 2852 757 108 1 v Black Black 2834 759 145 5 v Black
Blue 3120 757 108 1 v Black Black 3102 759 145 5 v Black
Blue 3387 757 108 1 v Black Black 3369 759 145 5 v Black
Blue 3655 757 108 1 v Black Black 3637 759 145 5 v Black
Blue 3923 757 108 1 v Black Black 3905 759 145 5 v Black
Red 4190 758 108 2 v Black Black 4172 759 145 5 v Black
Blue 4458 757 108 1 v Black Black 4440 759 145 5 v Black
Red 4726 814 108 57 v Black Black 4708 759 145 5 v Black
Red 4993 806 108 49 v Black Black 4975 759 145 5 v Black
Blue Black Black 5243 759 V Black -95 835 5544 4 v OliveGreen
110 1010 a(8)p Black Blue 100 w(wr)o(ong)31 b(number)p
Black 1433 1182 4 347 v Red 1514 1165 108 155 v Black
Black 1496 1012 145 5 v Black Red 1782 1182 108 173 v
Black Black 1764 1012 145 5 v Black Blue 2049 1010 108
143 v Black Black 2031 1012 145 5 v Black Red 2317 1074
108 64 v Black Black 2299 1012 145 5 v Black Red 2585
1038 108 29 v Black Black 2567 1012 145 5 v Black Red
2852 1160 108 151 v Black Black 2834 1012 145 5 v Black
Red 3120 1081 108 72 v Black Black 3102 1012 145 5 v
Black Red 3387 1099 108 90 v Black Black 3369 1012 145
5 v Black Red 3655 1080 108 71 v Black Black 3637 1012
145 5 v Black Red 3923 1138 108 128 v Black Black 3905
1012 145 5 v Black Red 4190 1177 108 168 v Black Black
4172 1012 145 5 v Black Red 4458 1076 108 66 v Black
Black 4440 1012 145 5 v Black Red 4726 1129 108 120 v
Black Black 4708 1012 145 5 v Black Red 4993 1139 108
129 v Black Black 4975 1012 145 5 v Black Red 5261 1097
108 88 v Black Black 5243 1012 145 5 v Black 1433 1431
4 250 v Blue 1514 1357 108 2 v Black Black 1496 1359
145 5 v Black Blue 1782 1357 108 2 v Black Black 1764
1359 145 5 v Black Red 2049 1370 108 13 v Black Black
2031 1359 145 5 v Black Blue 2317 1357 108 2 v Black
Black 2299 1359 145 5 v Black Blue 2585 1357 108 1 v
Black Black 2567 1359 145 5 v Black Blue 2852 1357 108
2 v Black Black 2834 1359 145 5 v Black Blue 3120 1357
108 2 v Black Black 3102 1359 145 5 v Black Blue 3387
1357 108 2 v Black Black 3369 1359 145 5 v Black Blue
3655 1357 108 2 v Black Black 3637 1359 145 5 v Black
Blue 3923 1357 108 1 v Black Black 3905 1359 145 5 v
Black Blue 4190 1357 108 2 v Black Black 4172 1359 145
5 v Black Blue 4458 1357 108 2 v Black Black 4440 1359
145 5 v Black Blue 4726 1357 108 1 v Black Black 4708
1359 145 5 v Black Blue 4993 1357 108 2 v Black Black
4975 1359 145 5 v Black Blue 5261 1357 108 2 v Black
Black 5243 1359 145 5 v Black -95 1435 5544 4 v OliveGreen
110 1609 a(9)p Black Blue 100 w(ho)l(w)p Black 1433 1692
4 258 v Red 1514 1621 108 13 v Black Black 1496 1611
145 5 v Black Blue 1782 1609 108 24 v Black Black 1764
1611 145 5 v Black Red 2049 1630 108 22 v Black Black
2031 1611 145 5 v Black Red 2317 1653 108 44 v Black
Black 2299 1611 145 5 v Black Red 2585 1638 108 29 v
Black Black 2567 1611 145 5 v Black Blue 2852 1609 108
44 v Black Black 2834 1611 145 5 v Black Red 3120 1667
108 59 v Black Black 3102 1611 145 5 v Black Blue 3387
1609 108 11 v Black Black 3369 1611 145 5 v Black Blue
3655 1609 108 77 v Black Black 3637 1611 145 5 v Black
Red 3923 1692 108 84 v Black Black 3905 1611 145 5 v
Black Blue 4190 1609 108 81 v Black Black 4172 1611 145
5 v Black Red 4458 1624 108 16 v Black Black 4440 1611
145 5 v Black Red 4726 1643 108 35 v Black Black 4708
1611 145 5 v Black Blue 4993 1609 108 58 v Black Black
4975 1611 145 5 v Black Blue 5261 1609 108 11 v Black
Black 5243 1611 145 5 v Black 1433 1941 4 250 v Blue
1514 1867 108 1 v Black Black 1496 1869 145 5 v Black
Red 1782 1869 108 2 v Black Black 1764 1869 145 5 v Black
Blue 2049 1867 108 1 v Black Black 2031 1869 145 5 v
Black Blue 2317 1867 108 2 v Black Black 2299 1869 145
5 v Black Blue 2585 1867 108 2 v Black Black 2567 1869
145 5 v Black Red 2852 1871 108 5 v Black Black 2834
1869 145 5 v Black Blue 3120 1867 108 2 v Black Black
3102 1869 145 5 v Black Red 3387 1868 108 1 v Black Black
3369 1869 145 5 v Black Red 3655 1880 108 14 v Black
Black 3637 1869 145 5 v Black Blue 3923 1867 108 1 v
Black Black 3905 1869 145 5 v Black Red 4190 1884 108
18 v Black Black 4172 1869 145 5 v Black Blue 4458 1867
108 1 v Black Black 4440 1869 145 5 v Black Blue 4726
1867 108 1 v Black Black 4708 1869 145 5 v Black Red
4993 1876 108 10 v Black Black 4975 1869 145 5 v Black
Red 5261 1868 108 1 v Black Black 5243 1869 145 5 v Black
-95 1945 5544 4 v OliveGreen 34 2119 a(10)p Black Blue
100 w(call)p Black 1433 2194 4 250 v Red 1514 2130 108
11 v Black Black 1496 2121 145 5 v Black Red 1782 2148
108 30 v Black Black 1764 2121 145 5 v Black Red 2049
2119 108 1 v Black Black 2031 2121 145 5 v Black Blue
2317 2119 108 14 v Black Black 2299 2121 145 5 v Black
Blue 2585 2119 108 2 v Black Black 2567 2121 145 5 v
Black Red 2852 2131 108 12 v Black Black 2834 2121 145
5 v Black Blue 3120 2119 108 9 v Black Black 3102 2121
145 5 v Black Red 3387 2154 108 36 v Black Black 3369
2121 145 5 v Black Blue 3655 2119 108 4 v Black Black
3637 2121 145 5 v Black Blue 3923 2119 108 4 v Black
Black 3905 2121 145 5 v Black Blue 4190 2119 108 1 v
Black Black 4172 2121 145 5 v Black Blue 4458 2119 108
11 v Black Black 4440 2121 145 5 v Black Red 4726 2124
108 6 v Black Black 4708 2121 145 5 v Black Blue 4993
2119 108 16 v Black Black 4975 2121 145 5 v Black Red
5261 2132 108 13 v Black Black 5243 2121 145 5 v Black
1433 2443 4 250 v Blue 1514 2368 108 8 v Black Black
1496 2370 145 5 v Black Blue 1782 2368 108 15 v Black
Black 1764 2370 145 5 v Black Blue 2049 2368 108 1 v
Black Black 2031 2370 145 5 v Black Red 2317 2385 108
18 v Black Black 2299 2370 145 5 v Black Red 2585 2370
108 3 v Black Black 2567 2370 145 5 v Black Blue 2852
2368 108 11 v Black Black 2834 2370 145 5 v Black Red
3120 2380 108 13 v Black Black 3102 2370 145 5 v Black
Blue 3387 2368 108 16 v Black Black 3369 2370 145 5 v
Black Red 3655 2372 108 4 v Black Black 3637 2370 145
5 v Black Red 3923 2374 108 7 v Black Black 3905 2370
145 5 v Black Red 4190 2368 108 1 v Black Black 4172
2370 145 5 v Black Red 4458 2381 108 13 v Black Black
4440 2370 145 5 v Black Blue 4726 2368 108 4 v Black
Black 4708 2370 145 5 v Black Red 4993 2391 108 24 v
Black Black 4975 2370 145 5 v Black Blue 5261 2368 108
11 v Black Black 5243 2370 145 5 v Black -95 2446 5544
4 v OliveGreen 34 2620 a(11)p Black Blue 100 w(sev)o(en)p
Black 1433 2788 4 342 v Red 1514 2717 108 97 v Black
Black 1496 2622 145 5 v Black Red 1782 2656 108 36 v
Black Black 1764 2622 145 5 v Black Blue 2049 2620 108
5 v Black Black 2031 2622 145 5 v Black Blue 2317 2620
108 23 v Black Black 2299 2622 145 5 v Black Blue 2585
2620 108 9 v Black Black 2567 2622 145 5 v Black Red
2852 2645 108 26 v Black Black 2834 2622 145 5 v Black
Blue 3120 2620 108 31 v Black Black 3102 2622 145 5 v
Black Red 3387 2651 108 31 v Black Black 3369 2622 145
5 v Black Red 3655 2674 108 54 v Black Black 3637 2622
145 5 v Black Blue 3923 2620 108 1 v Black Black 3905
2622 145 5 v Black Red 4190 2623 108 3 v Black Black
4172 2622 145 5 v Black Blue 4458 2620 108 14 v Black
Black 4440 2622 145 5 v Black Blue 4726 2620 108 29 v
Black Black 4708 2622 145 5 v Black Red 4993 2788 108
168 v Black Black 4975 2622 145 5 v Black Red 5261 2639
108 20 v Black Black 5243 2622 145 5 v Black 1433 3037
4 250 v Blue 1514 2962 108 12 v Black Black 1496 2964
145 5 v Black Blue 1782 2962 108 4 v Black Black 1764
2964 145 5 v Black Red 2049 2963 108 1 v Black Black
2031 2964 145 5 v Black Red 2317 2967 108 6 v Black Black
2299 2964 145 5 v Black Red 2585 2964 108 2 v Black Black
2567 2964 145 5 v Black Blue 2852 2962 108 3 v Black
Black 2834 2964 145 5 v Black Red 3120 2969 108 8 v Black
Black 3102 2964 145 5 v Black Blue 3387 2962 108 4 v
Black Black 3369 2964 145 5 v Black Blue 3655 2962 108
5 v Black Black 3637 2964 145 5 v Black Red 3923 2962
108 1 v Black Black 3905 2964 145 5 v Black Blue 4190
2962 108 1 v Black Black 4172 2964 145 5 v Black Red
4458 2966 108 4 v Black Black 4440 2964 145 5 v Black
Red 4726 2971 108 10 v Black Black 4708 2964 145 5 v
Black Blue 4993 2962 108 4 v Black Black 4975 2964 145
5 v Black Blue 5261 2962 108 3 v Black Black 5243 2964
145 5 v Black -95 3040 5544 4 v OliveGreen 34 3214 a(12)p
Black Blue 100 w(tr)s(ying)g(to)p Black 1433 3395 4 356
v Blue 1514 3214 108 6 v Black Black 1496 3216 145 5
v Black Red 1782 3237 108 23 v Black Black 1764 3216
145 5 v Black Red 2049 3225 108 12 v Black Black 2031
3216 145 5 v Black Red 2317 3240 108 26 v Black Black
2299 3216 145 5 v Black Red 2585 3250 108 36 v Black
Black 2567 3216 145 5 v Black Blue 2852 3214 108 27 v
Black Black 2834 3216 145 5 v Black Blue 3120 3214 108
27 v Black Black 3102 3216 145 5 v Black Blue 3387 3214
108 16 v Black Black 3369 3216 145 5 v Black Blue 3655
3214 108 29 v Black Black 3637 3216 145 5 v Black Red
3923 3270 108 56 v Black Black 3905 3216 145 5 v Black
Red 4190 3254 108 40 v Black Black 4172 3216 145 5 v
Black Red 4458 3240 108 26 v Black Black 4440 3216 145
5 v Black Red 4726 3265 108 51 v Black Black 4708 3216
145 5 v Black Red 4993 3395 108 181 v Black Black 4975
3216 145 5 v Black Blue 5261 3214 108 9 v Black Black
5243 3216 145 5 v Black 1433 3644 4 250 v Red 1514 3570
108 2 v Black Black 1496 3571 145 5 v Black Blue 1782
3569 108 3 v Black Black 1764 3571 145 5 v Black Blue
2049 3569 108 3 v Black Black 2031 3571 145 5 v Black
Blue 2317 3569 108 5 v Black Black 2299 3571 145 5 v
Black Blue 2585 3569 108 4 v Black Black 2567 3571 145
5 v Black Red 2852 3577 108 8 v Black Black 2834 3571
145 5 v Black Red 3120 3574 108 6 v Black Black 3102
3571 145 5 v Black Red 3387 3573 108 4 v Black Black
3369 3571 145 5 v Black Red 3655 3578 108 10 v Black
Black 3637 3571 145 5 v Black Blue 3923 3569 108 4 v
Black Black 3905 3571 145 5 v Black Blue 4190 3569 108
5 v Black Black 4172 3571 145 5 v Black Blue 4458 3569
108 4 v Black Black 4440 3571 145 5 v Black Blue 4726
3569 108 6 v Black Black 4708 3571 145 5 v Black Blue
4993 3569 108 7 v Black Black 4975 3571 145 5 v Black
Red 5261 3571 108 2 v Black Black 5243 3571 145 5 v Black
-95 3647 5544 4 v OliveGreen 34 3822 a(13)p Black Blue
100 w(and)p Black 1433 3897 4 250 v Red 1514 3831 108
10 v Black Black 1496 3824 145 5 v Black Blue 1782 3822
108 22 v Black Black 1764 3824 145 5 v Black Blue 2049
3822 108 20 v Black Black 2031 3824 145 5 v Black Red
2317 3835 108 13 v Black Black 2299 3824 145 5 v Black
Red 2585 3844 108 22 v Black Black 2567 3824 145 5 v
Black Blue 2852 3822 108 12 v Black Black 2834 3824 145
5 v Black Blue 3120 3822 108 10 v Black Black 3102 3824
145 5 v Black Blue 3387 3822 108 1 v Black Black 3369
3824 145 5 v Black Blue 3655 3822 108 14 v Black Black
3637 3824 145 5 v Black Blue 3923 3822 108 3 v Black
Black 3905 3824 145 5 v Black Red 4190 3831 108 10 v
Black Black 4172 3824 145 5 v Black Blue 4458 3822 108
8 v Black Black 4440 3824 145 5 v Black Red 4726 3842
108 21 v Black Black 4708 3824 145 5 v Black Blue 4993
3822 108 22 v Black Black 4975 3824 145 5 v Black Blue
5261 3822 108 8 v Black Black 5243 3824 145 5 v Black
1433 4146 4 250 v Blue 1514 4071 108 5 v Black Black
1496 4073 145 5 v Black Red 1782 4087 108 17 v Black
Black 1764 4073 145 5 v Black Red 2049 4092 108 21 v
Black Black 2031 4073 145 5 v Black Blue 2317 4071 108
6 v Black Black 2299 4073 145 5 v Black Blue 2585 4071
108 6 v Black Black 2567 4073 145 5 v Black Red 2852
4080 108 9 v Black Black 2834 4073 145 5 v Black Red
3120 4075 108 5 v Black Black 3102 4073 145 5 v Black
Red 3387 4071 108 1 v Black Black 3369 4073 145 5 v Black
Red 3655 4083 108 12 v Black Black 3637 4073 145 5 v
Black Red 3923 4072 108 1 v Black Black 3905 4073 145
5 v Black Blue 4190 4071 108 4 v Black Black 4172 4073
145 5 v Black Red 4458 4075 108 5 v Black Black 4440
4073 145 5 v Black Blue 4726 4071 108 9 v Black Black
4708 4073 145 5 v Black Red 4993 4088 108 18 v Black
Black 4975 4073 145 5 v Black Red 5261 4075 108 5 v Black
Black 5243 4073 145 5 v Black -95 4149 5544 4 v Blue
eop end
%%Page: 60 60
TeXDict begin @landscape 60 59 bop Blue Red -300 109
2096 34 v Blue White -304 67 a Fv(M)-6 b(or)l(e)42 b(W)-12
b(eak)44 b(Classi\002ers)p Blue White -2086 w(M)-6 b(or)l(e)43
b(W)-12 b(eak)43 b(Classi\002ers)p Blue White -300 63
a(M)-6 b(or)l(e)43 b(W)-12 b(eak)43 b(Classi\002ers)p
Blue White -300 71 a(M)-6 b(or)l(e)43 b(W)-12 b(eak)43
b(Classi\002ers)p Blue -300 67 a(M)-6 b(or)l(e)43 b(W)-12
b(eak)43 b(Classi\002ers)p Black Blue -45 490 a Fq(r)q(nd)p
Black Blue 99 w(ter)q(m)p Black 1433 564 4 250 v OliveGreen
893 w Fb(A)m(C)p Black OliveGreen 119 w(AS)p Black OliveGreen
118 w(BC)p Black OliveGreen 106 w(C)o(C)p Black OliveGreen
100 w(C)o(O)p Black OliveGreen 85 w(CM)p Black OliveGreen
67 w(DM)p Black OliveGreen 97 w(DI)p Black OliveGreen
107 w(HO)p Black OliveGreen 103 w(PP)p Black OliveGreen
119 w(RA)p Black OliveGreen 113 w(3N)p Black OliveGreen
132 w(TI)p Black OliveGreen 132 w(T)n(C)p Black OliveGreen
110 w(O)l(T)p Black -95 568 5544 4 v OliveGreen 34 742
a Fq(14)p Black Blue 100 w(thir)m(d)p Black 1433 897
4 330 v Red 1514 860 108 119 v Black Black 1496 744 145
5 v Black Red 1782 882 108 141 v Black Black 1764 744
145 5 v Black Red 2049 778 108 36 v Black Black 2031
744 145 5 v Black Red 2317 871 108 129 v Black Black
2299 744 145 5 v Black Red 2585 833 108 91 v Black Black
2567 744 145 5 v Black Red 2852 855 108 114 v Black Black
2834 744 145 5 v Black Red 3120 788 108 46 v Black Black
3102 744 145 5 v Black Red 3387 897 108 156 v Black Black
3369 744 145 5 v Black Red 3655 874 108 133 v Black Black
3637 744 145 5 v Black Red 3923 798 108 57 v Black Black
3905 744 145 5 v Black Red 4190 877 108 136 v Black Black
4172 744 145 5 v Black Blue 4458 742 108 123 v Black
Black 4440 744 145 5 v Black Red 4726 852 108 111 v Black
Black 4708 744 145 5 v Black Red 4993 853 108 112 v Black
Black 4975 744 145 5 v Black Blue 5261 742 108 2 v Black
Black 5243 744 145 5 v Black 1433 1146 4 250 v Blue 1514
1071 108 1 v Black Black 1496 1073 145 5 v Black Blue
1782 1071 108 1 v Black Black 1764 1073 145 5 v Black
Blue 2049 1071 108 1 v Black Black 2031 1073 145 5 v
Black Blue 2317 1071 108 1 v Black Black 2299 1073 145
5 v Black Blue 2585 1071 108 1 v Black Black 2567 1073
145 5 v Black Blue 2852 1071 108 1 v Black Black 2834
1073 145 5 v Black Blue 3120 1071 108 1 v Black Black
3102 1073 145 5 v Black Blue 3387 1071 108 1 v Black
Black 3369 1073 145 5 v Black Blue 3655 1071 108 1 v
Black Black 3637 1073 145 5 v Black Blue 3923 1071 108
1 v Black Black 3905 1073 145 5 v Black Blue 4190 1071
108 1 v Black Black 4172 1073 145 5 v Black Red 4458
1080 108 9 v Black Black 4440 1073 145 5 v Black Blue
4726 1071 108 1 v Black Black 4708 1073 145 5 v Black
Blue 4993 1071 108 1 v Black Black 4975 1073 145 5 v
Black Blue Black Black 5243 1073 V Black -95 1149 5544
4 v OliveGreen 34 1324 a(15)p Black Blue 100 w(to)p Black
1433 1398 4 250 v Red 1514 1329 108 5 v Black Black 1496
1326 145 5 v Black Red 1782 1327 108 3 v Black Black
1764 1326 145 5 v Black Red 2049 1331 108 7 v Black Black
2031 1326 145 5 v Black Blue 2317 1324 108 2 v Black
Black 2299 1326 145 5 v Black Blue 2585 1324 108 3 v
Black Black 2567 1326 145 5 v Black Blue 2852 1324 108
1 v Black Black 2834 1326 145 5 v Black Blue 3120 1324
108 2 v Black Black 3102 1326 145 5 v Black Blue 3387
1324 108 1 v Black Black 3369 1326 145 5 v Black Blue
3655 1324 108 4 v Black Black 3637 1326 145 5 v Black
Blue 3923 1324 108 11 v Black Black 3905 1326 145 5 v
Black Blue 4190 1324 108 9 v Black Black 4172 1326 145
5 v Black Blue 4458 1324 108 14 v Black Black 4440 1326
145 5 v Black Blue 4726 1324 108 8 v Black Black 4708
1326 145 5 v Black Red 4993 1342 108 19 v Black Black
4975 1326 145 5 v Black Red 5261 1331 108 8 v Black Black
5243 1326 145 5 v Black 1433 1653 4 255 v Blue 1514 1573
108 7 v Black Black 1496 1575 145 5 v Black Blue 1782
1573 108 4 v Black Black 1764 1575 145 5 v Black Blue
2049 1573 108 12 v Black Black 2031 1575 145 5 v Black
Red 2317 1576 108 4 v Black Black 2299 1575 145 5 v Black
Red 2585 1578 108 5 v Black Black 2567 1575 145 5 v Black
Red 2852 1574 108 1 v Black Black 2834 1575 145 5 v Black
Red 3120 1577 108 4 v Black Black 3102 1575 145 5 v Black
Red 3387 1573 108 1 v Black Black 3369 1575 145 5 v Black
Red 3655 1584 108 12 v Black Black 3637 1575 145 5 v
Black Red 3923 1606 108 34 v Black Black 3905 1575 145
5 v Black Red 4190 1590 108 18 v Black Black 4172 1575
145 5 v Black Red 4458 1653 108 81 v Black Black 4440
1575 145 5 v Black Red 4726 1585 108 13 v Black Black
4708 1575 145 5 v Black Blue 4993 1573 108 17 v Black
Black 4975 1575 145 5 v Black Blue 5261 1573 108 10 v
Black Black 5243 1575 145 5 v Black -95 1657 5544 4 v
OliveGreen 34 1831 a(16)p Black Blue 100 w(for)p Black
1433 2008 4 352 v Blue 1514 1831 108 33 v Black Black
1496 1833 145 5 v Black Blue 1782 1831 108 14 v Black
Black 1764 1833 145 5 v Black Blue 2049 1831 108 20 v
Black Black 2031 1833 145 5 v Black Red 2317 1878 108
47 v Black Black 2299 1833 145 5 v Black Red 2585 1845
108 14 v Black Black 2567 1833 145 5 v Black Red 2852
1834 108 4 v Black Black 2834 1833 145 5 v Black Blue
3120 1831 108 2 v Black Black 3102 1833 145 5 v Black
Blue 3387 1831 108 17 v Black Black 3369 1833 145 5 v
Black Red 3655 1835 108 5 v Black Black 3637 1833 145
5 v Black Blue 3923 1831 108 8 v Black Black 3905 1833
145 5 v Black Blue 4190 1831 108 32 v Black Black 4172
1833 145 5 v Black Red 4458 1876 108 45 v Black Black
4440 1833 145 5 v Black Red 4726 2008 108 178 v Black
Black 4708 1833 145 5 v Black Red 4993 1872 108 42 v
Black Black 4975 1833 145 5 v Black Red 5261 1831 108
1 v Black Black 5243 1833 145 5 v Black 1433 2257 4 250
v Red 1514 2198 108 15 v Black Black 1496 2185 145 5
v Black Red 1782 2187 108 4 v Black Black 1764 2185 145
5 v Black Red 2049 2190 108 7 v Black Black 2031 2185
145 5 v Black Blue 2317 2183 108 5 v Black Black 2299
2185 145 5 v Black Blue 2585 2183 108 2 v Black Black
2567 2185 145 5 v Black Blue 2852 2183 108 1 v Black
Black 2834 2185 145 5 v Black Red 3120 2183 108 1 v Black
Black 3102 2185 145 5 v Black Red 3387 2188 108 6 v Black
Black 3369 2185 145 5 v Black Blue 3655 2183 108 1 v
Black Black 3637 2185 145 5 v Black Red 3923 2184 108
2 v Black Black 3905 2185 145 5 v Black Red 4190 2194
108 12 v Black Black 4172 2185 145 5 v Black Blue 4458
2183 108 5 v Black Black 4440 2185 145 5 v Black Blue
4726 2183 108 7 v Black Black 4708 2185 145 5 v Black
Blue 4993 2183 108 5 v Black Black 4975 2185 145 5 v
Black Blue 5261 2183 108 1 v Black Black 5243 2185 145
5 v Black -95 2261 5544 4 v OliveGreen 34 2435 a(17)p
Black Blue 100 w(char)o(ges)p Black 1433 2574 4 314 v
Red 1514 2554 108 120 v Black Black 1496 2437 145 5 v
Black Red 1782 2444 108 10 v Black Black 1764 2437 145
5 v Black Red 2049 2451 108 17 v Black Black 2031 2437
145 5 v Black Red 2317 2453 108 19 v Black Black 2299
2437 145 5 v Black Blue 2585 2435 108 100 v Black Black
2567 2437 145 5 v Black Blue 2852 2435 108 18 v Black
Black 2834 2437 145 5 v Black Red 3120 2453 108 19 v
Black Black 3102 2437 145 5 v Black Red 3387 2463 108
29 v Black Black 3369 2437 145 5 v Black Red 3655 2486
108 51 v Black Black 3637 2437 145 5 v Black Blue 3923
2435 108 18 v Black Black 3905 2437 145 5 v Black Blue
4190 2435 108 35 v Black Black 4172 2437 145 5 v Black
Red 4458 2451 108 16 v Black Black 4440 2437 145 5 v
Black Red 4726 2574 108 139 v Black Black 4708 2437 145
5 v Black Blue 4993 2435 108 100 v Black Black 4975 2437
145 5 v Black Red 5261 2488 108 54 v Black Black 5243
2437 145 5 v Black 1433 2823 4 250 v Blue 1514 2748 108
1 v Black Black 1496 2750 145 5 v Black Blue 1782 2748
108 1 v Black Black 1764 2750 145 5 v Black Blue 2049
2748 108 1 v Black Black 2031 2750 145 5 v Black Blue
2317 2748 108 1 v Black Black 2299 2750 145 5 v Black
Red 2585 2755 108 8 v Black Black 2567 2750 145 5 v Black
Red 2852 2748 108 1 v Black Black 2834 2750 145 5 v Black
Blue 3120 2748 108 1 v Black Black 3102 2750 145 5 v
Black Blue 3387 2748 108 1 v Black Black 3369 2750 145
5 v Black Blue 3655 2748 108 1 v Black Black 3637 2750
145 5 v Black Red 3923 2748 108 1 v Black Black 3905
2750 145 5 v Black Red 4190 2749 108 2 v Black Black
4172 2750 145 5 v Black Blue 4458 2748 108 1 v Black
Black 4440 2750 145 5 v Black Blue 4726 2748 108 2 v
Black Black 4708 2750 145 5 v Black Red 4993 2786 108
38 v Black Black 4975 2750 145 5 v Black Blue 5261 2748
108 1 v Black Black 5243 2750 145 5 v Black -95 2826
5544 4 v OliveGreen 34 3000 a(18)p Black Blue 100 w(dial)p
Black 1433 3129 4 303 v Red 1514 3021 108 21 v Black
Black 1496 3002 145 5 v Black Red 1782 3019 108 19 v
Black Black 1764 3002 145 5 v Black Red 2049 3010 108
11 v Black Black 2031 3002 145 5 v Black Red 2317 3022
108 22 v Black Black 2299 3002 145 5 v Black Red 2585
3019 108 19 v Black Black 2567 3002 145 5 v Black Blue
2852 3000 108 11 v Black Black 2834 3002 145 5 v Black
Blue 3120 3000 108 34 v Black Black 3102 3002 145 5 v
Black Red 3387 3042 108 42 v Black Black 3369 3002 145
5 v Black Blue 3655 3000 108 41 v Black Black 3637 3002
145 5 v Black Red 3923 3094 108 95 v Black Black 3905
3002 145 5 v Black Blue 4190 3000 108 4 v Black Black
4172 3002 145 5 v Black Red 4458 3029 108 29 v Black
Black 4440 3002 145 5 v Black Red 4726 3077 108 77 v
Black Black 4708 3002 145 5 v Black Red 4993 3129 108
129 v Black Black 4975 3002 145 5 v Black Red 5261 3007
108 7 v Black Black 5243 3002 145 5 v Black 1433 3378
4 250 v Blue 1514 3303 108 3 v Black Black 1496 3305
145 5 v Black Blue 1782 3303 108 2 v Black Black 1764
3305 145 5 v Black Blue 2049 3303 108 2 v Black Black
2031 3305 145 5 v Black Blue 2317 3303 108 2 v Black
Black 2299 3305 145 5 v Black Blue 2585 3303 108 1 v
Black Black 2567 3305 145 5 v Black Red 2852 3304 108
2 v Black Black 2834 3305 145 5 v Black Red 3120 3306
108 4 v Black Black 3102 3305 145 5 v Black Blue 3387
3303 108 4 v Black Black 3369 3305 145 5 v Black Red
3655 3314 108 11 v Black Black 3637 3305 145 5 v Black
Blue 3923 3303 108 2 v Black Black 3905 3305 145 5 v
Black Red 4190 3303 108 1 v Black Black 4172 3305 145
5 v Black Blue 4458 3303 108 2 v Black Black 4440 3305
145 5 v Black Blue 4726 3303 108 3 v Black Black 4708
3305 145 5 v Black Blue 4993 3303 108 3 v Black Black
4975 3305 145 5 v Black Blue 5261 3303 108 1 v Black
Black 5243 3305 145 5 v Black -95 3381 5544 4 v OliveGreen
34 3555 a(19)p Black Blue 100 w(just)p Black 1433 3630
4 250 v Red 1514 3583 108 28 v Black Black 1496 3557
145 5 v Black Red 1782 3573 108 18 v Black Black 1764
3557 145 5 v Black Blue 2049 3555 108 42 v Black Black
2031 3557 145 5 v Black Red 2317 3567 108 13 v Black
Black 2299 3557 145 5 v Black Red 2585 3591 108 36 v
Black Black 2567 3557 145 5 v Black Blue 2852 3555 108
13 v Black Black 2834 3557 145 5 v Black Red 3120 3577
108 22 v Black Black 3102 3557 145 5 v Black Red 3387
3598 108 43 v Black Black 3369 3557 145 5 v Black Blue
3655 3555 108 11 v Black Black 3637 3557 145 5 v Black
Red 3923 3562 108 7 v Black Black 3905 3557 145 5 v Black
Blue 4190 3555 108 15 v Black Black 4172 3557 145 5 v
Black Red 4458 3591 108 36 v Black Black 4440 3557 145
5 v Black Blue 4726 3555 108 36 v Black Black 4708 3557
145 5 v Black Blue 4993 3555 108 8 v Black Black 4975
3557 145 5 v Black Blue 5261 3555 108 16 v Black Black
5243 3557 145 5 v Black 1433 3879 4 250 v Blue 1514 3804
108 3 v Black Black 1496 3806 145 5 v Black Blue 1782
3804 108 2 v Black Black 1764 3806 145 5 v Black Red
2049 3817 108 13 v Black Black 2031 3806 145 5 v Black
Blue 2317 3804 108 2 v Black Black 2299 3806 145 5 v
Black Blue 2585 3804 108 3 v Black Black 2567 3806 145
5 v Black Red 2852 3806 108 2 v Black Black 2834 3806
145 5 v Black Blue 3120 3804 108 2 v Black Black 3102
3806 145 5 v Black Blue 3387 3804 108 3 v Black Black
3369 3806 145 5 v Black Red 3655 3806 108 2 v Black Black
3637 3806 145 5 v Black Blue 3923 3804 108 1 v Black
Black 3905 3806 145 5 v Black Red 4190 3806 108 2 v Black
Black 4172 3806 145 5 v Black Blue 4458 3804 108 3 v
Black Black 4440 3806 145 5 v Black Red 4726 3809 108
6 v Black Black 4708 3806 145 5 v Black Red 4993 3805
108 2 v Black Black 4975 3806 145 5 v Black Red 5261
3806 108 3 v Black Black 5243 3806 145 5 v Black -95
3882 5544 4 v Blue eop end
%%Page: 61 61
TeXDict begin @landscape 61 60 bop Blue Red -300 -101
1574 34 v Blue White -304 -142 a Fv(F)-5 b(inding)44
b(O)o(utliers)p Blue White -1565 w(F)-5 b(inding)45 b(O)o(utliers)p
Blue White -300 -146 a(F)-5 b(inding)44 b(O)o(utliers)p
Blue White -300 -138 a(F)-5 b(inding)44 b(O)o(utliers)p
Blue -300 -142 a(F)-5 b(inding)44 b(O)o(utliers)-300
107 y Fu(examples)i(with)h(most)f(w)o(eight)h(ar)l(e)g(often)g
(outliers)-300 356 y(\(mislabeled)e(and/or)i(ambiguous\))p
Black Red -208 596 a Fs(\017)p Black 49 w Fo(I'm)73 b(trying)g(to)g
(make)h(a)f(credit)g(card)g(call)p Blue 143 w Fr(\()p
OliveGreen(C)n(ollect)p Blue(\))p Black Red -208 849
a Fs(\017)p Black 49 w Fo(hello)p Blue 142 w Fr(\()p
OliveGreen(R)n(ate)p Blue(\))p Black Red -208 1102 a
Fs(\017)p Black 49 w Fo(yes)g(I'd)g(like)h(to)f(make)g(a)h(long)f
(distance)f(collect)h(call)g(please)p Blue 142 w Fr(\()p
OliveGreen(C)n(allingC)n(ar)m(d)p Blue(\))p Black Red
-208 1355 a Fs(\017)p Black 49 w Fo(calling)f(card)i(please)p
Blue 142 w Fr(\()p OliveGreen(C)n(ollect)p Blue(\))p
Black Red -208 1608 a Fs(\017)p Black 49 w Fo(yeah)f(I'd)g(like)g(to)h
(use)f(my)h(calling)e(card)h(number)p Blue 143 w Fr(\()p
OliveGreen(C)n(ollect)p Blue(\))p Black Red -208 1862
a Fs(\017)p Black 49 w Fo(can)g(I)h(get)f(a)h(collect)e(call)p
Blue 143 w Fr(\()p OliveGreen(C)n(allingC)n(ar)m(d)p
Blue(\))p Black Red -208 2115 a Fs(\017)p Black 49 w
Fo(yes)h(I)h(would)f(like)g(to)g(make)g(a)h(long)f(distant)g(telephone)
f(call)h(and)g(have)h(the)f(charges)-56 2297 y(billed)g(to)g(another)g
(number)p Blue 142 w Fr(\()p OliveGreen(C)n(allingC)n(ar)m(d)37
b(D)o(ialF)-6 b(orM)h(e)p Blue(\))p Black Red -208 2550
a Fs(\017)p Black 49 w Fo(yeah)73 b(I)h(can)f(not)g(stand)g(it)h(this)f
(morning)f(I)i(did)f(oversea)g(call)g(is)g(so)h(bad)p
Blue -56 2733 a Fr(\()p OliveGreen(B)n(illingC)o(r)m(edit)p
Blue(\))p Black Red -208 2986 a Fs(\017)p Black 49 w
Fo(yeah)f(special)g(offers)f(going)h(on)h(for)f(long)g(distance)p
Blue 216 w Fr(\()p OliveGreen(A)n(ttS)n(er)s(vice)39
b(R)n(ate)p Blue(\))p Black Red -208 3239 a Fs(\017)p
Black 49 w Fo(mister)73 b(allen)g(please)f(william)h(allen)p
Blue 216 w Fr(\()p OliveGreen(P)-5 b(ersonT)-17 b(oP)-5
b(erson)p Blue(\))p Black Red -208 3492 a Fs(\017)p Black
49 w Fo(yes)73 b(ma'am)g(I)h(I'm)f(trying)g(to)g(make)g(a)h(long)f
(distance)g(call)g(to)g(a)h(non)f(dialable)f(point)-56
3675 y(in)h(san)h(miguel)e(philippines)p Blue 142 w Fr(\()p
OliveGreen(A)n(ttS)n(er)s(vice)39 b(O)o(ther)p Blue(\))p
Black Red -208 3928 a Fs(\017)p Black 49 w Fo(yes)73
b(I)h(like)f(to)g(make)h(a)f(long)g(distance)g(call)g(and)g(charge)g
(it)g(to)h(my)f(home)g(phone)g(that's)-56 4111 y(where)g(I'm)g(calling)
g(at)g(my)h(home)p Blue 142 w Fr(\()p OliveGreen(D)o(ialF)-6
b(orM)h(e)p Blue(\))p eop end
%%Page: 62 62
TeXDict begin @landscape 62 61 bop Blue Red -300 952
4668 34 v Blue White -304 910 a Fv(A)l(pplication:)55
b(H)-5 b(uman-computer)42 b(S)-5 b(poken)44 b(D)n(ialogue)p
Blue White -4659 w(A)l(pplication:)55 b(H)-5 b(uman-computer)43
b(S)-5 b(poken)43 b(D)n(ialogue)p Blue White -300 906
a(A)l(pplication:)55 b(H)-5 b(uman-computer)42 b(S)-5
b(poken)44 b(D)n(ialogue)p Blue White -300 914 a(A)l(pplication:)55
b(H)-5 b(uman-computer)42 b(S)-5 b(poken)44 b(D)n(ialogue)p
Blue -300 910 a(A)l(pplication:)55 b(H)-5 b(uman-computer)42
b(S)-5 b(poken)44 b(D)n(ialogue)p Black 850 1108 a Fr([with)39
b(R)n(ahim,)e(D)o(i)i(F)-8 b(abbr)q(izio)h(,)39 b(D)n(utton,)g(G)n
(upta,)g(H)-5 b(ollister)39 b(&)g(Riccar)m(di])p Blue
Red -208 1516 a Fs(\017)p Blue Red -56 1541 1066 17 v
Blue White 45 w Fu(application)p Blue White -1058 w(application)p
Blue White -56 1512 a(application)p Blue White -56 1520
a(application)p Blue -56 1516 a(application)o(:)58 b(automatic)47
b(\223)-10 b(stor)l(e)47 b(fr)o(ont)l(\224)f(or)h(\223help)f(desk)-8
b(\224)46 b(for)h(A)-14 b(T&T)-56 1765 y(Labs)-8 b(')46
b(N)-6 b(atur)n(al)47 b(V)-14 b(oices)47 b(business)p
Red -208 2097 a Fs(\017)p Blue 49 w Fu(caller)g(can)f(r)l(equest)i
(demo)-8 b(,)45 b(pr)r(icing)i(infor)r(mation,)f(technical)-56
2346 y(suppor)r(t,)g(sales)g(agent,)h(etc)n(.)p Red -208
2679 a Fs(\017)p Blue 49 w Fu(inter)n(activ)o(e)h(dialogue)p
Red -208 3011 a Fs(\017)p Blue 49 w Ft(naturalvoices.att.com)p
Fu(,)k(1-877-741-4321)p eop end
%%Page: 63 63
TeXDict begin @landscape 63 62 bop Blue Red -300 -88
1275 34 v Blue White -304 -129 a Fv(H)-6 b(o)g(w)42 b(I)-5
b(t)44 b(W)-12 b(or)n(ks)p Blue White -1267 w(H)-6 b(o)g(w)43
b(I)-5 b(t)44 b(W)-12 b(or)n(ks)p Blue White -300 -133
a(H)-6 b(o)g(w)42 b(I)-5 b(t)45 b(W)-12 b(or)n(ks)p Blue
White -300 -125 a(H)-6 b(o)g(w)42 b(I)-5 b(t)45 b(W)-12
b(or)n(ks)p Blue -300 -129 a(H)-6 b(o)g(w)42 b(I)-5 b(t)45
b(W)-12 b(or)n(ks)660 118 y
 32206402 26087184 0 0 30325391 24799723 startTexFig
 660 118 a
%%BeginDocument: PS/circleofspeech.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: circleofspeech.eps
%%Creator: fig2dev Version 3.2.3 Patchlevel 
%%CreationDate: Tue Jan 22 13:01:51 2002
%%For: schapire@harpo.research.att.com (Robert Schapire,,0112620)
%%BoundingBox: 0 0 461 377
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 377 moveto 0 0 lineto 461 0 lineto 461 377 lineto closepath clip newpath
-46.0 396.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hypen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
45.000 slw
gs  clippath
3228 5354 m 3191 5591 l 3778 5682 l 3323 5490 l 3815 5445 l cp
eoclip
n 5625 5850 m
 3225 5475 l gs col3 s gr gr

% arrowhead
n 3815 5445 m 3323 5490 l 3778 5682 l  col3 s
% Polyline
gs  clippath
6854 5313 m 7088 5366 l 7220 4786 l 6997 5228 l 6986 4733 l cp
eoclip
n 7350 3675 m
 6975 5325 l gs col3 s gr gr

% arrowhead
n 6986 4733 m 6997 5228 l 7220 4786 l  col3 s
% Polyline
gs  clippath
7366 2055 m 7507 1861 l 7027 1512 l 7345 1892 l 6886 1706 l cp
eoclip
n 5775 750 m
 7425 1950 l gs col3 s gr gr

% arrowhead
n 6886 1706 m 7345 1892 l 7027 1512 l  col3 s
/Times-Roman-iso ff 360.00 scf sf
1875 1395 m
gs 1 -1 sc (speech) col18 sh gr
/Times-Roman-iso ff 360.00 scf sf
1875 975 m
gs 1 -1 sc (computer) col18 sh gr
/Times-Roman-iso ff 360.00 scf sf
6450 1245 m
gs 1 -1 sc (utterance) col18 sh gr
% Polyline
gs  clippath
2142 2594 m 1904 2625 l 1980 3215 l 2038 2724 l 2218 3184 l cp
eoclip
n 2325 4950 m
 2025 2625 l gs col3 s gr gr

% arrowhead
n 2218 3184 m 2038 2724 l 1980 3215 l  col3 s
/Times-Roman-iso ff 360.00 scf sf
5775 6120 m
gs 1 -1 sc (understanding) col4 sh gr
/Times-Roman-iso ff 360.00 scf sf
5775 5700 m
gs 1 -1 sc (natural language) col4 sh gr
/Times-Roman-iso ff 360.00 scf sf
2325 3825 m
gs 1 -1 sc (text response) col18 sh gr
/Times-Roman-iso ff 360.00 scf sf
7275 4500 m
gs 1 -1 sc (text) col18 sh gr
% Polyline
n 5805 5400 m 5700 5400 5700 6195 105 arcto 4 {pop} repeat
  5700 6300 8220 6300 105 arcto 4 {pop} repeat
  8325 6300 8325 5505 105 arcto 4 {pop} repeat
  8325 5400 5805 5400 105 arcto 4 {pop} repeat
 cp gs col19 s gr 
% Polyline
gs  clippath
4351 769 m 4224 565 l 3719 878 l 4191 727 l 3846 1082 l cp
eoclip
n 2100 2025 m
 4275 675 l gs col3 s gr gr

% arrowhead
n 3846 1082 m 4191 727 l 3719 878 l  col3 s
/Times-Roman-iso ff 360.00 scf sf
6450 825 m
gs 1 -1 sc (raw) col18 sh gr
/Times-Roman-iso ff 360.00 scf sf
6750 3315 m
gs 1 -1 sc (recognizer) col1 sh gr
/Times-Roman-iso ff 360.00 scf sf
6750 2895 m
gs 1 -1 sc (speech) col1 sh gr
/Times-Roman-iso ff 360.00 scf sf
6750 2475 m
gs 1 -1 sc (automatic) col1 sh gr
% Polyline
n 6630 2025 m 6525 2025 6525 3495 105 arcto 4 {pop} repeat
  6525 3600 8295 3600 105 arcto 4 {pop} repeat
  8400 3600 8400 2130 105 arcto 4 {pop} repeat
  8400 2025 6630 2025 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Times-Roman-iso ff 360.00 scf sf
975 2400 m
gs 1 -1 sc (text-to-speech) col1 sh gr
% Polyline
n 930 2100 m 825 2100 825 2445 105 arcto 4 {pop} repeat
  825 2550 3270 2550 105 arcto 4 {pop} repeat
  3375 2550 3375 2205 105 arcto 4 {pop} repeat
  3375 2100 930 2100 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 1755 5025 m 1650 5025 1650 5820 105 arcto 4 {pop} repeat
  1650 5925 3045 5925 105 arcto 4 {pop} repeat
  3150 5925 3150 5130 105 arcto 4 {pop} repeat
  3150 5025 1755 5025 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Times-Roman-iso ff 360.00 scf sf
3825 6495 m
gs 1 -1 sc (category) col18 sh gr
/Times-Roman-iso ff 360.00 scf sf
3825 6075 m
gs 1 -1 sc (predicted) col18 sh gr
/Times-Roman-iso ff 360.00 scf sf
4500 750 m
gs 1 -1 sc (Human) col1 sh gr
% Polyline
n 4455 375 m 4350 375 4350 795 105 arcto 4 {pop} repeat
  4350 900 5595 900 105 arcto 4 {pop} repeat
  5700 900 5700 480 105 arcto 4 {pop} repeat
  5700 375 4455 375 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Times-Roman-iso ff 360.00 scf sf
1800 5820 m
gs 1 -1 sc (manager) col1 sh gr
/Times-Roman-iso ff 360.00 scf sf
1800 5400 m
gs 1 -1 sc (dialogue) col1 sh gr
$F2psEnd
rs

%%EndDocument

 endTexFig
 Red -208 3780 a Fs(\017)p Blue 49 w Fu(NL)-5 b(U')-23
b(s)48 b(job:)57 b(classify)46 b(caller)h(utter)n(ances)h(into)e
Fm(24)g Fu(categor)r(ies)-56 4029 y(\()p OliveGreen(demo)p
Blue(,)p OliveGreen 46 w(sales)g(r)l(ep)p Blue(,)p OliveGreen
47 w(pr)r(icing)h(info)p Blue(,)p OliveGreen 46 w(y)o(es)p
Blue(,)p OliveGreen 45 w(no)p Blue(,)g(etc)n(.\))p eop
end
%%Page: 64 64
TeXDict begin @landscape 64 63 bop Blue Red -300 401
3282 34 v Blue White -304 359 a Fv(N)-6 b(eed)43 b(for)g(P)n(r)r(ior)
-17 b(,)43 b(H)-5 b(uman)42 b(Kno)-6 b(wledge)p Blue
White -3273 w(N)g(eed)43 b(for)g(P)n(r)r(ior)-17 b(,)43
b(H)-5 b(uman)43 b(Kno)-6 b(wledge)p Blue White -300
355 a(N)g(eed)43 b(for)g(P)n(r)r(ior)-17 b(,)43 b(H)-5
b(uman)43 b(Kno)-6 b(wledge)p Blue White -300 363 a(N)g(eed)43
b(for)g(P)n(r)r(ior)-17 b(,)43 b(H)-5 b(uman)43 b(Kno)-6
b(wledge)p Blue -300 359 a(N)g(eed)43 b(for)g(P)n(r)r(ior)-17
b(,)43 b(H)-5 b(uman)43 b(Kno)-6 b(wledge)p Black 3295
556 a Fr([with)39 b(R)m(ocher)s(y)-15 b(,)38 b(R)n(ahim)g(&)h(G)n
(upta])p Blue Red -208 965 a Fs(\017)p Blue 49 w Fu(building)46
b(NL)-5 b(U:)47 b(standar)l(d)f(text)h(categor)r(ization)h(pr)o(oblem)p
Red -208 1297 a Fs(\017)p Blue 49 w Fu(need)p Red 454
1322 1027 17 v Blue White 42 w(lots)e(of)h(data)p Blue
White -1019 w(lots)g(of)f(data)p Blue White 454 1293
a(lots)g(of)h(data)p Blue White 454 1301 a(lots)f(of)h(data)p
Blue 454 1297 a(lots)f(of)h(data,)f(but)g(for)h(cheap)-8
b(,)p Red 2921 1322 496 17 v Blue White 42 w(r)n(apid)p
Blue White -487 w(r)n(apid)p Blue White 2921 1293 a(r)n(apid)p
Blue White 2921 1301 a(r)n(apid)p Blue 2921 1297 a(r)n(apid)46
b(deplo)-6 b(yment,)44 b(can)-17 b(')i(t)47 b(wait)-56
1546 y(for)g(it)p Red -208 1879 a Fs(\017)p Blue Red
-56 1903 1327 17 v Blue White 45 w Fu(bootstr)n(apping)p
Blue White -1319 w(bootstr)n(apping)p Blue White -56
1875 a(bootstr)n(apping)p Blue White -56 1883 a(bootstr)n(apping)p
Blue -56 1879 a(bootstr)n(apping)f(pr)o(oblem:)p YellowOrange
38 2169 a Fp(\017)p Blue 48 w Fu(need)h(labeled)e(data)h(to)h(deplo)-6
b(y)p YellowOrange 38 2418 a Fp(\017)p Blue 48 w Fu(need)47
b(to)f(deplo)-6 b(y)45 b(to)i(get)g(labeled)e(data)p
Red -208 2750 a Fs(\017)p Blue Red -56 2775 398 17 v
Blue White 45 w Fu(idea)p Blue White -390 w(idea)p Blue
White -56 2746 a(idea)p Blue White -56 2754 a(idea)p
Blue -56 2750 a(idea:)57 b(use)47 b(human)g(kno)-6 b(wledge)46
b(to)g(compensate)h(for)g(insuf\002cient)-56 2999 y(data)p
YellowOrange 38 3290 a Fp(\017)p Blue 48 w Fu(modify)f(loss)g(function)
h(to)g(balance)p Red 3135 3315 891 17 v Blue White 42
w(\002t)g(to)f(data)p Blue White -883 w(\002t)h(to)g(data)p
Blue White 3135 3286 a(\002t)g(to)f(data)p Blue White
3135 3294 a(\002t)h(to)f(data)p Blue 3135 3290 a(\002t)h(to)f(data)h
(against)p Red 158 3564 1592 17 v Blue White 154 3539
a(\002t)g(to)g(pr)r(ior)f(model)p Blue White -1583 w(\002t)g(to)h(pr)r
(ior)g(model)p Blue White 158 3535 a(\002t)g(to)g(pr)r(ior)f(model)p
Blue White 158 3543 a(\002t)h(to)g(pr)r(ior)f(model)p
Blue 158 3539 a(\002t)h(to)g(pr)r(ior)f(model)p eop end
%%Page: 65 65
TeXDict begin @landscape 65 64 bop Blue Red -300 -74
1681 34 v Blue White -304 -115 a Fv(R)l(esults:)55 b(AP)-6
b(-T)g(itles)p Blue White -1672 w(R)l(esults:)55 b(AP)-6
b(-T)g(itles)p Blue White -300 -119 a(R)l(esults:)55
b(AP)-6 b(-T)g(itles)p Blue White -300 -111 a(R)l(esults:)55
b(AP)-6 b(-T)g(itles)p Blue -300 -115 a(R)l(esults:)55
b(AP)-6 b(-T)g(itles)-150 132 y
 44994579 31046247 3289088 3289088 26970521 19866091 startTexFig
 -150 132 a
%%BeginDocument: PS/ap-color.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ap-color.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Sun Feb  3 10:29:17 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [] 0 0.7 0 DL } def
/LT2 { PL [] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
780 600 M
63 0 V
6017 0 R
-63 0 V
660 600 M
(10) Rshow
780 1200 M
63 0 V
6017 0 R
-63 0 V
-6137 0 R
(20) Rshow
780 1800 M
63 0 V
6017 0 R
-63 0 V
-6137 0 R
(30) Rshow
780 2400 M
63 0 V
6017 0 R
-63 0 V
-6137 0 R
(40) Rshow
780 3000 M
63 0 V
6017 0 R
-63 0 V
-6137 0 R
(50) Rshow
780 3600 M
63 0 V
6017 0 R
-63 0 V
-6137 0 R
(60) Rshow
780 4200 M
63 0 V
6017 0 R
-63 0 V
-6137 0 R
(70) Rshow
780 4800 M
63 0 V
6017 0 R
-63 0 V
-6137 0 R
(80) Rshow
780 600 M
0 31 V
0 4169 R
0 -31 V
1152 600 M
0 31 V
0 4169 R
0 -31 V
1417 600 M
0 31 V
0 4169 R
0 -31 V
1622 600 M
0 31 V
0 4169 R
0 -31 V
1789 600 M
0 31 V
0 4169 R
0 -31 V
1931 600 M
0 31 V
0 4169 R
0 -31 V
2053 600 M
0 31 V
0 4169 R
0 -31 V
2161 600 M
0 31 V
0 4169 R
0 -31 V
2258 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
(100) Cshow
2895 600 M
0 31 V
0 4169 R
0 -31 V
3267 600 M
0 31 V
0 4169 R
0 -31 V
3531 600 M
0 31 V
0 4169 R
0 -31 V
3736 600 M
0 31 V
0 4169 R
0 -31 V
3904 600 M
0 31 V
0 4169 R
0 -31 V
4045 600 M
0 31 V
0 4169 R
0 -31 V
4168 600 M
0 31 V
0 4169 R
0 -31 V
4276 600 M
0 31 V
0 4169 R
0 -31 V
4373 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
(1000) Cshow
5009 600 M
0 31 V
0 4169 R
0 -31 V
5382 600 M
0 31 V
0 4169 R
0 -31 V
5646 600 M
0 31 V
0 4169 R
0 -31 V
5851 600 M
0 31 V
0 4169 R
0 -31 V
6018 600 M
0 31 V
0 4169 R
0 -31 V
6160 600 M
0 31 V
0 4169 R
0 -31 V
6283 600 M
0 31 V
0 4169 R
0 -31 V
6391 600 M
0 31 V
0 4169 R
0 -31 V
6488 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
(10000) Cshow
1.000 UL
LTb
780 600 M
6080 0 V
0 4200 V
-6080 0 V
780 600 L
200 2700 M
currentpoint gsave translate 90 rotate 0 0 M
(% error rate) Cshow
grestore
3820 100 M
(# training examples) Cshow
1.000 UP
1.000 UL
LT0
5957 4637 M
(data+knowledge) Rshow
6077 4637 M
543 0 V
985 2556 M
637 -48 V
636 -102 V
637 -240 V
636 -270 V
637 -192 V
637 -168 V
636 -162 V
637 -150 V
636 -138 V
985 2556 Pls
1622 2508 Pls
2258 2406 Pls
2895 2166 Pls
3531 1896 Pls
4168 1704 Pls
4805 1536 Pls
5441 1374 Pls
6078 1224 Pls
6714 1086 Pls
6348 4637 Pls
1.000 UL
LT1
5957 4437 M
(knowledge only) Rshow
6077 4437 M
543 0 V
985 2802 M
5729 0 V
1.000 UP
1.000 UL
LT2
5957 4237 M
(data only) Rshow
6077 4237 M
543 0 V
985 4776 M
637 -696 V
636 -750 V
637 -720 V
636 -486 V
637 -312 V
637 -222 V
636 -192 V
637 -168 V
636 -150 V
985 4776 Crs
1622 4080 Crs
2258 3330 Crs
2895 2610 Crs
3531 2124 Crs
4168 1812 Crs
4805 1590 Crs
5441 1398 Crs
6078 1230 Crs
6714 1080 Crs
6348 4237 Crs
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument

 endTexFig
 eop end
%%Page: 66 66
TeXDict begin @landscape 66 65 bop Blue Red -300 39 1714
34 v Blue White -304 -2 a Fv(R)l(esults:)55 b(H)-6 b(elpdesk)p
Blue White -1706 w(R)l(esults:)55 b(H)-6 b(elpdesk)p
Blue White -300 -6 a(R)l(esults:)55 b(H)-6 b(elpdesk)p
Blue White -300 2 a(R)l(esults:)55 b(H)-6 b(elpdesk)p
Blue -300 -2 a(R)l(esults:)55 b(H)-6 b(elpdesk)300 256
y
 37890438 29175629 3289088 13090570 36443095 38745456 startTexFig
 300 256 a
%%BeginDocument: PS/tts.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: tts1
%%CreationDate: 08/06/ 1  17:03:31
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: 1
%%BoundingBox:    50   199   554   589
%%EndComments

%%BeginProlog

% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/vradius 0 def
/hradius 0 def
/lry 0 def
/lrx 0 def
/uly 0 def
/ulx 0 def
/rad 0 def

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    56   201   554   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  460   273  5976  4659 MR c np
92 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef  % red
/c3 { 0 0.7 0 sr} bdef  % green (modified)
% /c3 { 0 1 0 sr} bdef  % green (orig)
/c4 { 0 0 1 sr} bdef  % blue
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 6913 5186 PR
6 w
0 4225 5355 0 0 -4225 899 4614 4 MP
PP
-5355 0 0 4225 5355 0 0 -4225 899 4614 5 MP stroke
4 w
DO
0 sg
 899 4614 mt  899  389 L
 899  389 mt  899  389 L
1792 4614 mt 1792  389 L
1792  389 mt 1792  389 L
2684 4614 mt 2684  389 L
2684  389 mt 2684  389 L
3577 4614 mt 3577  389 L
3577  389 mt 3577  389 L
4469 4614 mt 4469  389 L
4469  389 mt 4469  389 L
5362 4614 mt 5362  389 L
5362  389 mt 5362  389 L
6254 4614 mt 6254  389 L
6254  389 mt 6254  389 L
 899 4614 mt 6254 4614 L
6254 4614 mt 6254 4614 L
 899 4145 mt 6254 4145 L
6254 4145 mt 6254 4145 L
 899 3675 mt 6254 3675 L
6254 3675 mt 6254 3675 L
 899 3206 mt 6254 3206 L
6254 3206 mt 6254 3206 L
 899 2736 mt 6254 2736 L
6254 2736 mt 6254 2736 L
 899 2267 mt 6254 2267 L
6254 2267 mt 6254 2267 L
 899 1797 mt 6254 1797 L
6254 1797 mt 6254 1797 L
 899 1328 mt 6254 1328 L
6254 1328 mt 6254 1328 L
 899  858 mt 6254  858 L
6254  858 mt 6254  858 L
 899  389 mt 6254  389 L
6254  389 mt 6254  389 L
SO
6 w
 899 4614 mt 6254 4614 L
 899  389 mt 6254  389 L
6254 4614 mt 6254  389 L
 899 4614 mt  899  389 L
 899 4614 mt 6254 4614 L
 899 4614 mt  899  389 L
 899 4614 mt  899 4560 L
 899  389 mt  899  443 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 200 FMSR

 866 4760 mt 
(0) s
1792 4614 mt 1792 4560 L
1792  389 mt 1792  443 L
1692 4760 mt 
(500) s
2684 4614 mt 2684 4560 L
2684  389 mt 2684  443 L
2551 4760 mt 
(1000) s
3577 4614 mt 3577 4560 L
3577  389 mt 3577  443 L
3444 4760 mt 
(1500) s
4469 4614 mt 4469 4560 L
4469  389 mt 4469  443 L
4336 4760 mt 
(2000) s
5362 4614 mt 5362 4560 L
5362  389 mt 5362  443 L
5229 4760 mt 
(2500) s
6254 4614 mt 6254 4560 L
6254  389 mt 6254  443 L
6121 4760 mt 
() s
 899 4614 mt  953 4614 L
6254 4614 mt 6200 4614 L
 631 4658 mt 
(45) s
 899 4145 mt  953 4145 L
6254 4145 mt 6200 4145 L
 631 4189 mt 
(50) s
 899 3675 mt  953 3675 L
6254 3675 mt 6200 3675 L
 631 3719 mt 
(55) s
 899 3206 mt  953 3206 L
6254 3206 mt 6200 3206 L
 631 3250 mt 
(60) s
 899 2736 mt  953 2736 L
6254 2736 mt 6200 2736 L
 631 2780 mt 
(65) s
 899 2267 mt  953 2267 L
6254 2267 mt 6200 2267 L
 631 2311 mt 
(70) s
 899 1797 mt  953 1797 L
6254 1797 mt 6200 1797 L
 631 1841 mt 
(75) s
 899 1328 mt  953 1328 L
6254 1328 mt 6200 1328 L
 631 1372 mt 
(80) s
 899  858 mt  953  858 L
6254  858 mt 6200  858 L
 631  902 mt 
(85) s
 899  389 mt  953  389 L
6254  389 mt 6200  389 L
 631  433 mt 
(90) s
 899  389 mt 6254  389 L
 899 4614 mt 6254 4614 L
 899 4614 mt  899  389 L
6254 4614 mt 6254  389 L
gs 899 389 5356 4226 MR c np
c4 % knowledge
1919 0 1428 0 714 28 357 24 178 108 1078 3994 6 MP stroke
%1919 0 1428 0 714 0 357 0 178 0 1078 3994 6 MP stroke
c3 % data
1919 -292 1428 -572 714 -474 357 -597 178 -1051 1078 3844 6 MP stroke
c2 % data+knowledge
1919 -305 1428 -451 714 -361 357 -357 178 -727 1078 2994 6 MP stroke
gr

DA
3034 4903 mt 
(# Training Examples) s
 576 3115 mt  -90 rotate
(Classification Accuracy) s
90 rotate
2269 1958 mt 
(data) s
%2269 4021 mt 
%(knowledge) s
2269 3940 mt 
(knowledge) s
2059 1068 mt 
(data + knowledge) s
SO

end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument

 endTexFig
 eop end
%%Page: 67 67
TeXDict begin @landscape 67 66 bop Blue Red -300 1210
2933 34 v Blue White -304 1168 a Fv(P)n(r)o(oblem:)52
b(Labels)44 b(ar)l(e)g(Expensiv)m(e)p Blue White -2924
w(P)n(r)o(oblem:)53 b(Labels)43 b(ar)l(e)h(Expensiv)m(e)p
Blue White -300 1164 a(P)n(r)o(oblem:)53 b(Labels)43
b(ar)l(e)h(Expensiv)m(e)p Blue White -300 1172 a(P)n(r)o(oblem:)53
b(Labels)43 b(ar)l(e)h(Expensiv)m(e)p Blue -300 1168
a(P)n(r)o(oblem:)53 b(Labels)43 b(ar)l(e)h(Expensiv)m(e)p
Red -208 1615 a Fs(\017)p Blue 49 w Fu(for)j(spoken-dialogue)g(task)p
YellowOrange 38 1906 a Fp(\017)p Blue 48 w Fu(getting)h(examples)e(is)h
(cheap)p YellowOrange 38 2155 a Fp(\017)p Blue 48 w Fu(getting)p
Red 856 2180 544 17 v Blue White 44 w(labels)p Blue White
-536 w(labels)p Blue White 856 2151 a(labels)p Blue White
856 2159 a(labels)p Blue 856 2155 a(labels)f(is)g(expensiv)o(e)p
Goldenrod 220 2425 a Fp(\017)p Blue 49 w Fu(must)g(be)g(annotated)h(b)
-5 b(y)45 b(humans)p Red -208 2757 a Fs(\017)p Blue 49
w Fu(ho)-6 b(w)46 b(to)h(r)l(educe)g(number)f(of)p Red
2342 2782 V Blue White 43 w(labels)p Blue White -536
w(labels)p Blue White 2342 2753 a(labels)p Blue White
2342 2761 a(labels)p Blue 2342 2757 a(labels)g(needed?)p
eop end
%%Page: 68 68
TeXDict begin @landscape 68 67 bop Blue Red -300 1094
1502 34 v Blue White -304 1053 a Fv(A)n(ctiv)m(e)44 b(Lear)r(ning)p
Blue White -1493 w(A)n(ctiv)m(e)g(Lear)r(ning)p Blue
White -300 1049 a(A)n(ctiv)m(e)g(Lear)r(ning)p Blue White
-300 1057 a(A)n(ctiv)m(e)g(Lear)r(ning)p Blue -300 1053
a(A)n(ctiv)m(e)g(Lear)r(ning)p Red -208 1500 a Fs(\017)p
Blue Red -56 1525 398 17 v Blue White 45 w Fu(idea)p
Blue White -390 w(idea)p Blue White -56 1496 a(idea)p
Blue White -56 1504 a(idea)p Blue -56 1500 a(idea:)p
YellowOrange 38 1791 a Fp(\017)p Blue 48 w Fu(use)p Red
526 1815 1717 17 v Blue White 43 w(selectiv)o(e)k(sampling)p
Blue White -1709 w(selectiv)o(e)f(sampling)p Blue White
526 1787 a(selectiv)o(e)h(sampling)p Blue White 526 1795
a(selectiv)o(e)g(sampling)p Blue 526 1791 a(selectiv)o(e)g(sampling)e
(to)g(choose)i(which)g(examples)e(to)g(label)p YellowOrange
38 2040 a Fp(\017)p Blue 48 w Fu(focus)i(on)p Red 1001
2065 1384 17 v Blue White 42 w(least)f(con\002dent)p
Blue White -1376 w(least)g(con\002dent)p Blue White 1001
2036 a(least)g(con\002dent)p Blue White 1001 2044 a(least)g
(con\002dent)p Blue 1001 2040 a(least)g(con\002dent)f(examples)p
Black 1277 w Fr([Lewis)38 b(&)g(G)n(ale])p Blue Red -208
2372 a Fs(\017)p Blue 49 w Fu(for)47 b(boosting,)f(use)h(\(absolute\))g
(mar)o(gin)p OliveGreen 47 w Fs(j)p Fn(f)22 b Fm(\()p
Fn(x)p Fm(\))p Fs(j)p Blue 47 w Fu(as)47 b(natur)n(al)-56
2621 y(con\002dence)g(measur)l(e)p Black 4210 2978 a
Fr([A)n(be)38 b(&)h(M)n(amitsuka])p Blue eop end
%%Page: 69 69
TeXDict begin @landscape 69 68 bop Blue Red -300 802
1639 34 v Blue White -304 760 a Fv(Labeling)44 b(Scheme)p
Blue White -1630 w(Labeling)g(Scheme)p Blue White -300
756 a(Labeling)g(Scheme)p Blue White -300 764 a(Labeling)g(Scheme)p
Blue -300 760 a(Labeling)g(Scheme)p Red -208 1207 a Fs(\017)p
Blue 49 w Fu(star)r(t)j(with)f(pool)g(of)h(unlabeled)e(examples)p
Red -208 1540 a Fs(\017)p Blue 49 w Fu(choose)j(\(say\))e(500)i
(examples)f(at)f(r)n(andom)g(for)h(labeling)p Red -208
1872 a Fs(\017)p Blue 49 w Fu(r)r(un)f(boosting)h(on)g(all)f(labeled)f
(examples)p YellowOrange 38 2187 a Fp(\017)p Blue 48
w Fu(get)j(combined)e(classi\002er)p OliveGreen 47 w
Fn(f)p Blue Red -208 2519 a Fs(\017)p Blue 49 w Fu(pick)h(\(say\))f
(250)i(additional)e(examples)g(fr)o(om)g(pool)g(for)h(labeling)p
YellowOrange 38 2810 a Fp(\017)p Blue 48 w Fu(choose)h(examples)f(with)
f(minimum)p OliveGreen 46 w Fs(j)p Fn(f)22 b Fm(\()p
Fn(x)p Fm(\))p Fs(j)p Blue Red -208 3142 a(\017)p Blue
49 w Fu(r)l(epeat)p eop end
%%Page: 70 70
TeXDict begin @landscape 70 69 bop Blue Red -300 -101
2963 34 v Blue White -304 -142 a Fv(R)l(esults:)55 b(H)-6
b(o)g(w-M)h(ay)l(-I-H)f(elp-Y)-19 b(ou?)p Blue White
-2955 w(R)l(esults:)55 b(H)-6 b(o)g(w-M)h(ay)l(-I-H)f(elp-Y)-19
b(ou?)p Blue White -300 -146 a(R)l(esults:)55 b(H)-6
b(o)g(w-M)h(ay)l(-I-H)f(elp-Y)-19 b(ou?)p Blue White
-300 -138 a(R)l(esults:)55 b(H)-6 b(o)g(w-M)h(ay)l(-I-H)f(elp-Y)-19
b(ou?)p Blue -300 -142 a(R)l(esults:)55 b(H)-6 b(o)g(w-M)h(ay)l(-I-H)f
(elp-Y)-19 b(ou?)300 52 y
 37890438 23870970 3289088 3289088 26970521 18287329 startTexFig

 doclip
 300 52 a
%%BeginDocument: PS/hmihy-color-mz.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/schapire/unlabeledboost/plots/hmihy-color-mz.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Thu Jul 18 15:45:11 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 278
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
780 600 M
6080 0 V
1.000 UL
LTb
780 600 M
63 0 V
6017 0 R
-63 0 V
660 600 M
(24) Rshow
1.000 UL
LTa
780 1368 M
6080 0 V
1.000 UL
LTb
780 1368 M
63 0 V
6017 0 R
-63 0 V
-6137 0 R
(26) Rshow
1.000 UL
LTa
780 2136 M
6080 0 V
1.000 UL
LTb
780 2136 M
63 0 V
6017 0 R
-63 0 V
-6137 0 R
(28) Rshow
1.000 UL
LTa
780 2904 M
6080 0 V
1.000 UL
LTb
780 2904 M
63 0 V
6017 0 R
-63 0 V
-6137 0 R
(30) Rshow
1.000 UL
LTa
780 3672 M
6080 0 V
1.000 UL
LTb
780 3672 M
63 0 V
6017 0 R
-63 0 V
-6137 0 R
(32) Rshow
1.000 UL
LTa
780 4440 M
6080 0 V
1.000 UL
LTb
780 4440 M
63 0 V
6017 0 R
-63 0 V
-6137 0 R
(34) Rshow
1.000 UL
LTa
780 600 M
0 3840 V
1.000 UL
LTb
780 600 M
0 63 V
0 3777 R
0 -63 V
780 400 M
(0) Cshow
1.000 UL
LTa
1540 600 M
0 3840 V
1.000 UL
LTb
1540 600 M
0 63 V
0 3777 R
0 -63 V
0 -3977 R
(5000) Cshow
1.000 UL
LTa
2300 600 M
0 3840 V
1.000 UL
LTb
2300 600 M
0 63 V
0 3777 R
0 -63 V
0 -3977 R
(10000) Cshow
1.000 UL
LTa
3060 600 M
0 3840 V
1.000 UL
LTb
3060 600 M
0 63 V
0 3777 R
0 -63 V
0 -3977 R
(15000) Cshow
1.000 UL
LTa
3820 600 M
0 3840 V
1.000 UL
LTb
3820 600 M
0 63 V
0 3777 R
0 -63 V
0 -3977 R
(20000) Cshow
1.000 UL
LTa
4580 600 M
0 3840 V
1.000 UL
LTb
4580 600 M
0 63 V
0 3777 R
0 -63 V
0 -3977 R
(25000) Cshow
1.000 UL
LTa
5340 600 M
0 3377 V
0 400 R
0 63 V
1.000 UL
LTb
5340 600 M
0 63 V
0 3777 R
0 -63 V
0 -3977 R
(30000) Cshow
1.000 UL
LTa
6100 600 M
0 3377 V
0 400 R
0 63 V
1.000 UL
LTb
6100 600 M
0 63 V
0 3777 R
0 -63 V
0 -3977 R
(35000) Cshow
1.000 UL
LTa
6860 600 M
0 3840 V
1.000 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
0 -3977 R
(40000) Cshow
1.000 UL
LTb
780 600 M
6080 0 V
0 3840 V
-6080 0 V
780 600 L
200 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(% error rate) Cshow
grestore
3820 100 M
(# labeled examples) Cshow
3820 4740 M
(hmihy dataset) Cshow
1.000 UL
LT0
5957 4277 M
(random) Rshow
6077 4277 M
543 0 V
993 4440 M
15 -132 V
76 -409 V
76 -289 V
76 -151 V
76 -231 V
76 -143 V
76 -83 V
76 -106 V
76 -124 V
76 -89 V
76 -118 V
76 -52 V
76 -80 V
76 -57 V
76 -67 V
76 -60 V
76 -3 V
76 -75 V
76 -26 V
76 -31 V
76 -103 V
76 -30 V
76 -58 V
76 -66 V
76 14 V
76 -33 V
76 -92 V
76 -19 V
76 -9 V
76 -27 V
76 -60 V
76 -35 V
76 8 V
76 -74 V
76 -17 V
76 -10 V
76 -74 V
76 -31 V
76 27 V
76 -10 V
76 -19 V
76 -29 V
76 -13 V
76 -19 V
76 -50 V
76 39 V
76 -3 V
76 -41 V
76 -15 V
76 -32 V
76 1 V
76 -25 V
76 -29 V
76 10 V
76 -3 V
76 -25 V
76 -16 V
76 36 V
76 -13 V
76 -28 V
76 -7 V
76 -21 V
76 1 V
76 2 V
76 4 V
76 -7 V
76 -22 V
76 -6 V
76 -16 V
76 -1 V
76 8 V
76 -18 V
76 -5 V
76 -26 V
76 -6 V
76 -12 V
76 2 V
76 -11 V
1.000 UL
LT1
5957 4077 M
(active) Rshow
6077 4077 M
543 0 V
956 4440 M
52 -537 V
76 -397 V
76 -382 V
76 -286 V
76 -184 V
76 -114 V
76 -244 V
76 -154 V
76 -108 V
76 -62 V
76 -119 V
76 -142 V
76 -100 V
76 -96 V
76 -15 V
76 -130 V
76 -60 V
76 -45 V
76 -66 V
76 -63 V
76 -23 V
76 -38 V
76 -54 V
76 -80 V
76 -46 V
76 15 V
76 -40 V
76 -40 V
76 9 V
76 -47 V
76 -23 V
76 -2 V
76 12 V
76 -10 V
76 1 V
76 -21 V
76 7 V
76 19 V
76 19 V
76 17 V
76 0 V
76 3 V
76 10 V
76 5 V
76 23 V
76 -15 V
76 15 V
76 14 V
76 -3 V
76 18 V
76 47 V
76 -26 V
76 -2 V
76 27 V
76 -11 V
76 11 V
76 0 V
76 0 V
76 -1 V
76 24 V
76 -15 V
76 15 V
76 -17 V
76 19 V
76 -1 V
76 24 V
76 0 V
76 -2 V
76 -5 V
76 1 V
76 -6 V
76 14 V
76 4 V
76 4 V
76 0 V
76 -3 V
76 26 V
76 -6 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument

 endTexFig
 Black 1824 3375 4 250 v Blue 2094 3300 a Fu(\002rst)47
b(r)l(eached)p Black 3523 3375 V Blue 327 w(\045)g(label)p
Black Blue 1091 3549 a(\045)g(err)o(or)p Black 1824 3624
V Blue 102 w(r)n(andom)p Black 2674 3624 V Blue 200 w(activ)o(e)p
Black 3523 3624 V Blue 200 w(savings)p Black 1041 3627
3271 4 v OliveGreen 1324 3802 a(28)p Black 1824 3877
4 250 v OliveGreen 376 w(11,000)p Black 2674 3877 V OliveGreen
359 w(5,500)p Black 3523 3877 V OliveGreen 602 w(50)p
Black OliveGreen 1324 4051 a(26)p Black 1824 4126 V OliveGreen
376 w(22,000)p Black 2674 4126 V OliveGreen 359 w(9,500)p
Black 3523 4126 V OliveGreen 602 w(57)p Black OliveGreen
1324 4300 a(25)p Black 1824 4375 V OliveGreen 376 w(40,000)p
Black 2674 4375 V OliveGreen 250 w(13,000)p Black 3523
4375 V OliveGreen 602 w(68)p Black Blue eop end
%%Page: 71 71
TeXDict begin @landscape 71 70 bop Blue Red -300 -101
1390 34 v Blue White -304 -142 a Fv(R)l(esults:)55 b(Letter)p
Blue White -1381 w(R)l(esults:)g(Letter)p Blue White
-300 -146 a(R)l(esults:)g(Letter)p Blue White -300 -138
a(R)l(esults:)g(Letter)p Blue -300 -142 a(R)l(esults:)g(Letter)300
39 y
 37890438 23870970 3289088 3289088 26970521 18287329 startTexFig

 doclip
 300 39 a
%%BeginDocument: PS/letter-color-mz.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/schapire/unlabeledboost/plots/letter-color-mz.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Thu Jul 18 15:42:59 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 278
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
780 600 M
6080 0 V
1.000 UL
LTb
780 600 M
63 0 V
6017 0 R
-63 0 V
660 600 M
(0) Rshow
1.000 UL
LTa
780 1368 M
6080 0 V
1.000 UL
LTb
780 1368 M
63 0 V
6017 0 R
-63 0 V
-6137 0 R
(5) Rshow
1.000 UL
LTa
780 2136 M
6080 0 V
1.000 UL
LTb
780 2136 M
63 0 V
6017 0 R
-63 0 V
-6137 0 R
(10) Rshow
1.000 UL
LTa
780 2904 M
6080 0 V
1.000 UL
LTb
780 2904 M
63 0 V
6017 0 R
-63 0 V
-6137 0 R
(15) Rshow
1.000 UL
LTa
780 3672 M
6080 0 V
1.000 UL
LTb
780 3672 M
63 0 V
6017 0 R
-63 0 V
-6137 0 R
(20) Rshow
1.000 UL
LTa
780 4440 M
6080 0 V
1.000 UL
LTb
780 4440 M
63 0 V
6017 0 R
-63 0 V
-6137 0 R
(25) Rshow
1.000 UL
LTa
780 600 M
0 3840 V
1.000 UL
LTb
780 600 M
0 63 V
0 3777 R
0 -63 V
780 400 M
(0) Cshow
1.000 UL
LTa
1540 600 M
0 3840 V
1.000 UL
LTb
1540 600 M
0 63 V
0 3777 R
0 -63 V
0 -3977 R
(2000) Cshow
1.000 UL
LTa
2300 600 M
0 3840 V
1.000 UL
LTb
2300 600 M
0 63 V
0 3777 R
0 -63 V
0 -3977 R
(4000) Cshow
1.000 UL
LTa
3060 600 M
0 3840 V
1.000 UL
LTb
3060 600 M
0 63 V
0 3777 R
0 -63 V
0 -3977 R
(6000) Cshow
1.000 UL
LTa
3820 600 M
0 3840 V
1.000 UL
LTb
3820 600 M
0 63 V
0 3777 R
0 -63 V
0 -3977 R
(8000) Cshow
1.000 UL
LTa
4580 600 M
0 3840 V
1.000 UL
LTb
4580 600 M
0 63 V
0 3777 R
0 -63 V
0 -3977 R
(10000) Cshow
1.000 UL
LTa
5340 600 M
0 3377 V
0 400 R
0 63 V
1.000 UL
LTb
5340 600 M
0 63 V
0 3777 R
0 -63 V
0 -3977 R
(12000) Cshow
1.000 UL
LTa
6100 600 M
0 3377 V
0 400 R
0 63 V
1.000 UL
LTb
6100 600 M
0 63 V
0 3777 R
0 -63 V
0 -3977 R
(14000) Cshow
1.000 UL
LTa
6860 600 M
0 3840 V
1.000 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
0 -3977 R
(16000) Cshow
1.000 UL
LTb
780 600 M
6080 0 V
0 3840 V
-6080 0 V
780 600 L
200 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(% error rate) Cshow
grestore
3820 100 M
(# labeled examples) Cshow
3820 4740 M
( letter dataset) Cshow
1.000 UL
LT0
5957 4277 M
(random) Rshow
6077 4277 M
543 0 V
1018 4440 M
142 -862 V
190 -540 V
190 -409 V
190 -210 V
190 -251 V
190 -143 V
190 -119 V
190 -122 V
190 -76 V
190 -56 V
190 -55 V
190 -49 V
190 -36 V
190 -40 V
190 -48 V
190 -22 V
190 -46 V
190 -29 V
190 -11 V
190 -32 V
190 -7 V
190 -23 V
190 -34 V
190 -5 V
190 -30 V
190 -2 V
190 -11 V
190 -13 V
190 -1 V
190 -7 V
190 -34 V
1.000 UL
LT1
5957 4077 M
(active) Rshow
6077 4077 M
543 0 V
992 4440 M
73 -966 V
95 -606 V
95 -444 V
95 -365 V
95 -214 V
95 -211 V
95 -114 V
95 -114 V
95 -61 V
95 -75 V
95 -35 V
95 -46 V
95 -32 V
95 -11 V
95 -13 V
95 -4 V
95 -10 V
95 -3 V
95 -8 V
95 17 V
95 -17 V
95 10 V
95 0 V
95 -18 V
95 16 V
95 -2 V
95 3 V
95 8 V
95 -13 V
95 3 V
95 11 V
95 0 V
95 -2 V
95 -3 V
95 8 V
95 -13 V
95 2 V
95 9 V
95 -2 V
95 -2 V
95 -18 V
95 10 V
95 5 V
95 -12 V
95 7 V
95 -5 V
95 10 V
95 -15 V
95 -4 V
95 9 V
95 17 V
95 -16 V
95 7 V
95 -10 V
95 15 V
95 -22 V
95 20 V
95 -3 V
95 -20 V
95 24 V
95 -14 V
95 19 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument

 endTexFig
 Black 1824 3362 4 250 v Blue 2094 3287 a Fu(\002rst)47
b(r)l(eached)p Black 3523 3362 V Blue 327 w(\045)g(label)p
Black Blue 1091 3536 a(\045)g(err)o(or)p Black 1824 3611
V Blue 102 w(r)n(andom)p Black 2674 3611 V Blue 200 w(activ)o(e)p
Black 3523 3611 V Blue 200 w(savings)p Black 1041 3614
3271 4 v OliveGreen 1324 3789 a(10)p Black 1824 3863
4 250 v OliveGreen 486 w(3,500)p Black 2674 3863 V OliveGreen
358 w(1,500)p Black 3523 3863 V OliveGreen 602 w(57)p
Black OliveGreen 1379 4038 a(5)p Black 1824 4113 V OliveGreen
540 w(9,000)p Black 2674 4113 V OliveGreen 358 w(2,750)p
Black 3523 4113 V OliveGreen 602 w(69)p Black OliveGreen
1379 4287 a(4)p Black 1824 4362 V OliveGreen 430 w(13,000)p
Black 2674 4362 V OliveGreen 359 w(3,500)p Black 3523
4362 V OliveGreen 602 w(73)p Black Blue eop end
%%Page: 72 72
TeXDict begin @landscape 72 71 bop Blue Red -300 274
2739 34 v Blue White -304 233 a Fv(A)l(pplication:)55
b(D)o(etecting)45 b(F)-10 b(aces)p Blue White -2729 w(A)l(pplication:)
55 b(D)o(etecting)45 b(F)-10 b(aces)p Blue White -300
229 a(A)l(pplication:)55 b(D)o(etecting)45 b(F)-10 b(aces)p
Blue White -300 237 a(A)l(pplication:)55 b(D)o(etecting)45
b(F)-10 b(aces)p Blue -300 233 a(A)l(pplication:)55 b(D)o(etecting)45
b(F)-10 b(aces)p Black 4554 439 a Fr([)11 b(V)q(iola)39
b(&)g(J)-5 b(ones])p Blue Red -208 839 a Fs(\017)p Blue
49 w Fu(pr)o(oblem:)56 b(\002nd)46 b(faces)h(in)f(photogr)n(aph)i(or)f
(mo)-6 b(vie)p Red -208 1171 a Fs(\017)p Blue 49 w Fu(w)o(eak)46
b(classi\002ers:)58 b(detect)47 b(light/dar)o(k)g(r)l(ectangles)h(in)e
(image)2220 1337 y
 7578087 7502292 19274055 25194414 20984381 26904739 startTexFig
 2220 1337 a
%%BeginDocument: PS/query-f0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /tmp_mnt/mustang/udir3/mjones/face-detect/IntegralImage/train24x24b/query-f0.ps
%%Creator: XV Version 3.10  Rev: 12/16/94  -  by John Bradley
%%BoundingBox: 293 383 319 409
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 26 string def

% define space for color conversions
/grays 26 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
293 383 translate

% size of image (on paper, in 1/72inch coords)
25.99200 25.99200 scale

26 26 8			% dimensions of data
[26 0 0 -26 0 26]		% mapping matrix
{currentfile pix readhexstring pop}
image

0000000000000000000000000000000000000000000000000000
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffff0000000000000000000000000000000000ffffffff00
00ffffff0000000000000000000000000000000000ffffffff00
00ffffff0000000000000000000000000000000000ffffffff00
00ffffff0000000000000000000000000000000000ffffffff00
00ffffff00ffffffffffffffffffffffffffffff00ffffffff00
00ffffff00ffffffffffffffffffffffffffffff00ffffffff00
00ffffff0000000000000000000000000000000000ffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
0000000000000000000000000000000000000000000000000000

showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer
%%EOF

%%EndDocument

 endTexFig
 3280 1337 a
 7578087 7502292 19274055 25194414 20984381 26904739 startTexFig
 3280 1337 a
%%BeginDocument: PS/query-f1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /tmp_mnt/mustang/udir3/mjones/face-detect/IntegralImage/train24x24b/query-f1.ps
%%Creator: XV Version 3.10  Rev: 12/16/94  -  by John Bradley
%%BoundingBox: 293 383 319 409
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 26 string def

% define space for color conversions
/grays 26 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
293 383 translate

% size of image (on paper, in 1/72inch coords)
25.99200 25.99200 scale

26 26 8			% dimensions of data
[26 0 0 -26 0 26]		% mapping matrix
{currentfile pix readhexstring pop}
image

0000000000000000000000000000000000000000000000000000
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffff00000000000000000000000000ffffffffffff00
00ffffffffff0000000000ffffff0000000000ffffffffffff00
00ffffffffff0000000000ffffff0000000000ffffffffffff00
00ffffffffff0000000000ffffff0000000000ffffffffffff00
00ffffffffff0000000000ffffff0000000000ffffffffffff00
00ffffffffff0000000000ffffff0000000000ffffffffffff00
00ffffffffff0000000000ffffff0000000000ffffffffffff00
00ffffffffff00000000000000000000000000ffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
00ffffffffffffffffffffffffffffffffffffffffffffffff00
0000000000000000000000000000000000000000000000000000

showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer
%%EOF

%%EndDocument

 endTexFig
 1160 2362 a
 7578087 7578087 19339837 25260195 20918599 26838958 startTexFig
 1160 2362 a
%%BeginDocument: PS/query.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /tmp_mnt/mustang/udir3/mjones/face-detect/IntegralImage/train24x24b/query.ps
%%Creator: XV Version 3.10  Rev: 12/16/94  -  by John Bradley
%%BoundingBox: 294 384 318 408
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 24 string def

% define space for color conversions
/grays 24 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
294 384 translate

% size of image (on paper, in 1/72inch coords)
23.97600 23.97600 scale

24 24 8			% dimensions of data
[24 0 0 -24 0 24]		% mapping matrix
{currentfile pix readhexstring pop}
image

110d0b0f3a8293a2acb3c3c7c2beb5b3a59d9264280e0709
150f0d18588592a0acb5bec3bbb4aaaaa5988e65240b0309
1b0f0e2565828d99aaafb7bab7b4b4ada2978b6723080505
39111344697e98a7b1b8c1c1c0c4c3baac98826d51140407
73131e556177889fadbfc7c7c3c0a58d8e6b5c5b6c2a0a08
9f3c2b594f444d5c6183a0b2a47c5d58885d4c575a300a07
bf784b5e5b46413a5f657cb48d73857363565d58434f1008
cc8f59926354546697837cb78e8b97908975726467601208
dcc2988e897c8586978a73ad958ca9aba7a59a7073541409
ded6a06f858798989c857fa39689a5b7b4b79a786652190c
dfdaa07169849da3967a85a59a8e95aeb4a08e816559310e
e0deab70768a939d8b848cb1a09294aeb6aea47d6b5f3b0f
dfe0c4766f829ca3987a90ba958897afb4ae9571634f290e
e1e0db9b6d748d989682808a8392a5afafa78d7562432515
e1e0e1bf757885917e8b989da7a39ca0a6a08b7a5f365044
e1e1dfd78f7e88907068879ba095807e97a5917e5647bc89
e1e0e2e1b67e88978c6c7198a192718ca8a48b7a4061d7c8
dfe2e2e1b7637687987b708b938c8fa3aa9b81604f7fdfdf
dfddd9cb966262788e937f7d82959fab9c8d7a5570a8e3e0
b8a7a09488755a6478899492a1abaaab8d7a675e78b1e4e5
898e8d90867b74526579969aaeacac97736e4f73799ed4dc
87888e8c887c855e5368849aa4a69d78755d5c847997a8ae
88888f89877d907c56585f7c8a907d765f5c858d809fa1a4
82879389877d96977477706a696c6766748699928f9d9ea4

showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer
%%EOF

%%EndDocument

 endTexFig
 2220 2372 a
 7578087 7502292 19274055 25194414 20984381 26904739 startTexFig
 2220 2372 a
%%BeginDocument: PS/query-i0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /tmp_mnt/mustang/udir3/mjones/face-detect/IntegralImage/train24x24b/query-i0.ps
%%Creator: XV Version 3.10  Rev: 12/16/94  -  by John Bradley
%%BoundingBox: 293 383 319 409
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 26 string def

% define space for color conversions
/grays 26 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
293 383 translate

% size of image (on paper, in 1/72inch coords)
25.99200 25.99200 scale

26 26 8			% dimensions of data
[26 0 0 -26 0 26]		% mapping matrix
{currentfile pix readhexstring pop}
image

0000000000000000000000000000000000000000000000000000
00110d0b0f3a8293a2acb3c3c7c2beb5b3a59d9264280e070900
00150f0d18588592a0acb5bec3bbb4aaaaa5988e65240b030900
001b0f0e2565828d99aaafb7bab7b4b4ada2978b672308050500
0039111344697e98a7b1b8c1c1c0c4c3baac98826d5114040700
0073131e556177889fadbfc7c7c3c0a58d8e6b5c5b6c2a0a0800
009f3c2b00000000000000000000000000000000005a300a0700
00bf784b0000000000000000000000000000000000434f100800
00cc8f5900000000000000000000000000000000006760120800
00dcc29800000000000000000000000000000000007354140900
00ded6a000ffffffffffffffffffffffffffffff006652190c00
00dfdaa000ffffffffffffffffffffffffffffff006559310e00
00e0deab00000000000000000000000000000000006b5f3b0f00
00dfe0c4766f829ca3987a90ba958897afb4ae9571634f290e00
00e1e0db9b6d748d989682808a8392a5afafa78d756243251500
00e1e0e1bf757885917e8b989da7a39ca0a6a08b7a5f36504400
00e1e1dfd78f7e88907068879ba095807e97a5917e5647bc8900
00e1e0e2e1b67e88978c6c7198a192718ca8a48b7a4061d7c800
00dfe2e2e1b7637687987b708b938c8fa3aa9b81604f7fdfdf00
00dfddd9cb966262788e937f7d82959fab9c8d7a5570a8e3e000
00b8a7a09488755a6478899492a1abaaab8d7a675e78b1e4e500
00898e8d90867b74526579969aaeacac97736e4f73799ed4dc00
0087888e8c887c855e5368849aa4a69d78755d5c847997a8ae00
0088888f89877d907c56585f7c8a907d765f5c858d809fa1a400
0082879389877d96977477706a696c6766748699928f9d9ea400
0000000000000000000000000000000000000000000000000000

showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer
%%EOF

%%EndDocument

 endTexFig
 3280 2372 a
 7578087 7502292 19274055 25194414 20984381 26904739 startTexFig
 3280 2372 a
%%BeginDocument: PS/query-i1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /tmp_mnt/mustang/udir3/mjones/face-detect/IntegralImage/train24x24b/query-i1.ps
%%Creator: XV Version 3.10  Rev: 12/16/94  -  by John Bradley
%%BoundingBox: 293 383 319 409
%%Pages: 1
%%DocumentFonts:
%%EndComments
%%EndProlog

%%Page: 1 1

% remember original state
/origstate save def

% build a temporary dictionary
20 dict begin

% define string to hold a scanline's worth of data
/pix 26 string def

% define space for color conversions
/grays 26 string def  % space for gray scale line
/npixls 0 def
/rgbindx 0 def

% lower left corner
293 383 translate

% size of image (on paper, in 1/72inch coords)
25.99200 25.99200 scale

26 26 8			% dimensions of data
[26 0 0 -26 0 26]		% mapping matrix
{currentfile pix readhexstring pop}
image

0000000000000000000000000000000000000000000000000000
00110d0b0f3a8293a2acb3c3c7c2beb5b3a59d9264280e070900
00150f0d1858000000000000000000000000008e65240b030900
001b0f0e25650000000000ffffff00000000008b672308050500
0039111344690000000000ffffff0000000000826d5114040700
0073131e55610000000000ffffff00000000005c5b6c2a0a0800
009f3c2b594f0000000000ffffff00000000004c575a300a0700
00bf784b5e5b0000000000ffffff00000000005d58434f100800
00cc8f5992630000000000ffffff000000000072646760120800
00dcc2988e89000000000000000000000000009a707354140900
00ded6a06f858798989c857fa39689a5b7b4b79a786652190c00
00dfdaa07169849da3967a85a59a8e95aeb4a08e816559310e00
00e0deab70768a939d8b848cb1a09294aeb6aea47d6b5f3b0f00
00dfe0c4766f829ca3987a90ba958897afb4ae9571634f290e00
00e1e0db9b6d748d989682808a8392a5afafa78d756243251500
00e1e0e1bf757885917e8b989da7a39ca0a6a08b7a5f36504400
00e1e1dfd78f7e88907068879ba095807e97a5917e5647bc8900
00e1e0e2e1b67e88978c6c7198a192718ca8a48b7a4061d7c800
00dfe2e2e1b7637687987b708b938c8fa3aa9b81604f7fdfdf00
00dfddd9cb966262788e937f7d82959fab9c8d7a5570a8e3e000
00b8a7a09488755a6478899492a1abaaab8d7a675e78b1e4e500
00898e8d90867b74526579969aaeacac97736e4f73799ed4dc00
0087888e8c887c855e5368849aa4a69d78755d5c847997a8ae00
0088888f89877d907c56585f7c8a907d765f5c858d809fa1a400
0082879389877d96977477706a696c6766748699928f9d9ea400
0000000000000000000000000000000000000000000000000000

showpage

% stop using temporary dictionary
end

% restore original state
origstate restore

%%Trailer
%%EOF

%%EndDocument

 endTexFig
 Red -208 3667 a Fs(\017)p Blue 49 w Fu(many)f(clev)o(er)j(tr)r(icks)f
(to)g(make)f(extr)l(emely)h(fast)f(and)g(accur)n(ate)p
eop end
%%Page: 73 73
TeXDict begin @landscape 73 72 bop Blue Red -300 464
1191 34 v Blue White -304 422 a Fv(C)n(onclusions)p Blue
White -1183 w(C)n(onclusions)p Blue White -300 418 a(C)n(onclusions)p
Blue White -300 426 a(C)n(onclusions)p Blue -300 422
a(C)n(onclusions)p Red -208 869 a Fs(\017)p Blue Red
-56 894 2444 17 v Blue White 45 w Fu(boosting)47 b(is)f(a)h(pr)n
(actical)g(tool)p Blue White -2435 w(boosting)g(is)g(a)f(pr)n(actical)h
(tool)p Blue White -56 865 a(boosting)g(is)f(a)h(pr)n(actical)g(tool)p
Blue White -56 873 a(boosting)g(is)f(a)h(pr)n(actical)g(tool)p
Blue -56 869 a(boosting)g(is)f(a)h(pr)n(actical)g(tool)f(for)h
(classi\002cation)h(and)e(other)-56 1118 y(lear)r(ning)g(pr)o(oblems)p
YellowOrange 38 1409 a Fp(\017)p Blue 48 w Fu(gr)o(ounded)h(in)f(r)r
(ich)i(theor)t(y)p YellowOrange 38 1658 a Fp(\017)p Blue
48 w Fu(per)r(for)r(ms)f(w)o(ell)e(exper)r(imentally)p
YellowOrange 38 1907 a Fp(\017)p Blue 48 w Fu(often)i(\(but)g(not)f
(always!\))57 b(r)l(esistant)47 b(to)g(o)-6 b(v)o(er)r(\002tting)p
YellowOrange 38 2156 a Fp(\017)p Blue 48 w Fu(many)46
b(applications)g(and)g(extensions)p Red -208 2488 a Fs(\017)p
Blue Red -56 2513 1039 17 v Blue White 45 w Fu(many)f(ways)p
Blue White -1031 w(many)h(ways)p Blue White -56 2484
a(many)f(ways)p Blue White -56 2492 a(many)g(ways)p Blue
-56 2488 a(many)g(ways)h(to)h(think)g(about)f(boosting)p
YellowOrange 38 2779 a Fp(\017)p Blue 48 w Fu(none)h(is)g(entir)l(ely)f
(satisfactor)t(y)h(b)-5 b(y)45 b(itself,)158 3028 y(but)i(each)g
(useful)g(in)f(its)h(o)-6 b(wn)46 b(way)p YellowOrange
38 3277 a Fp(\017)p Blue 48 w Fu(consider)n(able)h(r)o(oom)g(for)f(fur)
r(ther)i(theor)l(etical)g(and)e(exper)r(imental)158 3526
y(wor)o(k)p eop end
%%Page: 74 74
TeXDict begin @landscape 74 73 bop Blue Red -300 1312
1050 34 v Blue White -304 1270 a Fv(R)l(efer)l(ences)p
Blue White -1041 w(R)l(efer)l(ences)p Blue White -300
1266 a(R)l(efer)l(ences)p Blue White -300 1274 a(R)l(efer)l(ences)p
Blue -300 1270 a(R)l(efer)l(ences)p Black -251 1651 a
Fq(R)m(on)32 b(M)l(eir)g(and)g(G)n(unnar)g(R)1291 1649
y(\250)1282 1651 y(atsch.)41 b(An)32 b(I)m(ntr)o(oduction)g(to)g(B)o
(oosting)f(and)h(Lev)o(er)o(aging.)-56 1833 y(I)m(n)g
Fa(A)q(dv)o(anced)i(Lectur)l(es)e(on)g(M)o(achine)h(Learning)f
(\(LNAI2600\))p Fq(,)h(2003.)-56 2016 y(http://www)-11
b(.boosting.or)o(g/papers/M)l(eiR)n(ae03.pdf)-251 2282
y(R)m(ober)q(t)32 b(E.)g(Schapir)m(e)m(.)40 b(The)32
b(boosting)f(appr)o(oach)i(to)f(machine)g(lear)q(ning:)39
b(An)32 b(o)l(v)o(er)s(view)-11 b(.)-56 2464 y(I)m(n)32
b Fa(MSRI)h(W)-9 b(or)m(kshop)32 b(on)g(N)l(onlinear)h(E)q(stimation)g
(and)f(Classi\002cation)p Fq(,)i(2002.)-56 2647 y(http://www)-11
b(.cs)m(.pr)q(inceton.edu/)p Fp(\030)p Fq(schapir)m(e/boost.html)p
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
